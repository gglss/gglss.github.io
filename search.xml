<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>上海游玩日记</title>
    <url>/posts/546861677.html</url>
    <content><![CDATA[<p>上个月心血来潮想去上海玩，然后第二天早上七点就坐高铁去上海</p>
<p>刚到上海就在上海闲林街道进行打卡，拍照技术太差，还是审美不好，弄成这种拍照不好的样子，还有那个地方人超级多，拍照的人也很多，转了下就离开了</p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061837830.jpg" alt="IMG_1487"></p>
<p>在换地方的路上</p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061837111.jpg" alt="IMG_1492"></p>
<p>晚上天气不太好，去了东方明珠塔，上了顶拍照，可惜晚上灯光太亮，拍不好，上面的玻璃感觉有点脏，白天应该会更好吧</p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061838903.jpg" alt="IMG_1515"></p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061838110.jpg" alt="IMG_1516"></p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061838268.jpg" alt="IMG_1527"></p>
<p>东方塔一层有上海历史变迁的博物馆,从里面可以看到上海近百年的变迁</p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061842311.jpg" alt="IMG_1567"></p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061845547.jpg" alt="IMG_1577"></p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061845175.jpg" alt="IMG_1578"></p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061845151.jpg" alt="IMG_1584"></p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061845274.jpg" alt="IMG_1586"></p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061846026.jpg" alt="IMG_1587"></p>
<p>第二天起来都十点多了，吃了个灌汤包，感觉味道一般，不符合口味，价格很贵</p>
<p>然后去思南公馆去打卡，哪里是许多名人的住所，拍照很好看，文艺气息很浓厚</p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061853249.jpg" alt="IMG_1616"></p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061853927.jpg" alt="IMG_1619"></p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061853203.jpg" alt="IMG_1623"></p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061853549.jpg" alt="IMG_1625"></p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061853832.jpg" alt="IMG_1629"></p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061854205.jpg" alt="IMG_1633"></p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061854413.jpg" alt="IMG_1651"></p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061854498.jpg" alt="IMG_1659"></p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061854449.jpg" alt="IMG_1660"></p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061854235.jpg" alt="IMG_1662"></p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061855976.jpg" alt="IMG_1670"></p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061855197.jpg" alt="IMG_1676"></p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061854744.jpg" alt="IMG_1679"></p>
<p><img src="https://cdn.jsdelivr.net/gh/gglss/figurebed@main/img/202401061854917.jpg" alt="IMG_1683"></p>
<p>这里就是最后一站，然后就回了杭州了</p>
]]></content>
      <categories>
        <category>日常杂谈</category>
      </categories>
      <tags>
        <tag>旅游</tag>
      </tags>
  </entry>
  <entry>
    <title>真正厉害的人都戒掉了玻璃心</title>
    <url>/posts/1672051471.html</url>
    <content><![CDATA[<p>  I grew up with my identical twin, who was an incredibly loving brother. Now, one thing about being a twin is, it makes you an expert at spotting favoritism. If his cookie was even slightly bigger than my cookie, I had questions. And clearly, I wasn’t starving</p>
<p>我和我的双胞胎哥哥一起长大，他是个富有爱心的好兄弟。要知道，作为双胞胎，你很快 就在一件事上成为专家，就是注意到偏爱。如果他的饼干比我的大 哪怕一点点，我就会质疑。当然我也没被饿着。</p>
<p>identical adj.相同的</p>
<p>slightly   adv.轻微地</p>
<p>psychologist   n心理学家</p>
<hr>
<p>  When I became a psychologist, I began to notice favoritism of a different kind; and that is, how much more we value the body than we do the mind. I spent nine years at university earning my favoritism doctorate in psychology, and I can’t tell you how many people look at my business card and say, “Oh - - a psychologist. So, not a real doctor,” as if it should say that on my card. This favoritism doctorate we show the body over the mind - - I see it everywhere.</p>
<p>当我成为一-个心理学家，我开始 注意到另一种不同的偏爱，那就是我们赋子我们的身体 比精神更多的价值。我花了九年时问 获得心理学博士学位，但不知道有多少人看了我的名片说，“哦，心理学家，原水不是真正的医生。”就好像我的名片上就该明确说明似的。这种对身体多于精神的偏爱随处可见。</p>
<p>psychologist  n.心理学家</p>
<p>doctorate  n.博士学位</p>
<p>favoritism  n.偏袒</p>
<hr>
<p>  I recently was at a friend’s house, and their fivc-year-old was getting ready for bed. He was standing on a stool by the sink, brushing his teeth, when he slipped and scratched his leg on the stool when he fell. He cried for a minute, but then he got back up, got back on the stool, and reached out for a box of BandAids to put one on his cut.</p>
<hr>
<p>Now, this kid could barely tie his shoelaces, but he knew you have to cover a cut so it doesn’t become infected, and you have to care for your teeth by brushing twice a day. We all know how to maintain our physical health and how to practice dental hygiene, right? We’ve known it since we were five years old. But what do we know about maintaining our psychological health? Well, nothing. What do we teach our children about emotional hygiene? Nothing. How is it that we spend more time taking care of our teeth than we do our minds? Why is it that our physical health is so much more important to us than our psychological health?</p>
<p>这孩子刚学会系鞋带儿，但他都知道要保护伤口以免感染，同时还要一天刷两次牙来保护牙齿。我们都知道怎样保特身体的健康 还有怎样保持牙齿卫生，对不对：我们从五岁起就知道这些东西了。但是我们知道怎样 保持精神上的健康吗？完全不知道。我们教给孩子们情绪保健吗？完全没有。为什么我们花在牙齿的时间 比花在精神的时间上还多呢？ 为什么我们那么重视身体健康 远远多于心理健康呢？</p>
<hr>
<p>We sustain psychological injuries even more often than we do physical ones, injuries like failure or rejection or loneliness. And they can also get worse if we ignore them, and they can impact our lives in dramatic ways. And yet, even though there are scientifically proven techniques we could use to treat these kinds of psychological injuries, we don’t. It doesn’t even occur to us that we should. “Oh, you’re feeling depressed? Just shake it off; it’s all in your head.” Can you imagine saying that to somebody with a broken leg: “Oh, just walk it off; it’s all in vour leg.”</p>
<p>我们承受心理上的伤害 比身体上的多得多，例如失败，被拒绝，孤独。如果我们忽视它们，情况也会恶化，它们同样会给我们的生活带米重大的影响。然而，虽然有科学证实的疗法 米帮助我们治疗 这些心理上的伤害，我们却不采取行动。我们甚至都没意识到 我们应该采取行动。“哦，你感到抑郁么？ 别去想了，都在你脑袋甲。”你能想象对一个骨折了的人说这样的话吗？“哦、走走就好了，都在你腿上。</p>
<hr>
<p>It is time we closed the gap between our physical and our psychological health. It’s time we made them more equal, more like twins.Speaking of which, my brother is aiso a psychologist. So he’s not a real doctor, either.</p>
<p>我们应该消除这种对身体和 精神健康的区别对待。应该把两者对等起水，像双胞胎一样。说起双胞胎，我哥哥也是个心理医生。所以他也不是真正的医生。</p>
<hr>
<p>We didn’t study together, though. In fact, the hardest thing I’ve ever done in my life is move across the Atlantic to New York City to get my doctorate in psychology. We were apart then for the first time in our lives, and the separation was brutal for both of us. But while he remained among family and friends, I was alone in a new country. We missed each other terribly, but international phone calls were really expensive then, and we could only afford to speak for five minutes a week. When our birthday rolled around, it was the first we wouldn’t be spending together. We decided to splurge, and that week, we would talk for 10 minutes.</p>
<p>我们不是在一起上的学。事实上，我这辈子经历过的最困难的事就是跨过大西洋搬到红约 来读心理学的博士学位。那是我们俩第一次分隔两地，这个分离对我俩来说都很残酷。当他和家人朋友一起</p>
<p>吋，我却孤单的在—-个新的国度。我们都非常想念对方，但那吋候国际长途都很贵 我们一周只打的起五分钟的电话。当我们生日快到了的时候，那是我们第一个 没在一起过的生日。我们决定奢侈把，在那个星期聊上十分钟。</p>
<hr>
<p>I spent the morning pacing around my room, waiting for him to call — and waiting.. and waiting. But the phone didn’t ring</p>
<p>我那天早上在房间里踱来踱去，等着我哥哥给我打过来 - 我等啊等啊，电话就是不响。</p>
<hr>
<p>Given the time difference, I assumed, “OK, he’s out with friends. he’ll call later.” There were no cell phones then. But he didn’t. And I began to realize that after being away for over 10 months, he no longer missed me the way I missed him. I knew he would call in the morning, but that night was one of the saddest and longest nights of my life. I woke up the next morning. I glanced down at the phone, and I realized I had kicked it off the hook when pacing the day before. I stumbled out of bed, I put the phone back on the receiver, and it rang a second later. And it was my brother, and boy, was he pissed.</p>
<p>由于时差的关系，我就想，“好吧，他一定是和朋友在一起，他晚点 v绊倒儿会打水的。”那时候也没有手机。但他始终没打来。我开妤意识到，在我商开十个月以后，他不再像我想他那样想我了。我知道他早上会打米，但那一晚是我一生中 最份心，最漫长的一晚。第二天一早醒来，我职了一-眼电话，我意识到，来回跛步吋 我把电话线踹下水了我迷迷糊糊的跳下床，我刚把电话插回接口，一秒钟之后电话就响了。是我哥哥，他可气坏了。</p>
<hr>
<p>It was the saddest and longest night of his life as well. Now, I tried to explain what happened, but he said, “I don’t understand. If you saw I wasn’t calling you, why didn’t you just pick up the phone and call me?” He was right. Why didn’t I call him? I didn’t have an answer then. But I do today, and it’s a simple one: loneliness.</p>
<p>那也是他一生中 最伤心漫长的一夜。当我跟他解释事情的经过，他说，“我不明白。你看我没给你打，你为什么不打给我呢？”他说的对。我为什么不打给他呢？我当时无法解释，但我现在明白了，非常简单的原因：孤独。</p>
<hr>
<p>Loneliness creates a deep psychological wound, one that distorts our perceptions and scrambies our thinking. It makes us believe that those around us care much less than they actuaily do. It make us really afraid to reach out, because why set yourself up for reiection and heartache when your heart is already aching more than you can stand? I was in the grips of real loneliness back then, but I was surrounded by people all day, so it never occurred to me. But loneliness is defined purely subjectively. It depends solely on whether you feel emotionally or socially disconnected from those around you. And I did.</p>
<p>孤独导致深重的心理创伤，扭曲我们的感知能力，剥夺我们的思考能力。它使我们相信 身边的人不再在乎我们。 它使我们不取与人联络，为什么给自取其辱被拒绝呢？ 你的心痛的还不够多么？我那个时候被孤独紧紧包裹着，但我总和别人在一起，我自己都没意识到。但孤独是完全从主观上定义的。它完全取决于你是否觉得 在情绪上或是交际上 和你周围的人相隔绝。我当时是这样的。</p>
<hr>
<p>There is a lot of research on loneliness, and all of it is horrifying.</p>
<p>Loneliness won’t just make you miserable; it will kill you. I’m</p>
<p>not kidding. Chronic loneliness increases your likelihood of an early death by 14 percent. Fourteen percent! Loneliness causes high blood pressure, high cholesterol. It even suppress the functioning of your immune system, making you vulnerable to</p>
<p>cholesterol</p>
<p>n胆固醇</p>
<p>all kinds of illnesses and diseases. In fact. scientists have concluded that taken together, chronic loneliness poses as significant a risk for your long-term health and longevity as</p>
<p>vulnerable</p>
<p>adi.脆弱的</p>
<p>cigarette smoking.</p>
<p>我们有很多关于孤独的研究， 都很可怕。孤独不仅让你觉得凄惨，它还可能致死。我可不是开玩笑。长期的抓独 会增加你早逝的可能性 高达14%之多。孤独可能导致 高血乐，高胆固醇。它甚至会影响你的免疫系统，使你容易患上各种疾病。事实上，科学家已经得出结论，长期的孤独对你的健康和长寿的负面影响比抽烟还要糟。</p>
]]></content>
      <categories>
        <category>学习日常</category>
      </categories>
      <tags>
        <tag>English</tag>
      </tags>
  </entry>
  <entry>
    <title>english one</title>
    <url>/posts/44160.html</url>
    <content><![CDATA[<h1 id="记录的目的"><a href="#记录的目的" class="headerlink" title="记录的目的"></a>记录的目的</h1><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>想学习英语，目前的一个目标也可能是因为考研吧，在学校的时候专升本考试真是没有重视，导致面临了这个一个尴尬的局面（当时考虑的是学历不重要，结果刚出学校社会就给出一个巴掌），还是要有一个学历，英语在工作中也是要使用的，加油！</p>
</div>
<h1 id="学习进程"><a href="#学习进程" class="headerlink" title="学习进程"></a>学习进程</h1><p>目前在使用<code>不背单词</code>软件背单词，但是心里总想偷懒，特意做记录一下，学习长难句也会在这个博客上进行记录</p>
<h2 id="原文"><a href="#原文" class="headerlink" title="原文"></a>原文</h2><div class="note red icon-padding simple"><i class="note-icon fas fa-fan"></i><p>  Curbs on business-method claims would be a dramatic about-face, because it was the </p>
<p>Federal Circuit itself that introduced such patents with its 1998 decision in the so-called </p>
<p>State Street Bank case, approving a patent on a way of pooling mutual-fund assets.</p>
<p> 【2010英语一Text2】</p>
</div>
<h2 id="分析过程"><a href="#分析过程" class="headerlink" title="分析过程"></a>分析过程</h2><ol>
<li>找动词</li>
<li>划分主从句</li>
<li>进行翻译</li>
</ol>
<hr>
<div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>curb：控制</p>
<p>about-face (about turn)：重大转变</p>
<p>business-method：商业方法</p>
<p>claim：声称、要求拥有</p>
<p>dramatic：戏剧化的、喜剧的</p>
<p>patent：专利，专利权</p>
<p>circuit：环行、电路、巡回</p>
</div>
]]></content>
      <categories>
        <category>学习日常</category>
      </categories>
      <tags>
        <tag>English</tag>
      </tags>
  </entry>
  <entry>
    <title>长难句一</title>
    <url>/posts/13923.html</url>
    <content><![CDATA[<h2 id="原句"><a href="#原句" class="headerlink" title="原句"></a>原句</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs english">		Curbs on business-method claims would be a dramatic about-face, because it was the <br>		<br>Federal Circuit itself that introduced such patents with its 1998 decision in the so-called <br><br>State Street Bank case, approving a patent on a way of pooling mutual-fund assets.<br><br>【2010英语一Text2】<br></code></pre></td></tr></table></figure>
<h2 id="提取单词"><a href="#提取单词" class="headerlink" title="提取单词"></a>提取单词</h2><p><code>business:</code> 商业                                                                </p>
<p><code>claim:</code>  宣称，声称，断言</p>
<p><code>dramatic:</code> 巨大而广阔的</p>
<p><code>about-face:</code>   n.   (思想、态度、行为等）彻底改变；  v. 向后转（同 about-turn）</p>
<p><code>federal:</code>     adj.  联邦的，政府的</p>
<h3 id="分割"><a href="#分割" class="headerlink" title="分割"></a>分割</h3> <font background=#00ffff>Curbs on business-method claims would be a dramatic about-face,</font><font background=#cf0db9> because it was the Federal Circuit itself that introduced such patents with its 1998 decision in the so-called State Street Bank case,</font>

<figure class="highlight html"><table><tr><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;font-size:2rem; background:yellow; color:red;&quot;</span>&gt;</span>**Bang! Bang! Banki Banki Seiki Banki!**<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br></code></pre></td></tr></table></figure>
<p><span style="background:yellow;">State Street Bank case,</span></p>
<pre><code> Curbs on business-method &lt;font color=#0d26e5&gt;claims&lt;/font&gt; would be a dramatic about-face, because it was the  Federal Circuit 
</code></pre><p>itself that introduced such patents with its 1998 decision in the so-called </p>
<p>State Street Bank case, approving a patent on a way of pooling mutual-fund assets.</p>
]]></content>
      <categories>
        <category>学习日常</category>
      </categories>
      <tags>
        <tag>English</tag>
      </tags>
  </entry>
  <entry>
    <title>Tag Plugins Plus</title>
    <url>/posts/1450282867.html</url>
    <content><![CDATA[<blockquote>
<p> 引用自<a href="https://blog.bywind.xyz/posts/e9cd2bbc.html">bywind</a></p>
<p> 引用自<a href="https://akilar.top/posts/615e2dec/">akilar</a></p>
</blockquote>
<div class="tag link"><a class="link-card" title="" href=""><div class="left"><img src="/img/link.png"/></div><div class="right"><p class="text"></p><p class="url"></p></div></a></div>
<div class="tag link"><a class="link-card" title="" href=""><div class="left"><img src="/img/link.png"/></div><div class="right"><p class="text"></p><p class="url"></p></div></a></div>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ul>
<li>安装插件</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">npm install hexo-butterfly-tag-plugins-plus --save<br></code></pre></td></tr></table></figure>
<ul>
<li>重新安装渲染插件</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">npm uninstall hexo-renderer-marked --save<br>npm install hexo-renderer-kramed --save<br></code></pre></td></tr></table></figure>
<ul>
<li>添加配置信息</li>
</ul>
<p>在主题配置文件<code>_config.butterfly.yml</code>后面添加</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># tag-plugins-plus</span><br><span class="hljs-comment"># see https://akilar.top/posts/615e2dec/</span><br><span class="hljs-attr">tag_plugins:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># 开关</span><br>  <span class="hljs-attr">priority:</span> <span class="hljs-number">5</span> <span class="hljs-comment">#过滤器优先权</span><br>  <span class="hljs-attr">issues:</span> <span class="hljs-literal">false</span> <span class="hljs-comment">#issues标签依赖注入开关</span><br>  <span class="hljs-attr">link:</span><br>    <span class="hljs-attr">placeholder:</span> <span class="hljs-string">/img/link.png</span> <span class="hljs-comment">#link_card标签默认的图标图片</span><br>  <span class="hljs-attr">CDN:</span><br>    <span class="hljs-attr">anima:</span> <span class="hljs-string">https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/font-awesome-animation.min.css</span> <span class="hljs-comment">#动画标签anima的依赖</span><br>    <span class="hljs-attr">jquery:</span> <span class="hljs-string">https://npm.elemecdn.com/jquery@latest/dist/jquery.min.js</span> <span class="hljs-comment">#issues标签依赖</span><br>    <span class="hljs-attr">issues:</span> <span class="hljs-string">https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/issues.js</span> <span class="hljs-comment">#issues标签依赖</span><br>    <span class="hljs-attr">iconfont:</span> <span class="hljs-string">//at.alicdn.com/t/font_2032782_8d5kxvn09md.js</span> <span class="hljs-comment">#参看https://akilar.top/posts/d2ebecef/</span><br>    <span class="hljs-attr">carousel:</span> <span class="hljs-string">https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/carousel-touch.js</span><br>    <span class="hljs-attr">tag_plugins_css:</span> <span class="hljs-string">https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/tag_plugins.css</span><br></code></pre></td></tr></table></figure>
<p>参数事宜</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">备选值/类型</th>
<th style="text-align:left">释义</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">enable</td>
<td style="text-align:left">true/false</td>
<td style="text-align:left">【必选】控制开关</td>
</tr>
<tr>
<td style="text-align:left">priority</td>
<td style="text-align:left">number</td>
<td style="text-align:left">【可选】过滤器优先级，数值越小，执行越早，默认为10，选填</td>
</tr>
<tr>
<td style="text-align:left">issues</td>
<td style="text-align:left">true/false</td>
<td style="text-align:left">【可选】issues标签控制开关，默认为false</td>
</tr>
<tr>
<td style="text-align:left">link.placeholder</td>
<td style="text-align:left">【必选】link卡片外挂标签的默认图标</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">CDN.anima</td>
<td style="text-align:left">URL</td>
<td style="text-align:left">【可选】动画标签anima的依赖</td>
</tr>
<tr>
<td style="text-align:left">CDN.jquery</td>
<td style="text-align:left">URL</td>
<td style="text-align:left">【可选】issues标签依赖</td>
</tr>
<tr>
<td style="text-align:left">CDN.issues</td>
<td style="text-align:left">URL</td>
<td style="text-align:left">【可选】issues标签依赖</td>
</tr>
<tr>
<td style="text-align:left">CDN.iconfont</td>
<td style="text-align:left">URL</td>
<td style="text-align:left">【可选】iconfont标签symbol样式引入，如果不想引入，则设为false</td>
</tr>
<tr>
<td style="text-align:left">CDN.carousel</td>
<td style="text-align:left">URL</td>
<td style="text-align:left">【可选】carousel旋转相册标签鼠标拖动依赖，如果不想引入则设为false</td>
</tr>
<tr>
<td style="text-align:left">CDN.tag_plugins_css</td>
<td style="text-align:left">URL</td>
<td style="text-align:left">【可选】外挂标签样式的CSS依赖，为避免CDN缓存延迟，建议将@latest改为具体版本号</td>
</tr>
</tbody>
</table>
</div>
<h1 id="分栏Tab"><a href="#分栏Tab" class="headerlink" title="分栏Tab"></a>分栏Tab</h1><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">标签语法</button><button type="button" class="tab " data-href="test1-2">配置参数</button><button type="button" class="tab " data-href="test1-3">源码实例</button><button type="button" class="tab " data-href="test1-4">渲染实例</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">&#123;% tabs Unique name, [index] %&#125;<br>&lt;!-- tab [Tab caption] [@icon] --&gt;<br>Any content (support inline tags too).<br>&lt;!-- endtab --&gt;<br>&#123;% endtabs %&#125;<br></code></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><p>1.Unique name :</p>
<ul>
<li><p>选项卡块标签的唯一名称，不带逗号。</p>
</li>
<li><p>将在#id中用作每个标签及其索引号的前缀。</p>
</li>
<li><p>如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</p>
</li>
<li><p>仅当前帖子/页面的URL必须是唯一的！</p>
</li>
</ul>
<p>2.[index]:</p>
<ul>
<li><p>活动选项卡的索引号。</p>
</li>
<li><p>如果未指定，将选择第一个标签（1）。</p>
</li>
<li><p>如果index为-1，则不会选择任何选项卡。</p>
</li>
<li><p>可选参数。</p>
</li>
</ul>
<p>3.[Tab caption]:</p>
<ul>
<li><p>当前选项卡的标题。</p>
</li>
<li><p>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</p>
</li>
<li><p>如果未指定标题，但指定了图标，则标题将为空。</p>
</li>
<li><p>可选参数。</p>
</li>
</ul>
<p>4.[@icon]:</p>
<ul>
<li><p>FontAwesome图标名称（全名，看起来像“ fas fa-font”）</p>
</li>
<li><p>可以指定带空格或不带空格；</p>
</li>
<li><p>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</p>
</li>
<li><p>可选参数。</p>
</li>
</ul></div><div class="tab-item-content" id="test1-3"><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">&#123;% tabs test1 %&#125;<br>&lt;!-- tab --&gt;<br>**This is Tab 1.**<br>&lt;!-- endtab --&gt;<br><br>&lt;!-- tab --&gt;<br>**This is Tab 2.**<br>&lt;!-- endtab --&gt;<br><br>&lt;!-- tab --&gt;<br>**This is Tab 3.**<br>&lt;!-- endtab --&gt;<br>&#123;% endtabs %&#125;<br></code></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-4"><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">test1 1</button><button type="button" class="tab " data-href="test1-2">test1 2</button><button type="button" class="tab " data-href="test1-3">test1 3</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>
<h1 id="时间轴-timeline"><a href="#时间轴-timeline" class="headerlink" title="时间轴 timeline"></a>时间轴 timeline</h1><div class="tabs" id="test2"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test2-1">标签语法</button><button type="button" class="tab " data-href="test2-2">配置参数</button><button type="button" class="tab " data-href="test2-3">示例源码</button><button type="button" class="tab " data-href="test2-4">示例渲染</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test2-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">&#123;% timeline 时间线标题（可选）[,color] %&#125;<br>&lt;!-- timeline 时间节点（标题） --&gt;<br>正文内容<br>&lt;!-- endtimeline --&gt;<br>&lt;!-- timeline 时间节点（标题） --&gt;<br>正文内容<br>&lt;!-- endtimeline --&gt;<br>&#123;% endtimeline %&#125;<br></code></pre></td></tr></table></figure></div><div class="tab-item-content" id="test2-2"><ul>
<li><code>title</code>: 标题/时间线</li>
<li><code>color</code>: timeline颜色:default(留空) / blue / pink / red / purple / orange / green</li>
</ul></div><div class="tab-item-content" id="test2-3"><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">&#123;% timeline 时间轴样式,blue %&#125;<br><br>&lt;!-- timeline 2020-07-24 [2.6.6 -&gt; 3.0](https://github.com/volantis-x/hexo-theme-volantis/releases) --&gt;<br><br>1. 如果有 `hexo-lazyload-image` 插件，需要删除并重新安装最新版本，设置 `lazyload.isSPA: true`。<br>2. 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 `use_cdn: true` 则需要删除。<br>3. 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。<br>4. 2.x 版本的置顶 `top: true` 改为了 `pin: true`，并且同样适用于 `layout: page` 的页面。<br>5. 如果使用了 `hexo-offline` 插件，建议卸载，3.0 版本默认开启了 pjax 服务。<br><br>&lt;!-- endtimeline --&gt;<br><br>&lt;!-- timeline 2020-05-15 [2.6.3 -&gt; 2.6.6](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6) --&gt;<br><br>不需要额外处理。<br><br>&lt;!-- endtimeline --&gt;<br><br>&lt;!-- timeline 2020-04-20 [2.6.2 -&gt; 2.6.3](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3) --&gt;<br><br>1. 全局搜索 `seotitle` 并替换为 `seo_title`。<br>2. group 组件的索引规则有变，使用 group 组件的文章内，`group: group_name` 对应的组件名必须是 `group_name`。<br>2. group 组件的列表名优先显示文章的 `short_title` 其次是 `title`。<br><br>&lt;!-- endtimeline --&gt;<br><br>&#123;% endtimeline %&#125;<br></code></pre></td></tr></table></figure></div><div class="tab-item-content" id="test2-4"><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴样式</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-07-24 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases">2.6.6 -&gt; 3.0</a></p>
</div></div><div class='timeline-item-content'><ol>
<li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li>
<li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li>
<li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li>
<li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li>
<li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li>
</ol>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-05-15 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6">2.6.3 -&gt; 2.6.6</a></p>
</div></div><div class='timeline-item-content'><p>不需要额外处理。</p>
</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-04-20 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3">2.6.2 -&gt; 2.6.3</a></p>
</div></div><div class='timeline-item-content'><ol>
<li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li>
<li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li>
<li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li>
</ol>
</div></div></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div> 
<h1 id="折叠框-folding"><a href="#折叠框-folding" class="headerlink" title="折叠框 folding"></a>折叠框 folding</h1><div class="tabs" id="test3"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test3-1">标签语法</button><button type="button" class="tab " data-href="test3-2">配置参数</button><button type="button" class="tab " data-href="test3-3">示例源码</button><button type="button" class="tab " data-href="test3-4">示例渲染</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test3-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">&#123;% folding 参数（可选）, 标题 %&#125;<br>![](https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/image-20221203162942063.webp)<br>&#123;% endfolding %&#125;<br></code></pre></td></tr></table></figure></div><div class="tab-item-content" id="test3-2"></div><div class="tab-item-content" id="test3-3"><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">&#123;% folding 查看图片测试 %&#125;<br><br>![](https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/image-20221203162942063.webp)<br><br>&#123;% endfolding %&#125;<br><br>&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;<br><br>这是一个默认打开的折叠框。<br><br>&#123;% endfolding %&#125;<br><br>&#123;% folding green, 查看代码测试 %&#125;<br>假装这里有代码块（代码块没法嵌套代码块）<br>&#123;% endfolding %&#125;<br><br>&#123;% folding yellow, 查看列表测试 %&#125;<br><br>- haha<br>- hehe<br><br>&#123;% endfolding %&#125;<br><br>&#123;% folding red, 查看嵌套测试 %&#125;<br><br>&#123;% folding blue, 查看嵌套测试2 %&#125;<br><br>&#123;% folding 查看嵌套测试3 %&#125;<br><br>hahaha<br><br>&#123;% endfolding %&#125;<br><br>&#123;% endfolding %&#125;<br><br>&#123;% endfolding %&#125;<br></code></pre></td></tr></table></figure></div><div class="tab-item-content" id="test3-4"><details class="folding-tag" ><summary> 查看图片测试 </summary>
              <div class='content'>
              <p><img src="https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/image-20221203162942063.webp" alt=""></p>
              </div>
            </details>

<details class="folding-tag" cyan open><summary> 查看默认打开的折叠框 </summary>
              <div class='content'>
              <p>这是一个默认打开的折叠框。</p>
              </div>
            </details>

<details class="folding-tag" green><summary> 查看代码测试 </summary>
              <div class='content'>
              <p>假装这里有代码块（代码块没法嵌套代码块）</p>
              </div>
            </details>

<details class="folding-tag" yellow><summary> 查看列表测试 </summary>
              <div class='content'>
              <ul><li>haha</li><li>hehe</li></ul>
              </div>
            </details>

<details class="folding-tag" red><summary> 查看嵌套测试 </summary>
              <div class='content'>
              <details class="folding-tag" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha</p>              </div>            </details>              </div>            </details>
              </div>
            </details></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div> 
<h1 id="链接卡片-link"><a href="#链接卡片-link" class="headerlink" title="链接卡片 link"></a>链接卡片 link</h1><div class="tabs" id="test3"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test3-1">标签语法</button><button type="button" class="tab " data-href="test3-2">配置参数</button><button type="button" class="tab " data-href="test3-3">示例源码</button><button type="button" class="tab " data-href="test3-4">示例渲染</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test3-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">&#123;% link [title],[sitename],[link] %&#125;<br></code></pre></td></tr></table></figure></div><div class="tab-item-content" id="test3-2"><ul>
<li><p><code>title</code>: 应用外链标题</p>
</li>
<li><p><code>text</code>: 引用外链名称</p>
</li>
<li><p><code>link</code>: 外链地址</p>
</li>
</ul></div><div class="tab-item-content" id="test3-3"><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">&#123;% link 获取网站的Favicon图标并显示在你的网页上,owen0o0,https://github.com/gglss/ %&#125;<br></code></pre></td></tr></table></figure></div><div class="tab-item-content" id="test3-4"><div class="tag link"><a class="link-card" title="获取网站的Favicon图标并显示在你的网页上" href="gglss"><div class="left"><img src="https://github.com/gglss/"/></div><div class="right"><p class="text">获取网站的Favicon图标并显示在你的网页上</p><p class="url">gglss</p></div></a></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div> 
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>Butterfly</tag>
      </tags>
  </entry>
  <entry>
    <title>语雀同款链接卡片</title>
    <url>/posts/1522287198.html</url>
    <content><![CDATA[<figure class="highlight markdown"><table><tr><td class="code"><pre><code class="hljs markdown">&lt;!-- 使用html是为了高亮代码，不必在意 --&gt;<br>&lt;!-- 参数如下： --&gt;<br>&#123;% link 链接,标题,图标,介绍 %&#125;<br>&lt;!-- 示例如下： --&gt;<br>&#123;% link https://meuicat.com/,MeuiCat,https://meuicat.com/media/favicon.ico,有肉有猫有生活. %&#125;<br>&lt;!-- 你也可以什么都不填，将会全部使用默认值，如下： --&gt;<br>&#123;% card %&#125;<br>&lt;!-- 你也可以省略部分内容，如下： --&gt;<br>&#123;% link https://meuicat.com/ %&#125;<br>&lt;!-- 位置在后面的参数不填的话可以直接省略，但是如果中间的不想填必须留空，如下： --&gt;<br>&#123;% link https://meuicat.com/,,,有肉有猫有生活. %&#125;<br><br></code></pre></td></tr></table></figure>
<div class="tag link"><a class="link-card" title="" href=""><div class="left"><img src="/img/link.png"/></div><div class="right"><p class="text"></p><p class="url"></p></div></a></div>
<hr>

<hr>
<div class="tag link"><a class="link-card" title="" href=""><div class="left"><img src="/img/link.png"/></div><div class="right"><p class="text"></p><p class="url"></p></div></a></div>
<hr>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;<br></code></pre></td></tr></table></figure>
<meta name="referrer" content="https://gitee.com/gglss/figurebed/raw/master/img/2.png" />



<div class="tag link"><a class="link-card" title="" href=""><div class="left"><img src="/img/link.png"/></div><div class="right"><p class="text"></p><p class="url"></p></div></a></div>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>Butterfly</tag>
      </tags>
  </entry>
  <entry>
    <title>Butterfly美化记录</title>
    <url>/posts/54899.html</url>
    <content><![CDATA[<blockquote>
<p>注：这个魔改转载于<a href="https://yisous.xyz/posts/895003b5/">Ariasakaの小窝</a></p>
</blockquote>
<h1 id="导航栏"><a href="#导航栏" class="headerlink" title="导航栏"></a>导航栏</h1><h2 id="分离菜单栏和搜索栏"><a href="#分离菜单栏和搜索栏" class="headerlink" title="分离菜单栏和搜索栏"></a>分离菜单栏和搜索栏</h2><p>让搜索栏放在最右侧，其他的导航栏居中</p>
<p>修改<code>[blogRoot]\themes\Butterfly\layout\includes\header\nav.pug</code>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs pug">nav#nav<br>  span#blog_name<br>    a#site-name(href=url_for(&#x27;/&#x27;)) #[=config.title]<br>    <br>  #menus<br>-    if (theme.algolia_search.enable || theme.local_search.enable)<br>-      #search-button<br>-        a.site-page.social-icon.search<br>-          i.fas.fa-search.fa-fw<br>-          span=&#x27; &#x27;+_p(&#x27;search.title&#x27;)<br>  !=partial(&#x27;includes/header/menu_item&#x27;, &#123;&#125;, &#123;cache: true&#125;)<br>  #nav-right<br>+    if (theme.algolia_search.enable || theme.local_search.enable)<br>+      #search-button<br>+        a.site-page.social-icon.search<br>+          i.fas.fa-search.fa-fw<br>-    #toggle-menu<br>-      a.site-page<br>-        i.fas.fa-bars.fa-fw<br>+      #toggle-menu<br>+        a.site-page<br>+          i.fas.fa-bars.fa-fw<br></code></pre></td></tr></table></figure>
<p>修改的文件<code>nav.pug</code>,版本为<code>Butterfly 4.10.0</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs pug">nav#nav<br>  span#blog-info<br>    a(href=url_for(&#x27;/&#x27;) title=config.title)<br>      if theme.nav.logo<br>        img.site-icon(src=url_for(theme.nav.logo))<br>      if theme.nav.display_title<br>        span.site-name=config.title<br>    <br>  #menus<br>  !=partial(&#x27;includes/header/menu_item&#x27;, &#123;&#125;, &#123;cache: true&#125;)<br><br>  #nav-right<br>   if (theme.algolia_search.enable || theme.local_search.enable || theme.docsearch.enable)<br>     #search-button<br>       a.site-page.social-icon.search(href=&quot;javascript:void(0);&quot;)<br>         i.fas.fa-search.fa-fw<br><br>     #toggle-menu<br>       a.site-page<br>         i.fas.fa-bars.fa-fw<br></code></pre></td></tr></table></figure>
<h2 id="居中"><a href="#居中" class="headerlink" title="居中"></a>居中</h2><p>使用自定义<code>[blogRoot]/self/css/meihua.css</code>,添加下面的代码</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#nav-right</span>&#123;<br>    <span class="hljs-attribute">flex</span>:<span class="hljs-number">1</span> <span class="hljs-number">1</span> auto;<br>    <span class="hljs-attribute">justify-content</span>: flex-end;<br>    <span class="hljs-attribute">margin-left</span>: auto;<br>    <span class="hljs-attribute">display</span>: flex;<br>    <span class="hljs-attribute">flex-wrap</span>:nowrap;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="去掉导航栏下的蓝色长条"><a href="#去掉导航栏下的蓝色长条" class="headerlink" title="去掉导航栏下的蓝色长条"></a>去掉导航栏下的蓝色长条</h2><p>在自定义<code>[blogRoot]/self/css/meihua.css</code>里面添加</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#nav</span> *<span class="hljs-selector-pseudo">::after</span>&#123;<br>    <span class="hljs-attribute">background-color</span>: transparent<span class="hljs-meta">!important</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="子菜单横向布局"><a href="#子菜单横向布局" class="headerlink" title="子菜单横向布局"></a>子菜单横向布局</h2><p>在自定义<code>[blogRoot]/self/css/meihua.css</code>里面添加</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* ----------导航栏横向下拉框---------- */</span><br><br><span class="hljs-selector-class">.menus_item_child</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:not</span>(<span class="hljs-selector-id">#sidebar-menus</span> <span class="hljs-selector-tag">li</span>)&#123;<br>    <span class="hljs-attribute">float</span>: left;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">6px</span><span class="hljs-meta">!important</span>;<br>    -webkit-<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">6px</span><span class="hljs-meta">!important</span>;<br>    -moz-<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">6px</span><span class="hljs-meta">!important</span>;<br>    -ms-<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">6px</span><span class="hljs-meta">!important</span>;<br>    -o-<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">6px</span><span class="hljs-meta">!important</span>;<br>&#125;<br><span class="hljs-selector-class">.menus_item_child</span><span class="hljs-selector-pseudo">:not</span>(<span class="hljs-selector-id">#sidebar-menus</span> <span class="hljs-selector-tag">ul</span>)&#123;<br>    <span class="hljs-comment">/*left:calc(-150%)!important;*/</span><span class="hljs-comment">/*这是估算值，为了保持元素居中的，如果不合适可以自己调*/</span><br>    <span class="hljs-attribute">left</span>:<span class="hljs-number">50%</span>;<br>    translate:-<span class="hljs-number">50%</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="显示标题"><a href="#显示标题" class="headerlink" title="显示标题"></a>显示标题</h2><p>修改<code>[blogRoot]\themes\Butterfly\layout\includes\header\nav.pug</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs pug">nav#nav<br>  span#blog_name<br>    a#site-name(href=url_for(&#x27;/&#x27;)) #[=config.title]<br>    <br>  #menus<br>    !=partial(&#x27;includes/header/menu_item&#x27;, &#123;&#125;, &#123;cache: true&#125;)<br>+    center(id=&quot;name-container&quot;)<br>+      a(id=&quot;page-name&quot; href=&quot;javascript:scrollToTop()&quot;) PAGE_NAME<br>  ...<br></code></pre></td></tr></table></figure>
<p>在<code>[blogRoot]/self/js/</code>创建<code>jquery.js</code>文件，添加以下代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/*! jQuery v3.6.0 | (c) OpenJS Foundation and other contributors | jquery.org/license */</span><br>!<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-string">&quot;use strict&quot;</span>;<span class="hljs-string">&quot;object&quot;</span>==<span class="hljs-keyword">typeof</span> <span class="hljs-variable language_">module</span>&amp;&amp;<span class="hljs-string">&quot;object&quot;</span>==<span class="hljs-keyword">typeof</span> <span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span>?<span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span>=e.<span class="hljs-property">document</span>?<span class="hljs-title function_">t</span>(e,!<span class="hljs-number">0</span>):<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">if</span>(!e.<span class="hljs-property">document</span>)<span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;jQuery requires a window with a document&quot;</span>);<span class="hljs-keyword">return</span> <span class="hljs-title function_">t</span>(e)&#125;:<span class="hljs-title function_">t</span>(e)&#125;(<span class="hljs-string">&quot;undefined&quot;</span>!=<span class="hljs-keyword">typeof</span> <span class="hljs-variable language_">window</span>?<span class="hljs-attr">window</span>:<span class="hljs-variable language_">this</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">C,e</span>)&#123;<span class="hljs-string">&quot;use strict&quot;</span>;<span class="hljs-keyword">var</span> t=[],r=<span class="hljs-title class_">Object</span>.<span class="hljs-property">getPrototypeOf</span>,s=t.<span class="hljs-property">slice</span>,g=t.<span class="hljs-property">flat</span>?<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> t.<span class="hljs-property">flat</span>.<span class="hljs-title function_">call</span>(e)&#125;:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> t.<span class="hljs-property">concat</span>.<span class="hljs-title function_">apply</span>([],e)&#125;,u=t.<span class="hljs-property">push</span>,i=t.<span class="hljs-property">indexOf</span>,n=&#123;&#125;,o=n.<span class="hljs-property">toString</span>,v=n.<span class="hljs-property">hasOwnProperty</span>,a=v.<span class="hljs-property">toString</span>,l=a.<span class="hljs-title function_">call</span>(<span class="hljs-title class_">Object</span>),y=&#123;&#125;,m=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span><span class="hljs-string">&quot;function&quot;</span>==<span class="hljs-keyword">typeof</span> e&amp;&amp;<span class="hljs-string">&quot;number&quot;</span>!=<span class="hljs-keyword">typeof</span> e.<span class="hljs-property">nodeType</span>&amp;&amp;<span class="hljs-string">&quot;function&quot;</span>!=<span class="hljs-keyword">typeof</span> e.<span class="hljs-property">item</span>&#125;,x=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>!=e&amp;&amp;e===e.<span class="hljs-property">window</span>&#125;,E=C.<span class="hljs-property">document</span>,c=&#123;<span class="hljs-attr">type</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">src</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">nonce</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">noModule</span>:!<span class="hljs-number">0</span>&#125;;<span class="hljs-keyword">function</span> <span class="hljs-title function_">b</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r,i,o=(n=n||E).<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;script&quot;</span>);<span class="hljs-keyword">if</span>(o.<span class="hljs-property">text</span>=e,t)<span class="hljs-keyword">for</span>(r <span class="hljs-keyword">in</span> c)(i=t[r]||t.<span class="hljs-property">getAttribute</span>&amp;&amp;t.<span class="hljs-title function_">getAttribute</span>(r))&amp;&amp;o.<span class="hljs-title function_">setAttribute</span>(r,i);n.<span class="hljs-property">head</span>.<span class="hljs-title function_">appendChild</span>(o).<span class="hljs-property">parentNode</span>.<span class="hljs-title function_">removeChild</span>(o)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">w</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>==e?e+<span class="hljs-string">&quot;&quot;</span>:<span class="hljs-string">&quot;object&quot;</span>==<span class="hljs-keyword">typeof</span> e||<span class="hljs-string">&quot;function&quot;</span>==<span class="hljs-keyword">typeof</span> e?n[o.<span class="hljs-title function_">call</span>(e)]||<span class="hljs-string">&quot;object&quot;</span>:<span class="hljs-keyword">typeof</span> e&#125;<span class="hljs-keyword">var</span> f=<span class="hljs-string">&quot;3.6.0&quot;</span>,S=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> S.<span class="hljs-property">fn</span>.<span class="hljs-title function_">init</span>(e,t)&#125;;<span class="hljs-keyword">function</span> <span class="hljs-title function_">p</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=!!e&amp;&amp;<span class="hljs-string">&quot;length&quot;</span><span class="hljs-keyword">in</span> e&amp;&amp;e.<span class="hljs-property">length</span>,n=<span class="hljs-title function_">w</span>(e);<span class="hljs-keyword">return</span>!<span class="hljs-title function_">m</span>(e)&amp;&amp;!<span class="hljs-title function_">x</span>(e)&amp;&amp;(<span class="hljs-string">&quot;array&quot;</span>===n||<span class="hljs-number">0</span>===t||<span class="hljs-string">&quot;number&quot;</span>==<span class="hljs-keyword">typeof</span> t&amp;&amp;<span class="hljs-number">0</span>&lt;t&amp;&amp;t-<span class="hljs-number">1</span> <span class="hljs-keyword">in</span> e)&#125;S.<span class="hljs-property">fn</span>=S.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>=&#123;<span class="hljs-attr">jquery</span>:f,<span class="hljs-attr">constructor</span>:S,<span class="hljs-attr">length</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">toArray</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> s.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>)&#125;,<span class="hljs-attr">get</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>==e?s.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>):e&lt;<span class="hljs-number">0</span>?<span class="hljs-variable language_">this</span>[e+<span class="hljs-variable language_">this</span>.<span class="hljs-property">length</span>]:<span class="hljs-variable language_">this</span>[e]&#125;,<span class="hljs-attr">pushStack</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=S.<span class="hljs-title function_">merge</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>),e);<span class="hljs-keyword">return</span> t.<span class="hljs-property">prevObject</span>=<span class="hljs-variable language_">this</span>,t&#125;,<span class="hljs-attr">each</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> S.<span class="hljs-title function_">each</span>(<span class="hljs-variable language_">this</span>,e)&#125;,<span class="hljs-attr">map</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">pushStack</span>(S.<span class="hljs-title function_">map</span>(<span class="hljs-variable language_">this</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span> n.<span class="hljs-title function_">call</span>(e,t,e)&#125;))&#125;,<span class="hljs-attr">slice</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">pushStack</span>(s.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>,<span class="hljs-variable language_">arguments</span>))&#125;,<span class="hljs-attr">first</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">eq</span>(<span class="hljs-number">0</span>)&#125;,<span class="hljs-attr">last</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">eq</span>(-<span class="hljs-number">1</span>)&#125;,<span class="hljs-attr">even</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">pushStack</span>(S.<span class="hljs-title function_">grep</span>(<span class="hljs-variable language_">this</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span>(t+<span class="hljs-number">1</span>)%<span class="hljs-number">2</span>&#125;))&#125;,<span class="hljs-attr">odd</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">pushStack</span>(S.<span class="hljs-title function_">grep</span>(<span class="hljs-variable language_">this</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span> t%<span class="hljs-number">2</span>&#125;))&#125;,<span class="hljs-attr">eq</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=<span class="hljs-variable language_">this</span>.<span class="hljs-property">length</span>,n=+e+(e&lt;<span class="hljs-number">0</span>?<span class="hljs-attr">t</span>:<span class="hljs-number">0</span>);<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">pushStack</span>(<span class="hljs-number">0</span>&lt;=n&amp;&amp;n&lt;t?[<span class="hljs-variable language_">this</span>[n]]:[])&#125;,<span class="hljs-attr">end</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">prevObject</span>||<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>)&#125;,<span class="hljs-attr">push</span>:u,<span class="hljs-attr">sort</span>:t.<span class="hljs-property">sort</span>,<span class="hljs-attr">splice</span>:t.<span class="hljs-property">splice</span>&#125;,S.<span class="hljs-property">extend</span>=S.<span class="hljs-property">fn</span>.<span class="hljs-property">extend</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> e,t,n,r,i,o,a=<span class="hljs-variable language_">arguments</span>[<span class="hljs-number">0</span>]||&#123;&#125;,s=<span class="hljs-number">1</span>,u=<span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>,l=!<span class="hljs-number">1</span>;<span class="hljs-keyword">for</span>(<span class="hljs-string">&quot;boolean&quot;</span>==<span class="hljs-keyword">typeof</span> a&amp;&amp;(l=a,a=<span class="hljs-variable language_">arguments</span>[s]||&#123;&#125;,s++),<span class="hljs-string">&quot;object&quot;</span>==<span class="hljs-keyword">typeof</span> a||<span class="hljs-title function_">m</span>(a)||(a=&#123;&#125;),s===u&amp;&amp;(a=<span class="hljs-variable language_">this</span>,s--);s&lt;u;s++)<span class="hljs-keyword">if</span>(<span class="hljs-literal">null</span>!=(e=<span class="hljs-variable language_">arguments</span>[s]))<span class="hljs-keyword">for</span>(t <span class="hljs-keyword">in</span> e)r=e[t],<span class="hljs-string">&quot;__proto__&quot;</span>!==t&amp;&amp;a!==r&amp;&amp;(l&amp;&amp;r&amp;&amp;(S.<span class="hljs-title function_">isPlainObject</span>(r)||(i=<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(r)))?(n=a[t],o=i&amp;&amp;!<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(n)?[]:i||S.<span class="hljs-title function_">isPlainObject</span>(n)?<span class="hljs-attr">n</span>:&#123;&#125;,i=!<span class="hljs-number">1</span>,a[t]=S.<span class="hljs-title function_">extend</span>(l,o,r)):<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==r&amp;&amp;(a[t]=r));<span class="hljs-keyword">return</span> a&#125;,S.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">expando</span>:<span class="hljs-string">&quot;jQuery&quot;</span>+(f+<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>()).<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/\D/g</span>,<span class="hljs-string">&quot;&quot;</span>),<span class="hljs-attr">isReady</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">error</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(e)&#125;,<span class="hljs-attr">noop</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;&#125;,<span class="hljs-attr">isPlainObject</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t,n;<span class="hljs-keyword">return</span>!(!e||<span class="hljs-string">&quot;[object Object]&quot;</span>!==o.<span class="hljs-title function_">call</span>(e))&amp;&amp;(!(t=<span class="hljs-title function_">r</span>(e))||<span class="hljs-string">&quot;function&quot;</span>==<span class="hljs-title function_">typeof</span>(n=v.<span class="hljs-title function_">call</span>(t,<span class="hljs-string">&quot;constructor&quot;</span>)&amp;&amp;t.<span class="hljs-property">constructor</span>)&amp;&amp;a.<span class="hljs-title function_">call</span>(n)===l)&#125;,<span class="hljs-attr">isEmptyObject</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t;<span class="hljs-keyword">for</span>(t <span class="hljs-keyword">in</span> e)<span class="hljs-keyword">return</span>!<span class="hljs-number">1</span>;<span class="hljs-keyword">return</span>!<span class="hljs-number">0</span>&#125;,<span class="hljs-attr">globalEval</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-title function_">b</span>(e,&#123;<span class="hljs-attr">nonce</span>:t&amp;&amp;t.<span class="hljs-property">nonce</span>&#125;,n)&#125;,<span class="hljs-attr">each</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n,r=<span class="hljs-number">0</span>;<span class="hljs-keyword">if</span>(<span class="hljs-title function_">p</span>(e))&#123;<span class="hljs-keyword">for</span>(n=e.<span class="hljs-property">length</span>;r&lt;n;r++)<span class="hljs-keyword">if</span>(!<span class="hljs-number">1</span>===t.<span class="hljs-title function_">call</span>(e[r],r,e[r]))<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">for</span>(r <span class="hljs-keyword">in</span> e)<span class="hljs-keyword">if</span>(!<span class="hljs-number">1</span>===t.<span class="hljs-title function_">call</span>(e[r],r,e[r]))<span class="hljs-keyword">break</span>;<span class="hljs-keyword">return</span> e&#125;,<span class="hljs-attr">makeArray</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n=t||[];<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>!=e&amp;&amp;(<span class="hljs-title function_">p</span>(<span class="hljs-title class_">Object</span>(e))?S.<span class="hljs-title function_">merge</span>(n,<span class="hljs-string">&quot;string&quot;</span>==<span class="hljs-keyword">typeof</span> e?[e]:e):u.<span class="hljs-title function_">call</span>(n,e)),n&#125;,<span class="hljs-attr">inArray</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>==t?-<span class="hljs-number">1</span>:i.<span class="hljs-title function_">call</span>(t,e,n)&#125;,<span class="hljs-attr">merge</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> n=+t.<span class="hljs-property">length</span>,r=<span class="hljs-number">0</span>,i=e.<span class="hljs-property">length</span>;r&lt;n;r++)e[i++]=t[r];<span class="hljs-keyword">return</span> e.<span class="hljs-property">length</span>=i,e&#125;,<span class="hljs-attr">grep</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> r=[],i=<span class="hljs-number">0</span>,o=e.<span class="hljs-property">length</span>,a=!n;i&lt;o;i++)!<span class="hljs-title function_">t</span>(e[i],i)!==a&amp;&amp;r.<span class="hljs-title function_">push</span>(e[i]);<span class="hljs-keyword">return</span> r&#125;,<span class="hljs-attr">map</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r,i,o=<span class="hljs-number">0</span>,a=[];<span class="hljs-keyword">if</span>(<span class="hljs-title function_">p</span>(e))<span class="hljs-keyword">for</span>(r=e.<span class="hljs-property">length</span>;o&lt;r;o++)<span class="hljs-literal">null</span>!=(i=<span class="hljs-title function_">t</span>(e[o],o,n))&amp;&amp;a.<span class="hljs-title function_">push</span>(i);<span class="hljs-keyword">else</span> <span class="hljs-keyword">for</span>(o <span class="hljs-keyword">in</span> e)<span class="hljs-literal">null</span>!=(i=<span class="hljs-title function_">t</span>(e[o],o,n))&amp;&amp;a.<span class="hljs-title function_">push</span>(i);<span class="hljs-keyword">return</span> <span class="hljs-title function_">g</span>(a)&#125;,<span class="hljs-attr">guid</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">support</span>:y&#125;),<span class="hljs-string">&quot;function&quot;</span>==<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">Symbol</span>&amp;&amp;(S.<span class="hljs-property">fn</span>[<span class="hljs-title class_">Symbol</span>.<span class="hljs-property">iterator</span>]=t[<span class="hljs-title class_">Symbol</span>.<span class="hljs-property">iterator</span>]),S.<span class="hljs-title function_">each</span>(<span class="hljs-string">&quot;Boolean Number String Function Array Date RegExp Object Error Symbol&quot;</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot; &quot;</span>),<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;n[<span class="hljs-string">&quot;[object &quot;</span>+t+<span class="hljs-string">&quot;]&quot;</span>]=t.<span class="hljs-title function_">toLowerCase</span>()&#125;);<span class="hljs-keyword">var</span> d=<span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>)&#123;<span class="hljs-keyword">var</span> e,d,b,o,i,h,f,g,w,u,l,T,C,a,E,v,s,c,y,S=<span class="hljs-string">&quot;sizzle&quot;</span>+<span class="hljs-number">1</span>*<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>,p=n.<span class="hljs-property">document</span>,k=<span class="hljs-number">0</span>,r=<span class="hljs-number">0</span>,m=<span class="hljs-title function_">ue</span>(),x=<span class="hljs-title function_">ue</span>(),A=<span class="hljs-title function_">ue</span>(),N=<span class="hljs-title function_">ue</span>(),j=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span> e===t&amp;&amp;(l=!<span class="hljs-number">0</span>),<span class="hljs-number">0</span>&#125;,D=&#123;&#125;.<span class="hljs-property">hasOwnProperty</span>,t=[],q=t.<span class="hljs-property">pop</span>,L=t.<span class="hljs-property">push</span>,H=t.<span class="hljs-property">push</span>,O=t.<span class="hljs-property">slice</span>,P=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> n=<span class="hljs-number">0</span>,r=e.<span class="hljs-property">length</span>;n&lt;r;n++)<span class="hljs-keyword">if</span>(e[n]===t)<span class="hljs-keyword">return</span> n;<span class="hljs-keyword">return</span>-<span class="hljs-number">1</span>&#125;,R=<span class="hljs-string">&quot;checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped&quot;</span>,M=<span class="hljs-string">&quot;[\\x20\\t\\r\\n\\f]&quot;</span>,I=<span class="hljs-string">&quot;(?:\\\\[\\da-fA-F]&#123;1,6&#125;&quot;</span>+M+<span class="hljs-string">&quot;?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+&quot;</span>,W=<span class="hljs-string">&quot;\\[&quot;</span>+M+<span class="hljs-string">&quot;*(&quot;</span>+I+<span class="hljs-string">&quot;)(?:&quot;</span>+M+<span class="hljs-string">&quot;*([*^$|!~]?=)&quot;</span>+M+<span class="hljs-string">&quot;*(?:&#x27;((?:\\\\.|[^\\\\&#x27;])*)&#x27;|\&quot;((?:\\\\.|[^\\\\\&quot;])*)\&quot;|(&quot;</span>+I+<span class="hljs-string">&quot;))|)&quot;</span>+M+<span class="hljs-string">&quot;*\\]&quot;</span>,F=<span class="hljs-string">&quot;:(&quot;</span>+I+<span class="hljs-string">&quot;)(?:\\(((&#x27;((?:\\\\.|[^\\\\&#x27;])*)&#x27;|\&quot;((?:\\\\.|[^\\\\\&quot;])*)\&quot;)|((?:\\\\.|[^\\\\()[\\]]|&quot;</span>+W+<span class="hljs-string">&quot;)*)|.*)\\)|)&quot;</span>,B=<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(M+<span class="hljs-string">&quot;+&quot;</span>,<span class="hljs-string">&quot;g&quot;</span>),$=<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&quot;^&quot;</span>+M+<span class="hljs-string">&quot;+|((?:^|[^\\\\])(?:\\\\.)*)&quot;</span>+M+<span class="hljs-string">&quot;+$&quot;</span>,<span class="hljs-string">&quot;g&quot;</span>),_=<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&quot;^&quot;</span>+M+<span class="hljs-string">&quot;*,&quot;</span>+M+<span class="hljs-string">&quot;*&quot;</span>),z=<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&quot;^&quot;</span>+M+<span class="hljs-string">&quot;*([&gt;+~]|&quot;</span>+M+<span class="hljs-string">&quot;)&quot;</span>+M+<span class="hljs-string">&quot;*&quot;</span>),U=<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(M+<span class="hljs-string">&quot;|&gt;&quot;</span>),X=<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(F),V=<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&quot;^&quot;</span>+I+<span class="hljs-string">&quot;$&quot;</span>),G=&#123;<span class="hljs-attr">ID</span>:<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&quot;^#(&quot;</span>+I+<span class="hljs-string">&quot;)&quot;</span>),<span class="hljs-attr">CLASS</span>:<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&quot;^\\.(&quot;</span>+I+<span class="hljs-string">&quot;)&quot;</span>),<span class="hljs-attr">TAG</span>:<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&quot;^(&quot;</span>+I+<span class="hljs-string">&quot;|[*])&quot;</span>),<span class="hljs-attr">ATTR</span>:<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&quot;^&quot;</span>+W),<span class="hljs-attr">PSEUDO</span>:<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&quot;^&quot;</span>+F),<span class="hljs-attr">CHILD</span>:<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&quot;^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(&quot;</span>+M+<span class="hljs-string">&quot;*(even|odd|(([+-]|)(\\d*)n|)&quot;</span>+M+<span class="hljs-string">&quot;*(?:([+-]|)&quot;</span>+M+<span class="hljs-string">&quot;*(\\d+)|))&quot;</span>+M+<span class="hljs-string">&quot;*\\)|)&quot;</span>,<span class="hljs-string">&quot;i&quot;</span>),<span class="hljs-attr">bool</span>:<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&quot;^(?:&quot;</span>+R+<span class="hljs-string">&quot;)$&quot;</span>,<span class="hljs-string">&quot;i&quot;</span>),<span class="hljs-attr">needsContext</span>:<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&quot;^&quot;</span>+M+<span class="hljs-string">&quot;*[&gt;+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(&quot;</span>+M+<span class="hljs-string">&quot;*((?:-\\d)?\\d*)&quot;</span>+M+<span class="hljs-string">&quot;*\\)|)(?=[^-]|$)&quot;</span>,<span class="hljs-string">&quot;i&quot;</span>)&#125;,Y=<span class="hljs-regexp">/HTML$/i</span>,Q=<span class="hljs-regexp">/^(?:input|select|textarea|button)$/i</span>,J=<span class="hljs-regexp">/^h\d$/i</span>,K=<span class="hljs-regexp">/^[^&#123;]+\&#123;\s*\[native \w/</span>,Z=<span class="hljs-regexp">/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/</span>,ee=<span class="hljs-regexp">/[+~]/</span>,te=<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&quot;\\\\[\\da-fA-F]&#123;1,6&#125;&quot;</span>+M+<span class="hljs-string">&quot;?|\\\\([^\\r\\n\\f])&quot;</span>,<span class="hljs-string">&quot;g&quot;</span>),ne=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n=<span class="hljs-string">&quot;0x&quot;</span>+e.<span class="hljs-title function_">slice</span>(<span class="hljs-number">1</span>)-<span class="hljs-number">65536</span>;<span class="hljs-keyword">return</span> t||(n&lt;<span class="hljs-number">0</span>?<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(n+<span class="hljs-number">65536</span>):<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(n&gt;&gt;<span class="hljs-number">10</span>|<span class="hljs-number">55296</span>,<span class="hljs-number">1023</span>&amp;n|<span class="hljs-number">56320</span>))&#125;,re=<span class="hljs-regexp">/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g</span>,ie=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span> t?<span class="hljs-string">&quot;\0&quot;</span>===e?<span class="hljs-string">&quot;\ufffd&quot;</span>:e.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>,-<span class="hljs-number">1</span>)+<span class="hljs-string">&quot;\\&quot;</span>+e.<span class="hljs-title function_">charCodeAt</span>(e.<span class="hljs-property">length</span>-<span class="hljs-number">1</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>)+<span class="hljs-string">&quot; &quot;</span>:<span class="hljs-string">&quot;\\&quot;</span>+e&#125;,oe=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-title function_">T</span>()&#125;,ae=<span class="hljs-title function_">be</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span>!<span class="hljs-number">0</span>===e.<span class="hljs-property">disabled</span>&amp;&amp;<span class="hljs-string">&quot;fieldset&quot;</span>===e.<span class="hljs-property">nodeName</span>.<span class="hljs-title function_">toLowerCase</span>()&#125;,&#123;<span class="hljs-attr">dir</span>:<span class="hljs-string">&quot;parentNode&quot;</span>,<span class="hljs-attr">next</span>:<span class="hljs-string">&quot;legend&quot;</span>&#125;);<span class="hljs-keyword">try</span>&#123;H.<span class="hljs-title function_">apply</span>(t=O.<span class="hljs-title function_">call</span>(p.<span class="hljs-property">childNodes</span>),p.<span class="hljs-property">childNodes</span>),t[p.<span class="hljs-property">childNodes</span>.<span class="hljs-property">length</span>].<span class="hljs-property">nodeType</span>&#125;<span class="hljs-keyword">catch</span>(e)&#123;H=&#123;<span class="hljs-attr">apply</span>:t.<span class="hljs-property">length</span>?<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;L.<span class="hljs-title function_">apply</span>(e,O.<span class="hljs-title function_">call</span>(t))&#125;:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n=e.<span class="hljs-property">length</span>,r=<span class="hljs-number">0</span>;<span class="hljs-keyword">while</span>(e[n++]=t[r++]);e.<span class="hljs-property">length</span>=n-<span class="hljs-number">1</span>&#125;&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">se</span>(<span class="hljs-params">t,e,n,r</span>)&#123;<span class="hljs-keyword">var</span> i,o,a,s,u,l,c,f=e&amp;&amp;e.<span class="hljs-property">ownerDocument</span>,p=e?e.<span class="hljs-property">nodeType</span>:<span class="hljs-number">9</span>;<span class="hljs-keyword">if</span>(n=n||[],<span class="hljs-string">&quot;string&quot;</span>!=<span class="hljs-keyword">typeof</span> t||!t||<span class="hljs-number">1</span>!==p&amp;&amp;<span class="hljs-number">9</span>!==p&amp;&amp;<span class="hljs-number">11</span>!==p)<span class="hljs-keyword">return</span> n;<span class="hljs-keyword">if</span>(!r&amp;&amp;(<span class="hljs-title function_">T</span>(e),e=e||C,E))&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">11</span>!==p&amp;&amp;(u=Z.<span class="hljs-title function_">exec</span>(t)))<span class="hljs-keyword">if</span>(i=u[<span class="hljs-number">1</span>])&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">9</span>===p)&#123;<span class="hljs-keyword">if</span>(!(a=e.<span class="hljs-title function_">getElementById</span>(i)))<span class="hljs-keyword">return</span> n;<span class="hljs-keyword">if</span>(a.<span class="hljs-property">id</span>===i)<span class="hljs-keyword">return</span> n.<span class="hljs-title function_">push</span>(a),n&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(f&amp;&amp;(a=f.<span class="hljs-title function_">getElementById</span>(i))&amp;&amp;<span class="hljs-title function_">y</span>(e,a)&amp;&amp;a.<span class="hljs-property">id</span>===i)<span class="hljs-keyword">return</span> n.<span class="hljs-title function_">push</span>(a),n&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">if</span>(u[<span class="hljs-number">2</span>])<span class="hljs-keyword">return</span> H.<span class="hljs-title function_">apply</span>(n,e.<span class="hljs-title function_">getElementsByTagName</span>(t)),n;<span class="hljs-keyword">if</span>((i=u[<span class="hljs-number">3</span>])&amp;&amp;d.<span class="hljs-property">getElementsByClassName</span>&amp;&amp;e.<span class="hljs-property">getElementsByClassName</span>)<span class="hljs-keyword">return</span> H.<span class="hljs-title function_">apply</span>(n,e.<span class="hljs-title function_">getElementsByClassName</span>(i)),n&#125;<span class="hljs-keyword">if</span>(d.<span class="hljs-property">qsa</span>&amp;&amp;!N[t+<span class="hljs-string">&quot; &quot;</span>]&amp;&amp;(!v||!v.<span class="hljs-title function_">test</span>(t))&amp;&amp;(<span class="hljs-number">1</span>!==p||<span class="hljs-string">&quot;object&quot;</span>!==e.<span class="hljs-property">nodeName</span>.<span class="hljs-title function_">toLowerCase</span>()))&#123;<span class="hljs-keyword">if</span>(c=t,f=e,<span class="hljs-number">1</span>===p&amp;&amp;(U.<span class="hljs-title function_">test</span>(t)||z.<span class="hljs-title function_">test</span>(t)))&#123;(f=ee.<span class="hljs-title function_">test</span>(t)&amp;&amp;<span class="hljs-title function_">ye</span>(e.<span class="hljs-property">parentNode</span>)||e)===e&amp;&amp;d.<span class="hljs-property">scope</span>||((s=e.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;id&quot;</span>))?s=s.<span class="hljs-title function_">replace</span>(re,ie):e.<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&quot;id&quot;</span>,s=S)),o=(l=<span class="hljs-title function_">h</span>(t)).<span class="hljs-property">length</span>;<span class="hljs-keyword">while</span>(o--)l[o]=(s?<span class="hljs-string">&quot;#&quot;</span>+<span class="hljs-attr">s</span>:<span class="hljs-string">&quot;:scope&quot;</span>)+<span class="hljs-string">&quot; &quot;</span>+<span class="hljs-title function_">xe</span>(l[o]);c=l.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;,&quot;</span>)&#125;<span class="hljs-keyword">try</span>&#123;<span class="hljs-keyword">return</span> H.<span class="hljs-title function_">apply</span>(n,f.<span class="hljs-title function_">querySelectorAll</span>(c)),n&#125;<span class="hljs-keyword">catch</span>(e)&#123;<span class="hljs-title function_">N</span>(t,!<span class="hljs-number">0</span>)&#125;<span class="hljs-keyword">finally</span>&#123;s===S&amp;&amp;e.<span class="hljs-title function_">removeAttribute</span>(<span class="hljs-string">&quot;id&quot;</span>)&#125;&#125;&#125;<span class="hljs-keyword">return</span> <span class="hljs-title function_">g</span>(t.<span class="hljs-title function_">replace</span>($,<span class="hljs-string">&quot;$1&quot;</span>),e,n,r)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">ue</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> r=[];<span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">e</span>(<span class="hljs-params">t,n</span>)&#123;<span class="hljs-keyword">return</span> r.<span class="hljs-title function_">push</span>(t+<span class="hljs-string">&quot; &quot;</span>)&gt;b.<span class="hljs-property">cacheLength</span>&amp;&amp;<span class="hljs-keyword">delete</span> e[r.<span class="hljs-title function_">shift</span>()],e[t+<span class="hljs-string">&quot; &quot;</span>]=n&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">le</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e[S]=!<span class="hljs-number">0</span>,e&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">ce</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=C.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;fieldset&quot;</span>);<span class="hljs-keyword">try</span>&#123;<span class="hljs-keyword">return</span>!!<span class="hljs-title function_">e</span>(t)&#125;<span class="hljs-keyword">catch</span>(e)&#123;<span class="hljs-keyword">return</span>!<span class="hljs-number">1</span>&#125;<span class="hljs-keyword">finally</span>&#123;t.<span class="hljs-property">parentNode</span>&amp;&amp;t.<span class="hljs-property">parentNode</span>.<span class="hljs-title function_">removeChild</span>(t),t=<span class="hljs-literal">null</span>&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">fe</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n=e.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;|&quot;</span>),r=n.<span class="hljs-property">length</span>;<span class="hljs-keyword">while</span>(r--)b.<span class="hljs-property">attrHandle</span>[n[r]]=t&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">pe</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n=t&amp;&amp;e,r=n&amp;&amp;<span class="hljs-number">1</span>===e.<span class="hljs-property">nodeType</span>&amp;&amp;<span class="hljs-number">1</span>===t.<span class="hljs-property">nodeType</span>&amp;&amp;e.<span class="hljs-property">sourceIndex</span>-t.<span class="hljs-property">sourceIndex</span>;<span class="hljs-keyword">if</span>(r)<span class="hljs-keyword">return</span> r;<span class="hljs-keyword">if</span>(n)<span class="hljs-keyword">while</span>(n=n.<span class="hljs-property">nextSibling</span>)<span class="hljs-keyword">if</span>(n===t)<span class="hljs-keyword">return</span>-<span class="hljs-number">1</span>;<span class="hljs-keyword">return</span> e?<span class="hljs-number">1</span>:-<span class="hljs-number">1</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">de</span>(<span class="hljs-params">t</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span><span class="hljs-string">&quot;input&quot;</span>===e.<span class="hljs-property">nodeName</span>.<span class="hljs-title function_">toLowerCase</span>()&amp;&amp;e.<span class="hljs-property">type</span>===t&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">he</span>(<span class="hljs-params">n</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=e.<span class="hljs-property">nodeName</span>.<span class="hljs-title function_">toLowerCase</span>();<span class="hljs-keyword">return</span>(<span class="hljs-string">&quot;input&quot;</span>===t||<span class="hljs-string">&quot;button&quot;</span>===t)&amp;&amp;e.<span class="hljs-property">type</span>===n&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">ge</span>(<span class="hljs-params">t</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span><span class="hljs-string">&quot;form&quot;</span><span class="hljs-keyword">in</span> e?e.<span class="hljs-property">parentNode</span>&amp;&amp;!<span class="hljs-number">1</span>===e.<span class="hljs-property">disabled</span>?<span class="hljs-string">&quot;label&quot;</span><span class="hljs-keyword">in</span> e?<span class="hljs-string">&quot;label&quot;</span><span class="hljs-keyword">in</span> e.<span class="hljs-property">parentNode</span>?e.<span class="hljs-property">parentNode</span>.<span class="hljs-property">disabled</span>===<span class="hljs-attr">t</span>:e.<span class="hljs-property">disabled</span>===<span class="hljs-attr">t</span>:e.<span class="hljs-property">isDisabled</span>===t||e.<span class="hljs-property">isDisabled</span>!==!t&amp;&amp;<span class="hljs-title function_">ae</span>(e)===<span class="hljs-attr">t</span>:e.<span class="hljs-property">disabled</span>===<span class="hljs-attr">t</span>:<span class="hljs-string">&quot;label&quot;</span><span class="hljs-keyword">in</span> e&amp;&amp;e.<span class="hljs-property">disabled</span>===t&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">ve</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">le</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">o</span>)&#123;<span class="hljs-keyword">return</span> o=+o,<span class="hljs-title function_">le</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n,r=<span class="hljs-title function_">a</span>([],e.<span class="hljs-property">length</span>,o),i=r.<span class="hljs-property">length</span>;<span class="hljs-keyword">while</span>(i--)e[n=r[i]]&amp;&amp;(e[n]=!(t[n]=e[n]))&#125;)&#125;)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">ye</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e&amp;&amp;<span class="hljs-string">&quot;undefined&quot;</span>!=<span class="hljs-keyword">typeof</span> e.<span class="hljs-property">getElementsByTagName</span>&amp;&amp;e&#125;<span class="hljs-keyword">for</span>(e <span class="hljs-keyword">in</span> d=se.<span class="hljs-property">support</span>=&#123;&#125;,i=se.<span class="hljs-property">isXML</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=e&amp;&amp;e.<span class="hljs-property">namespaceURI</span>,n=e&amp;&amp;(e.<span class="hljs-property">ownerDocument</span>||e).<span class="hljs-property">documentElement</span>;<span class="hljs-keyword">return</span>!Y.<span class="hljs-title function_">test</span>(t||n&amp;&amp;n.<span class="hljs-property">nodeName</span>||<span class="hljs-string">&quot;HTML&quot;</span>)&#125;,T=se.<span class="hljs-property">setDocument</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t,n,r=e?e.<span class="hljs-property">ownerDocument</span>||<span class="hljs-attr">e</span>:p;<span class="hljs-keyword">return</span> r!=C&amp;&amp;<span class="hljs-number">9</span>===r.<span class="hljs-property">nodeType</span>&amp;&amp;r.<span class="hljs-property">documentElement</span>&amp;&amp;(a=(C=r).<span class="hljs-property">documentElement</span>,E=!<span class="hljs-title function_">i</span>(C),p!=C&amp;&amp;(n=C.<span class="hljs-property">defaultView</span>)&amp;&amp;n.<span class="hljs-property">top</span>!==n&amp;&amp;(n.<span class="hljs-property">addEventListener</span>?n.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;unload&quot;</span>,oe,!<span class="hljs-number">1</span>):n.<span class="hljs-property">attachEvent</span>&amp;&amp;n.<span class="hljs-title function_">attachEvent</span>(<span class="hljs-string">&quot;onunload&quot;</span>,oe)),d.<span class="hljs-property">scope</span>=<span class="hljs-title function_">ce</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> a.<span class="hljs-title function_">appendChild</span>(e).<span class="hljs-title function_">appendChild</span>(C.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;div&quot;</span>)),<span class="hljs-string">&quot;undefined&quot;</span>!=<span class="hljs-keyword">typeof</span> e.<span class="hljs-property">querySelectorAll</span>&amp;&amp;!e.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&quot;:scope fieldset div&quot;</span>).<span class="hljs-property">length</span>&#125;),d.<span class="hljs-property">attributes</span>=<span class="hljs-title function_">ce</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e.<span class="hljs-property">className</span>=<span class="hljs-string">&quot;i&quot;</span>,!e.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;className&quot;</span>)&#125;),d.<span class="hljs-property">getElementsByTagName</span>=<span class="hljs-title function_">ce</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e.<span class="hljs-title function_">appendChild</span>(C.<span class="hljs-title function_">createComment</span>(<span class="hljs-string">&quot;&quot;</span>)),!e.<span class="hljs-title function_">getElementsByTagName</span>(<span class="hljs-string">&quot;*&quot;</span>).<span class="hljs-property">length</span>&#125;),d.<span class="hljs-property">getElementsByClassName</span>=K.<span class="hljs-title function_">test</span>(C.<span class="hljs-property">getElementsByClassName</span>),d.<span class="hljs-property">getById</span>=<span class="hljs-title function_">ce</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> a.<span class="hljs-title function_">appendChild</span>(e).<span class="hljs-property">id</span>=S,!C.<span class="hljs-property">getElementsByName</span>||!C.<span class="hljs-title function_">getElementsByName</span>(S).<span class="hljs-property">length</span>&#125;),d.<span class="hljs-property">getById</span>?(b.<span class="hljs-property">filter</span>.<span class="hljs-property">ID</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=e.<span class="hljs-title function_">replace</span>(te,ne);<span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;id&quot;</span>)===t&#125;&#125;,b.<span class="hljs-property">find</span>.<span class="hljs-property">ID</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;undefined&quot;</span>!=<span class="hljs-keyword">typeof</span> t.<span class="hljs-property">getElementById</span>&amp;&amp;E)&#123;<span class="hljs-keyword">var</span> n=t.<span class="hljs-title function_">getElementById</span>(e);<span class="hljs-keyword">return</span> n?[n]:[]&#125;&#125;):(b.<span class="hljs-property">filter</span>.<span class="hljs-property">ID</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> n=e.<span class="hljs-title function_">replace</span>(te,ne);<span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=<span class="hljs-string">&quot;undefined&quot;</span>!=<span class="hljs-keyword">typeof</span> e.<span class="hljs-property">getAttributeNode</span>&amp;&amp;e.<span class="hljs-title function_">getAttributeNode</span>(<span class="hljs-string">&quot;id&quot;</span>);<span class="hljs-keyword">return</span> t&amp;&amp;t.<span class="hljs-property">value</span>===n&#125;&#125;,b.<span class="hljs-property">find</span>.<span class="hljs-property">ID</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;undefined&quot;</span>!=<span class="hljs-keyword">typeof</span> t.<span class="hljs-property">getElementById</span>&amp;&amp;E)&#123;<span class="hljs-keyword">var</span> n,r,i,o=t.<span class="hljs-title function_">getElementById</span>(e);<span class="hljs-keyword">if</span>(o)&#123;<span class="hljs-keyword">if</span>((n=o.<span class="hljs-title function_">getAttributeNode</span>(<span class="hljs-string">&quot;id&quot;</span>))&amp;&amp;n.<span class="hljs-property">value</span>===e)<span class="hljs-keyword">return</span>[o];i=t.<span class="hljs-title function_">getElementsByName</span>(e),r=<span class="hljs-number">0</span>;<span class="hljs-keyword">while</span>(o=i[r++])<span class="hljs-keyword">if</span>((n=o.<span class="hljs-title function_">getAttributeNode</span>(<span class="hljs-string">&quot;id&quot;</span>))&amp;&amp;n.<span class="hljs-property">value</span>===e)<span class="hljs-keyword">return</span>[o]&#125;<span class="hljs-keyword">return</span>[]&#125;&#125;),b.<span class="hljs-property">find</span>.<span class="hljs-property">TAG</span>=d.<span class="hljs-property">getElementsByTagName</span>?<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span><span class="hljs-string">&quot;undefined&quot;</span>!=<span class="hljs-keyword">typeof</span> t.<span class="hljs-property">getElementsByTagName</span>?t.<span class="hljs-title function_">getElementsByTagName</span>(e):d.<span class="hljs-property">qsa</span>?t.<span class="hljs-title function_">querySelectorAll</span>(e):<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>&#125;:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n,r=[],i=<span class="hljs-number">0</span>,o=t.<span class="hljs-title function_">getElementsByTagName</span>(e);<span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;*&quot;</span>===e)&#123;<span class="hljs-keyword">while</span>(n=o[i++])<span class="hljs-number">1</span>===n.<span class="hljs-property">nodeType</span>&amp;&amp;r.<span class="hljs-title function_">push</span>(n);<span class="hljs-keyword">return</span> r&#125;<span class="hljs-keyword">return</span> o&#125;,b.<span class="hljs-property">find</span>.<span class="hljs-property">CLASS</span>=d.<span class="hljs-property">getElementsByClassName</span>&amp;&amp;<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;undefined&quot;</span>!=<span class="hljs-keyword">typeof</span> t.<span class="hljs-property">getElementsByClassName</span>&amp;&amp;E)<span class="hljs-keyword">return</span> t.<span class="hljs-title function_">getElementsByClassName</span>(e)&#125;,s=[],v=[],(d.<span class="hljs-property">qsa</span>=K.<span class="hljs-title function_">test</span>(C.<span class="hljs-property">querySelectorAll</span>))&amp;&amp;(<span class="hljs-title function_">ce</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t;a.<span class="hljs-title function_">appendChild</span>(e).<span class="hljs-property">innerHTML</span>=<span class="hljs-string">&quot;&lt;a id=&#x27;&quot;</span>+S+<span class="hljs-string">&quot;&#x27;&gt;&lt;/a&gt;&lt;select id=&#x27;&quot;</span>+S+<span class="hljs-string">&quot;-\r\\&#x27; msallowcapture=&#x27;&#x27;&gt;&lt;option selected=&#x27;&#x27;&gt;&lt;/option&gt;&lt;/select&gt;&quot;</span>,e.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&quot;[msallowcapture^=&#x27;&#x27;]&quot;</span>).<span class="hljs-property">length</span>&amp;&amp;v.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;[*^$]=&quot;</span>+M+<span class="hljs-string">&quot;*(?:&#x27;&#x27;|\&quot;\&quot;)&quot;</span>),e.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&quot;[selected]&quot;</span>).<span class="hljs-property">length</span>||v.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;\\[&quot;</span>+M+<span class="hljs-string">&quot;*(?:value|&quot;</span>+R+<span class="hljs-string">&quot;)&quot;</span>),e.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&quot;[id~=&quot;</span>+S+<span class="hljs-string">&quot;-]&quot;</span>).<span class="hljs-property">length</span>||v.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;~=&quot;</span>),(t=C.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;input&quot;</span>)).<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;&quot;</span>),e.<span class="hljs-title function_">appendChild</span>(t),e.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&quot;[name=&#x27;&#x27;]&quot;</span>).<span class="hljs-property">length</span>||v.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;\\[&quot;</span>+M+<span class="hljs-string">&quot;*name&quot;</span>+M+<span class="hljs-string">&quot;*=&quot;</span>+M+<span class="hljs-string">&quot;*(?:&#x27;&#x27;|\&quot;\&quot;)&quot;</span>),e.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&quot;:checked&quot;</span>).<span class="hljs-property">length</span>||v.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;:checked&quot;</span>),e.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&quot;a#&quot;</span>+S+<span class="hljs-string">&quot;+*&quot;</span>).<span class="hljs-property">length</span>||v.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;.#.+[+~]&quot;</span>),e.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&quot;\\\f&quot;</span>),v.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;[\\r\\n\\f]&quot;</span>)&#125;),<span class="hljs-title function_">ce</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;e.<span class="hljs-property">innerHTML</span>=<span class="hljs-string">&quot;&lt;a href=&#x27;&#x27; disabled=&#x27;disabled&#x27;&gt;&lt;/a&gt;&lt;select disabled=&#x27;disabled&#x27;&gt;&lt;option/&gt;&lt;/select&gt;&quot;</span>;<span class="hljs-keyword">var</span> t=C.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;input&quot;</span>);t.<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&quot;type&quot;</span>,<span class="hljs-string">&quot;hidden&quot;</span>),e.<span class="hljs-title function_">appendChild</span>(t).<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;D&quot;</span>),e.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&quot;[name=d]&quot;</span>).<span class="hljs-property">length</span>&amp;&amp;v.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;name&quot;</span>+M+<span class="hljs-string">&quot;*[*^$|!~]?=&quot;</span>),<span class="hljs-number">2</span>!==e.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&quot;:enabled&quot;</span>).<span class="hljs-property">length</span>&amp;&amp;v.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;:enabled&quot;</span>,<span class="hljs-string">&quot;:disabled&quot;</span>),a.<span class="hljs-title function_">appendChild</span>(e).<span class="hljs-property">disabled</span>=!<span class="hljs-number">0</span>,<span class="hljs-number">2</span>!==e.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&quot;:disabled&quot;</span>).<span class="hljs-property">length</span>&amp;&amp;v.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;:enabled&quot;</span>,<span class="hljs-string">&quot;:disabled&quot;</span>),e.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&quot;*,:x&quot;</span>),v.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;,.*:&quot;</span>)&#125;)),(d.<span class="hljs-property">matchesSelector</span>=K.<span class="hljs-title function_">test</span>(c=a.<span class="hljs-property">matches</span>||a.<span class="hljs-property">webkitMatchesSelector</span>||a.<span class="hljs-property">mozMatchesSelector</span>||a.<span class="hljs-property">oMatchesSelector</span>||a.<span class="hljs-property">msMatchesSelector</span>))&amp;&amp;<span class="hljs-title function_">ce</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;d.<span class="hljs-property">disconnectedMatch</span>=c.<span class="hljs-title function_">call</span>(e,<span class="hljs-string">&quot;*&quot;</span>),c.<span class="hljs-title function_">call</span>(e,<span class="hljs-string">&quot;[s!=&#x27;&#x27;]:x&quot;</span>),s.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;!=&quot;</span>,F)&#125;),v=v.<span class="hljs-property">length</span>&amp;&amp;<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(v.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;|&quot;</span>)),s=s.<span class="hljs-property">length</span>&amp;&amp;<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(s.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;|&quot;</span>)),t=K.<span class="hljs-title function_">test</span>(a.<span class="hljs-property">compareDocumentPosition</span>),y=t||K.<span class="hljs-title function_">test</span>(a.<span class="hljs-property">contains</span>)?<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n=<span class="hljs-number">9</span>===e.<span class="hljs-property">nodeType</span>?e.<span class="hljs-property">documentElement</span>:e,r=t&amp;&amp;t.<span class="hljs-property">parentNode</span>;<span class="hljs-keyword">return</span> e===r||!(!r||<span class="hljs-number">1</span>!==r.<span class="hljs-property">nodeType</span>||!(n.<span class="hljs-property">contains</span>?n.<span class="hljs-title function_">contains</span>(r):e.<span class="hljs-property">compareDocumentPosition</span>&amp;&amp;<span class="hljs-number">16</span>&amp;e.<span class="hljs-title function_">compareDocumentPosition</span>(r)))&#125;:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">if</span>(t)<span class="hljs-keyword">while</span>(t=t.<span class="hljs-property">parentNode</span>)<span class="hljs-keyword">if</span>(t===e)<span class="hljs-keyword">return</span>!<span class="hljs-number">0</span>;<span class="hljs-keyword">return</span>!<span class="hljs-number">1</span>&#125;,j=t?<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">if</span>(e===t)<span class="hljs-keyword">return</span> l=!<span class="hljs-number">0</span>,<span class="hljs-number">0</span>;<span class="hljs-keyword">var</span> n=!e.<span class="hljs-property">compareDocumentPosition</span>-!t.<span class="hljs-property">compareDocumentPosition</span>;<span class="hljs-keyword">return</span> n||(<span class="hljs-number">1</span>&amp;(n=(e.<span class="hljs-property">ownerDocument</span>||e)==(t.<span class="hljs-property">ownerDocument</span>||t)?e.<span class="hljs-title function_">compareDocumentPosition</span>(t):<span class="hljs-number">1</span>)||!d.<span class="hljs-property">sortDetached</span>&amp;&amp;t.<span class="hljs-title function_">compareDocumentPosition</span>(e)===n?e==C||e.<span class="hljs-property">ownerDocument</span>==p&amp;&amp;<span class="hljs-title function_">y</span>(p,e)?-<span class="hljs-number">1</span>:t==C||t.<span class="hljs-property">ownerDocument</span>==p&amp;&amp;<span class="hljs-title function_">y</span>(p,t)?<span class="hljs-number">1</span>:u?<span class="hljs-title function_">P</span>(u,e)-<span class="hljs-title function_">P</span>(u,t):<span class="hljs-number">0</span>:<span class="hljs-number">4</span>&amp;n?-<span class="hljs-number">1</span>:<span class="hljs-number">1</span>)&#125;:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">if</span>(e===t)<span class="hljs-keyword">return</span> l=!<span class="hljs-number">0</span>,<span class="hljs-number">0</span>;<span class="hljs-keyword">var</span> n,r=<span class="hljs-number">0</span>,i=e.<span class="hljs-property">parentNode</span>,o=t.<span class="hljs-property">parentNode</span>,a=[e],s=[t];<span class="hljs-keyword">if</span>(!i||!o)<span class="hljs-keyword">return</span> e==C?-<span class="hljs-number">1</span>:t==C?<span class="hljs-number">1</span>:i?-<span class="hljs-number">1</span>:o?<span class="hljs-number">1</span>:u?<span class="hljs-title function_">P</span>(u,e)-<span class="hljs-title function_">P</span>(u,t):<span class="hljs-number">0</span>;<span class="hljs-keyword">if</span>(i===o)<span class="hljs-keyword">return</span> <span class="hljs-title function_">pe</span>(e,t);n=e;<span class="hljs-keyword">while</span>(n=n.<span class="hljs-property">parentNode</span>)a.<span class="hljs-title function_">unshift</span>(n);n=t;<span class="hljs-keyword">while</span>(n=n.<span class="hljs-property">parentNode</span>)s.<span class="hljs-title function_">unshift</span>(n);<span class="hljs-keyword">while</span>(a[r]===s[r])r++;<span class="hljs-keyword">return</span> r?<span class="hljs-title function_">pe</span>(a[r],s[r]):a[r]==p?-<span class="hljs-number">1</span>:s[r]==p?<span class="hljs-number">1</span>:<span class="hljs-number">0</span>&#125;),C&#125;,se.<span class="hljs-property">matches</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">se</span>(e,<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>,t)&#125;,se.<span class="hljs-property">matchesSelector</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-title function_">T</span>(e),d.<span class="hljs-property">matchesSelector</span>&amp;&amp;E&amp;&amp;!N[t+<span class="hljs-string">&quot; &quot;</span>]&amp;&amp;(!s||!s.<span class="hljs-title function_">test</span>(t))&amp;&amp;(!v||!v.<span class="hljs-title function_">test</span>(t)))<span class="hljs-keyword">try</span>&#123;<span class="hljs-keyword">var</span> n=c.<span class="hljs-title function_">call</span>(e,t);<span class="hljs-keyword">if</span>(n||d.<span class="hljs-property">disconnectedMatch</span>||e.<span class="hljs-property">document</span>&amp;&amp;<span class="hljs-number">11</span>!==e.<span class="hljs-property">document</span>.<span class="hljs-property">nodeType</span>)<span class="hljs-keyword">return</span> n&#125;<span class="hljs-keyword">catch</span>(e)&#123;<span class="hljs-title function_">N</span>(t,!<span class="hljs-number">0</span>)&#125;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>&lt;<span class="hljs-title function_">se</span>(t,C,<span class="hljs-literal">null</span>,[e]).<span class="hljs-property">length</span>&#125;,se.<span class="hljs-property">contains</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span>(e.<span class="hljs-property">ownerDocument</span>||e)!=C&amp;&amp;<span class="hljs-title function_">T</span>(e),<span class="hljs-title function_">y</span>(e,t)&#125;,se.<span class="hljs-property">attr</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;(e.<span class="hljs-property">ownerDocument</span>||e)!=C&amp;&amp;<span class="hljs-title function_">T</span>(e);<span class="hljs-keyword">var</span> n=b.<span class="hljs-property">attrHandle</span>[t.<span class="hljs-title function_">toLowerCase</span>()],r=n&amp;&amp;D.<span class="hljs-title function_">call</span>(b.<span class="hljs-property">attrHandle</span>,t.<span class="hljs-title function_">toLowerCase</span>())?<span class="hljs-title function_">n</span>(e,t,!E):<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>;<span class="hljs-keyword">return</span> <span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==r?<span class="hljs-attr">r</span>:d.<span class="hljs-property">attributes</span>||!E?e.<span class="hljs-title function_">getAttribute</span>(t):(r=e.<span class="hljs-title function_">getAttributeNode</span>(t))&amp;&amp;r.<span class="hljs-property">specified</span>?r.<span class="hljs-property">value</span>:<span class="hljs-literal">null</span>&#125;,se.<span class="hljs-property">escape</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span>(e+<span class="hljs-string">&quot;&quot;</span>).<span class="hljs-title function_">replace</span>(re,ie)&#125;,se.<span class="hljs-property">error</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Syntax error, unrecognized expression: &quot;</span>+e)&#125;,se.<span class="hljs-property">uniqueSort</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t,n=[],r=<span class="hljs-number">0</span>,i=<span class="hljs-number">0</span>;<span class="hljs-keyword">if</span>(l=!d.<span class="hljs-property">detectDuplicates</span>,u=!d.<span class="hljs-property">sortStable</span>&amp;&amp;e.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>),e.<span class="hljs-title function_">sort</span>(j),l)&#123;<span class="hljs-keyword">while</span>(t=e[i++])t===e[i]&amp;&amp;(r=n.<span class="hljs-title function_">push</span>(i));<span class="hljs-keyword">while</span>(r--)e.<span class="hljs-title function_">splice</span>(n[r],<span class="hljs-number">1</span>)&#125;<span class="hljs-keyword">return</span> u=<span class="hljs-literal">null</span>,e&#125;,o=se.<span class="hljs-property">getText</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t,n=<span class="hljs-string">&quot;&quot;</span>,r=<span class="hljs-number">0</span>,i=e.<span class="hljs-property">nodeType</span>;<span class="hljs-keyword">if</span>(i)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">1</span>===i||<span class="hljs-number">9</span>===i||<span class="hljs-number">11</span>===i)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;string&quot;</span>==<span class="hljs-keyword">typeof</span> e.<span class="hljs-property">textContent</span>)<span class="hljs-keyword">return</span> e.<span class="hljs-property">textContent</span>;<span class="hljs-keyword">for</span>(e=e.<span class="hljs-property">firstChild</span>;e;e=e.<span class="hljs-property">nextSibling</span>)n+=<span class="hljs-title function_">o</span>(e)&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-number">3</span>===i||<span class="hljs-number">4</span>===i)<span class="hljs-keyword">return</span> e.<span class="hljs-property">nodeValue</span>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">while</span>(t=e[r++])n+=<span class="hljs-title function_">o</span>(t);<span class="hljs-keyword">return</span> n&#125;,(b=se.<span class="hljs-property">selectors</span>=&#123;<span class="hljs-attr">cacheLength</span>:<span class="hljs-number">50</span>,<span class="hljs-attr">createPseudo</span>:le,<span class="hljs-attr">match</span>:G,<span class="hljs-attr">attrHandle</span>:&#123;&#125;,<span class="hljs-attr">find</span>:&#123;&#125;,<span class="hljs-attr">relative</span>:&#123;<span class="hljs-string">&quot;&gt;&quot;</span>:&#123;<span class="hljs-attr">dir</span>:<span class="hljs-string">&quot;parentNode&quot;</span>,<span class="hljs-attr">first</span>:!<span class="hljs-number">0</span>&#125;,<span class="hljs-string">&quot; &quot;</span>:&#123;<span class="hljs-attr">dir</span>:<span class="hljs-string">&quot;parentNode&quot;</span>&#125;,<span class="hljs-string">&quot;+&quot;</span>:&#123;<span class="hljs-attr">dir</span>:<span class="hljs-string">&quot;previousSibling&quot;</span>,<span class="hljs-attr">first</span>:!<span class="hljs-number">0</span>&#125;,<span class="hljs-string">&quot;~&quot;</span>:&#123;<span class="hljs-attr">dir</span>:<span class="hljs-string">&quot;previousSibling&quot;</span>&#125;&#125;,<span class="hljs-attr">preFilter</span>:&#123;<span class="hljs-attr">ATTR</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e[<span class="hljs-number">1</span>]=e[<span class="hljs-number">1</span>].<span class="hljs-title function_">replace</span>(te,ne),e[<span class="hljs-number">3</span>]=(e[<span class="hljs-number">3</span>]||e[<span class="hljs-number">4</span>]||e[<span class="hljs-number">5</span>]||<span class="hljs-string">&quot;&quot;</span>).<span class="hljs-title function_">replace</span>(te,ne),<span class="hljs-string">&quot;~=&quot;</span>===e[<span class="hljs-number">2</span>]&amp;&amp;(e[<span class="hljs-number">3</span>]=<span class="hljs-string">&quot; &quot;</span>+e[<span class="hljs-number">3</span>]+<span class="hljs-string">&quot; &quot;</span>),e.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>,<span class="hljs-number">4</span>)&#125;,<span class="hljs-attr">CHILD</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e[<span class="hljs-number">1</span>]=e[<span class="hljs-number">1</span>].<span class="hljs-title function_">toLowerCase</span>(),<span class="hljs-string">&quot;nth&quot;</span>===e[<span class="hljs-number">1</span>].<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>,<span class="hljs-number">3</span>)?(e[<span class="hljs-number">3</span>]||se.<span class="hljs-title function_">error</span>(e[<span class="hljs-number">0</span>]),e[<span class="hljs-number">4</span>]=+(e[<span class="hljs-number">4</span>]?e[<span class="hljs-number">5</span>]+(e[<span class="hljs-number">6</span>]||<span class="hljs-number">1</span>):<span class="hljs-number">2</span>*(<span class="hljs-string">&quot;even&quot;</span>===e[<span class="hljs-number">3</span>]||<span class="hljs-string">&quot;odd&quot;</span>===e[<span class="hljs-number">3</span>])),e[<span class="hljs-number">5</span>]=+(e[<span class="hljs-number">7</span>]+e[<span class="hljs-number">8</span>]||<span class="hljs-string">&quot;odd&quot;</span>===e[<span class="hljs-number">3</span>])):e[<span class="hljs-number">3</span>]&amp;&amp;se.<span class="hljs-title function_">error</span>(e[<span class="hljs-number">0</span>]),e&#125;,<span class="hljs-attr">PSEUDO</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t,n=!e[<span class="hljs-number">6</span>]&amp;&amp;e[<span class="hljs-number">2</span>];<span class="hljs-keyword">return</span> G.<span class="hljs-property">CHILD</span>.<span class="hljs-title function_">test</span>(e[<span class="hljs-number">0</span>])?<span class="hljs-attr">null</span>:(e[<span class="hljs-number">3</span>]?e[<span class="hljs-number">2</span>]=e[<span class="hljs-number">4</span>]||e[<span class="hljs-number">5</span>]||<span class="hljs-string">&quot;&quot;</span>:n&amp;&amp;X.<span class="hljs-title function_">test</span>(n)&amp;&amp;(t=<span class="hljs-title function_">h</span>(n,!<span class="hljs-number">0</span>))&amp;&amp;(t=n.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;)&quot;</span>,n.<span class="hljs-property">length</span>-t)-n.<span class="hljs-property">length</span>)&amp;&amp;(e[<span class="hljs-number">0</span>]=e[<span class="hljs-number">0</span>].<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>,t),e[<span class="hljs-number">2</span>]=n.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>,t)),e.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>,<span class="hljs-number">3</span>))&#125;&#125;,<span class="hljs-attr">filter</span>:&#123;<span class="hljs-attr">TAG</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=e.<span class="hljs-title function_">replace</span>(te,ne).<span class="hljs-title function_">toLowerCase</span>();<span class="hljs-keyword">return</span><span class="hljs-string">&quot;*&quot;</span>===e?<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span>!<span class="hljs-number">0</span>&#125;:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e.<span class="hljs-property">nodeName</span>&amp;&amp;e.<span class="hljs-property">nodeName</span>.<span class="hljs-title function_">toLowerCase</span>()===t&#125;&#125;,<span class="hljs-attr">CLASS</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=m[e+<span class="hljs-string">&quot; &quot;</span>];<span class="hljs-keyword">return</span> t||(t=<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&quot;(^|&quot;</span>+M+<span class="hljs-string">&quot;)&quot;</span>+e+<span class="hljs-string">&quot;(&quot;</span>+M+<span class="hljs-string">&quot;|$)&quot;</span>))&amp;&amp;<span class="hljs-title function_">m</span>(e,<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> t.<span class="hljs-title function_">test</span>(<span class="hljs-string">&quot;string&quot;</span>==<span class="hljs-keyword">typeof</span> e.<span class="hljs-property">className</span>&amp;&amp;e.<span class="hljs-property">className</span>||<span class="hljs-string">&quot;undefined&quot;</span>!=<span class="hljs-keyword">typeof</span> e.<span class="hljs-property">getAttribute</span>&amp;&amp;e.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;class&quot;</span>)||<span class="hljs-string">&quot;&quot;</span>)&#125;)&#125;,<span class="hljs-attr">ATTR</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">n,r,i</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=se.<span class="hljs-title function_">attr</span>(e,n);<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>==t?<span class="hljs-string">&quot;!=&quot;</span>===<span class="hljs-attr">r</span>:!r||(t+=<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-string">&quot;=&quot;</span>===r?t===<span class="hljs-attr">i</span>:<span class="hljs-string">&quot;!=&quot;</span>===r?t!==<span class="hljs-attr">i</span>:<span class="hljs-string">&quot;^=&quot;</span>===r?i&amp;&amp;<span class="hljs-number">0</span>===t.<span class="hljs-title function_">indexOf</span>(i):<span class="hljs-string">&quot;*=&quot;</span>===r?i&amp;&amp;-<span class="hljs-number">1</span>&lt;t.<span class="hljs-title function_">indexOf</span>(i):<span class="hljs-string">&quot;$=&quot;</span>===r?i&amp;&amp;t.<span class="hljs-title function_">slice</span>(-i.<span class="hljs-property">length</span>)===<span class="hljs-attr">i</span>:<span class="hljs-string">&quot;~=&quot;</span>===r?-<span class="hljs-number">1</span>&lt;(<span class="hljs-string">&quot; &quot;</span>+t.<span class="hljs-title function_">replace</span>(B,<span class="hljs-string">&quot; &quot;</span>)+<span class="hljs-string">&quot; &quot;</span>).<span class="hljs-title function_">indexOf</span>(i):<span class="hljs-string">&quot;|=&quot;</span>===r&amp;&amp;(t===i||t.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>,i.<span class="hljs-property">length</span>+<span class="hljs-number">1</span>)===i+<span class="hljs-string">&quot;-&quot;</span>))&#125;&#125;,<span class="hljs-attr">CHILD</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">h,e,t,g,v</span>)&#123;<span class="hljs-keyword">var</span> y=<span class="hljs-string">&quot;nth&quot;</span>!==h.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>,<span class="hljs-number">3</span>),m=<span class="hljs-string">&quot;last&quot;</span>!==h.<span class="hljs-title function_">slice</span>(-<span class="hljs-number">4</span>),x=<span class="hljs-string">&quot;of-type&quot;</span>===e;<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>===g&amp;&amp;<span class="hljs-number">0</span>===v?<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span>!!e.<span class="hljs-property">parentNode</span>&#125;:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r,i,o,a,s,u,l=y!==m?<span class="hljs-string">&quot;nextSibling&quot;</span>:<span class="hljs-string">&quot;previousSibling&quot;</span>,c=e.<span class="hljs-property">parentNode</span>,f=x&amp;&amp;e.<span class="hljs-property">nodeName</span>.<span class="hljs-title function_">toLowerCase</span>(),p=!n&amp;&amp;!x,d=!<span class="hljs-number">1</span>;<span class="hljs-keyword">if</span>(c)&#123;<span class="hljs-keyword">if</span>(y)&#123;<span class="hljs-keyword">while</span>(l)&#123;a=e;<span class="hljs-keyword">while</span>(a=a[l])<span class="hljs-keyword">if</span>(x?a.<span class="hljs-property">nodeName</span>.<span class="hljs-title function_">toLowerCase</span>()===<span class="hljs-attr">f</span>:<span class="hljs-number">1</span>===a.<span class="hljs-property">nodeType</span>)<span class="hljs-keyword">return</span>!<span class="hljs-number">1</span>;u=l=<span class="hljs-string">&quot;only&quot;</span>===h&amp;&amp;!u&amp;&amp;<span class="hljs-string">&quot;nextSibling&quot;</span>&#125;<span class="hljs-keyword">return</span>!<span class="hljs-number">0</span>&#125;<span class="hljs-keyword">if</span>(u=[m?c.<span class="hljs-property">firstChild</span>:c.<span class="hljs-property">lastChild</span>],m&amp;&amp;p)&#123;d=(s=(r=(i=(o=(a=c)[S]||(a[S]=&#123;&#125;))[a.<span class="hljs-property">uniqueID</span>]||(o[a.<span class="hljs-property">uniqueID</span>]=&#123;&#125;))[h]||[])[<span class="hljs-number">0</span>]===k&amp;&amp;r[<span class="hljs-number">1</span>])&amp;&amp;r[<span class="hljs-number">2</span>],a=s&amp;&amp;c.<span class="hljs-property">childNodes</span>[s];<span class="hljs-keyword">while</span>(a=++s&amp;&amp;a&amp;&amp;a[l]||(d=s=<span class="hljs-number">0</span>)||u.<span class="hljs-title function_">pop</span>())<span class="hljs-keyword">if</span>(<span class="hljs-number">1</span>===a.<span class="hljs-property">nodeType</span>&amp;&amp;++d&amp;&amp;a===e)&#123;i[h]=[k,s,d];<span class="hljs-keyword">break</span>&#125;&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(p&amp;&amp;(d=s=(r=(i=(o=(a=e)[S]||(a[S]=&#123;&#125;))[a.<span class="hljs-property">uniqueID</span>]||(o[a.<span class="hljs-property">uniqueID</span>]=&#123;&#125;))[h]||[])[<span class="hljs-number">0</span>]===k&amp;&amp;r[<span class="hljs-number">1</span>]),!<span class="hljs-number">1</span>===d)<span class="hljs-keyword">while</span>(a=++s&amp;&amp;a&amp;&amp;a[l]||(d=s=<span class="hljs-number">0</span>)||u.<span class="hljs-title function_">pop</span>())<span class="hljs-keyword">if</span>((x?a.<span class="hljs-property">nodeName</span>.<span class="hljs-title function_">toLowerCase</span>()===<span class="hljs-attr">f</span>:<span class="hljs-number">1</span>===a.<span class="hljs-property">nodeType</span>)&amp;&amp;++d&amp;&amp;(p&amp;&amp;((i=(o=a[S]||(a[S]=&#123;&#125;))[a.<span class="hljs-property">uniqueID</span>]||(o[a.<span class="hljs-property">uniqueID</span>]=&#123;&#125;))[h]=[k,d]),a===e))<span class="hljs-keyword">break</span>;<span class="hljs-keyword">return</span>(d-=v)===g||d%g==<span class="hljs-number">0</span>&amp;&amp;<span class="hljs-number">0</span>&lt;=d/g&#125;&#125;&#125;,<span class="hljs-attr">PSEUDO</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,o</span>)&#123;<span class="hljs-keyword">var</span> t,a=b.<span class="hljs-property">pseudos</span>[e]||b.<span class="hljs-property">setFilters</span>[e.<span class="hljs-title function_">toLowerCase</span>()]||se.<span class="hljs-title function_">error</span>(<span class="hljs-string">&quot;unsupported pseudo: &quot;</span>+e);<span class="hljs-keyword">return</span> a[S]?<span class="hljs-title function_">a</span>(o):<span class="hljs-number">1</span>&lt;a.<span class="hljs-property">length</span>?(t=[e,e,<span class="hljs-string">&quot;&quot;</span>,o],b.<span class="hljs-property">setFilters</span>.<span class="hljs-title function_">hasOwnProperty</span>(e.<span class="hljs-title function_">toLowerCase</span>())?<span class="hljs-title function_">le</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n,r=<span class="hljs-title function_">a</span>(e,o),i=r.<span class="hljs-property">length</span>;<span class="hljs-keyword">while</span>(i--)e[n=<span class="hljs-title function_">P</span>(e,r[i])]=!(t[n]=r[i])&#125;):<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">a</span>(e,<span class="hljs-number">0</span>,t)&#125;):a&#125;&#125;,<span class="hljs-attr">pseudos</span>:&#123;<span class="hljs-attr">not</span>:<span class="hljs-title function_">le</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> r=[],i=[],s=<span class="hljs-title function_">f</span>(e.<span class="hljs-title function_">replace</span>($,<span class="hljs-string">&quot;$1&quot;</span>));<span class="hljs-keyword">return</span> s[S]?<span class="hljs-title function_">le</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n,r</span>)&#123;<span class="hljs-keyword">var</span> i,o=<span class="hljs-title function_">s</span>(e,<span class="hljs-literal">null</span>,r,[]),a=e.<span class="hljs-property">length</span>;<span class="hljs-keyword">while</span>(a--)(i=o[a])&amp;&amp;(e[a]=!(t[a]=i))&#125;):<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">return</span> r[<span class="hljs-number">0</span>]=e,<span class="hljs-title function_">s</span>(r,<span class="hljs-literal">null</span>,n,i),r[<span class="hljs-number">0</span>]=<span class="hljs-literal">null</span>,!i.<span class="hljs-title function_">pop</span>()&#125;&#125;),<span class="hljs-attr">has</span>:<span class="hljs-title function_">le</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>&lt;<span class="hljs-title function_">se</span>(t,e).<span class="hljs-property">length</span>&#125;&#125;),<span class="hljs-attr">contains</span>:<span class="hljs-title function_">le</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>)&#123;<span class="hljs-keyword">return</span> t=t.<span class="hljs-title function_">replace</span>(te,ne),<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span>-<span class="hljs-number">1</span>&lt;(e.<span class="hljs-property">textContent</span>||<span class="hljs-title function_">o</span>(e)).<span class="hljs-title function_">indexOf</span>(t)&#125;&#125;),<span class="hljs-attr">lang</span>:<span class="hljs-title function_">le</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>)&#123;<span class="hljs-keyword">return</span> V.<span class="hljs-title function_">test</span>(n||<span class="hljs-string">&quot;&quot;</span>)||se.<span class="hljs-title function_">error</span>(<span class="hljs-string">&quot;unsupported lang: &quot;</span>+n),n=n.<span class="hljs-title function_">replace</span>(te,ne).<span class="hljs-title function_">toLowerCase</span>(),<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t;<span class="hljs-keyword">do</span>&#123;<span class="hljs-keyword">if</span>(t=E?e.<span class="hljs-property">lang</span>:e.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;xml:lang&quot;</span>)||e.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;lang&quot;</span>))<span class="hljs-keyword">return</span>(t=t.<span class="hljs-title function_">toLowerCase</span>())===n||<span class="hljs-number">0</span>===t.<span class="hljs-title function_">indexOf</span>(n+<span class="hljs-string">&quot;-&quot;</span>)&#125;<span class="hljs-keyword">while</span>((e=e.<span class="hljs-property">parentNode</span>)&amp;&amp;<span class="hljs-number">1</span>===e.<span class="hljs-property">nodeType</span>);<span class="hljs-keyword">return</span>!<span class="hljs-number">1</span>&#125;&#125;),<span class="hljs-attr">target</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=n.<span class="hljs-property">location</span>&amp;&amp;n.<span class="hljs-property">location</span>.<span class="hljs-property">hash</span>;<span class="hljs-keyword">return</span> t&amp;&amp;t.<span class="hljs-title function_">slice</span>(<span class="hljs-number">1</span>)===e.<span class="hljs-property">id</span>&#125;,<span class="hljs-attr">root</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e===a&#125;,<span class="hljs-attr">focus</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e===C.<span class="hljs-property">activeElement</span>&amp;&amp;(!C.<span class="hljs-property">hasFocus</span>||C.<span class="hljs-title function_">hasFocus</span>())&amp;&amp;!!(e.<span class="hljs-property">type</span>||e.<span class="hljs-property">href</span>||~e.<span class="hljs-property">tabIndex</span>)&#125;,<span class="hljs-attr">enabled</span>:<span class="hljs-title function_">ge</span>(!<span class="hljs-number">1</span>),<span class="hljs-attr">disabled</span>:<span class="hljs-title function_">ge</span>(!<span class="hljs-number">0</span>),<span class="hljs-attr">checked</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=e.<span class="hljs-property">nodeName</span>.<span class="hljs-title function_">toLowerCase</span>();<span class="hljs-keyword">return</span><span class="hljs-string">&quot;input&quot;</span>===t&amp;&amp;!!e.<span class="hljs-property">checked</span>||<span class="hljs-string">&quot;option&quot;</span>===t&amp;&amp;!!e.<span class="hljs-property">selected</span>&#125;,<span class="hljs-attr">selected</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e.<span class="hljs-property">parentNode</span>&amp;&amp;e.<span class="hljs-property">parentNode</span>.<span class="hljs-property">selectedIndex</span>,!<span class="hljs-number">0</span>===e.<span class="hljs-property">selected</span>&#125;,<span class="hljs-attr">empty</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">for</span>(e=e.<span class="hljs-property">firstChild</span>;e;e=e.<span class="hljs-property">nextSibling</span>)<span class="hljs-keyword">if</span>(e.<span class="hljs-property">nodeType</span>&lt;<span class="hljs-number">6</span>)<span class="hljs-keyword">return</span>!<span class="hljs-number">1</span>;<span class="hljs-keyword">return</span>!<span class="hljs-number">0</span>&#125;,<span class="hljs-attr">parent</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span>!b.<span class="hljs-property">pseudos</span>.<span class="hljs-title function_">empty</span>(e)&#125;,<span class="hljs-attr">header</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> J.<span class="hljs-title function_">test</span>(e.<span class="hljs-property">nodeName</span>)&#125;,<span class="hljs-attr">input</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> Q.<span class="hljs-title function_">test</span>(e.<span class="hljs-property">nodeName</span>)&#125;,<span class="hljs-attr">button</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=e.<span class="hljs-property">nodeName</span>.<span class="hljs-title function_">toLowerCase</span>();<span class="hljs-keyword">return</span><span class="hljs-string">&quot;input&quot;</span>===t&amp;&amp;<span class="hljs-string">&quot;button&quot;</span>===e.<span class="hljs-property">type</span>||<span class="hljs-string">&quot;button&quot;</span>===t&#125;,<span class="hljs-attr">text</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t;<span class="hljs-keyword">return</span><span class="hljs-string">&quot;input&quot;</span>===e.<span class="hljs-property">nodeName</span>.<span class="hljs-title function_">toLowerCase</span>()&amp;&amp;<span class="hljs-string">&quot;text&quot;</span>===e.<span class="hljs-property">type</span>&amp;&amp;(<span class="hljs-literal">null</span>==(t=e.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;type&quot;</span>))||<span class="hljs-string">&quot;text&quot;</span>===t.<span class="hljs-title function_">toLowerCase</span>())&#125;,<span class="hljs-attr">first</span>:<span class="hljs-title function_">ve</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span>[<span class="hljs-number">0</span>]&#125;),<span class="hljs-attr">last</span>:<span class="hljs-title function_">ve</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span>[t-<span class="hljs-number">1</span>]&#125;),<span class="hljs-attr">eq</span>:<span class="hljs-title function_">ve</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">return</span>[n&lt;<span class="hljs-number">0</span>?n+<span class="hljs-attr">t</span>:n]&#125;),<span class="hljs-attr">even</span>:<span class="hljs-title function_">ve</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> n=<span class="hljs-number">0</span>;n&lt;t;n+=<span class="hljs-number">2</span>)e.<span class="hljs-title function_">push</span>(n);<span class="hljs-keyword">return</span> e&#125;),<span class="hljs-attr">odd</span>:<span class="hljs-title function_">ve</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> n=<span class="hljs-number">1</span>;n&lt;t;n+=<span class="hljs-number">2</span>)e.<span class="hljs-title function_">push</span>(n);<span class="hljs-keyword">return</span> e&#125;),<span class="hljs-attr">lt</span>:<span class="hljs-title function_">ve</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> r=n&lt;<span class="hljs-number">0</span>?n+<span class="hljs-attr">t</span>:t&lt;n?<span class="hljs-attr">t</span>:n;<span class="hljs-number">0</span>&lt;=--r;)e.<span class="hljs-title function_">push</span>(r);<span class="hljs-keyword">return</span> e&#125;),<span class="hljs-attr">gt</span>:<span class="hljs-title function_">ve</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> r=n&lt;<span class="hljs-number">0</span>?n+<span class="hljs-attr">t</span>:n;++r&lt;t;)e.<span class="hljs-title function_">push</span>(r);<span class="hljs-keyword">return</span> e&#125;)&#125;&#125;).<span class="hljs-property">pseudos</span>.<span class="hljs-property">nth</span>=b.<span class="hljs-property">pseudos</span>.<span class="hljs-property">eq</span>,&#123;<span class="hljs-attr">radio</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">checkbox</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">file</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">password</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">image</span>:!<span class="hljs-number">0</span>&#125;)b.<span class="hljs-property">pseudos</span>[e]=<span class="hljs-title function_">de</span>(e);<span class="hljs-keyword">for</span>(e <span class="hljs-keyword">in</span>&#123;<span class="hljs-attr">submit</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">reset</span>:!<span class="hljs-number">0</span>&#125;)b.<span class="hljs-property">pseudos</span>[e]=<span class="hljs-title function_">he</span>(e);<span class="hljs-keyword">function</span> <span class="hljs-title function_">me</span>(<span class="hljs-params"></span>)&#123;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">xe</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> t=<span class="hljs-number">0</span>,n=e.<span class="hljs-property">length</span>,r=<span class="hljs-string">&quot;&quot;</span>;t&lt;n;t++)r+=e[t].<span class="hljs-property">value</span>;<span class="hljs-keyword">return</span> r&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">be</span>(<span class="hljs-params">s,e,t</span>)&#123;<span class="hljs-keyword">var</span> u=e.<span class="hljs-property">dir</span>,l=e.<span class="hljs-property">next</span>,c=l||u,f=t&amp;&amp;<span class="hljs-string">&quot;parentNode&quot;</span>===c,p=r++;<span class="hljs-keyword">return</span> e.<span class="hljs-property">first</span>?<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">while</span>(e=e[u])<span class="hljs-keyword">if</span>(<span class="hljs-number">1</span>===e.<span class="hljs-property">nodeType</span>||f)<span class="hljs-keyword">return</span> <span class="hljs-title function_">s</span>(e,t,n);<span class="hljs-keyword">return</span>!<span class="hljs-number">1</span>&#125;:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r,i,o,a=[k,p];<span class="hljs-keyword">if</span>(n)&#123;<span class="hljs-keyword">while</span>(e=e[u])<span class="hljs-keyword">if</span>((<span class="hljs-number">1</span>===e.<span class="hljs-property">nodeType</span>||f)&amp;&amp;<span class="hljs-title function_">s</span>(e,t,n))<span class="hljs-keyword">return</span>!<span class="hljs-number">0</span>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">while</span>(e=e[u])<span class="hljs-keyword">if</span>(<span class="hljs-number">1</span>===e.<span class="hljs-property">nodeType</span>||f)<span class="hljs-keyword">if</span>(i=(o=e[S]||(e[S]=&#123;&#125;))[e.<span class="hljs-property">uniqueID</span>]||(o[e.<span class="hljs-property">uniqueID</span>]=&#123;&#125;),l&amp;&amp;l===e.<span class="hljs-property">nodeName</span>.<span class="hljs-title function_">toLowerCase</span>())e=e[u]||e;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">if</span>((r=i[c])&amp;&amp;r[<span class="hljs-number">0</span>]===k&amp;&amp;r[<span class="hljs-number">1</span>]===p)<span class="hljs-keyword">return</span> a[<span class="hljs-number">2</span>]=r[<span class="hljs-number">2</span>];<span class="hljs-keyword">if</span>((i[c]=a)[<span class="hljs-number">2</span>]=<span class="hljs-title function_">s</span>(e,t,n))<span class="hljs-keyword">return</span>!<span class="hljs-number">0</span>&#125;<span class="hljs-keyword">return</span>!<span class="hljs-number">1</span>&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">we</span>(<span class="hljs-params">i</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>&lt;i.<span class="hljs-property">length</span>?<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r=i.<span class="hljs-property">length</span>;<span class="hljs-keyword">while</span>(r--)<span class="hljs-keyword">if</span>(!i[r](e,t,n))<span class="hljs-keyword">return</span>!<span class="hljs-number">1</span>;<span class="hljs-keyword">return</span>!<span class="hljs-number">0</span>&#125;:i[<span class="hljs-number">0</span>]&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">Te</span>(<span class="hljs-params">e,t,n,r,i</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> o,a=[],s=<span class="hljs-number">0</span>,u=e.<span class="hljs-property">length</span>,l=<span class="hljs-literal">null</span>!=t;s&lt;u;s++)(o=e[s])&amp;&amp;(n&amp;&amp;!<span class="hljs-title function_">n</span>(o,r,i)||(a.<span class="hljs-title function_">push</span>(o),l&amp;&amp;t.<span class="hljs-title function_">push</span>(s)));<span class="hljs-keyword">return</span> a&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">Ce</span>(<span class="hljs-params">d,h,g,v,y,e</span>)&#123;<span class="hljs-keyword">return</span> v&amp;&amp;!v[S]&amp;&amp;(v=<span class="hljs-title class_">Ce</span>(v)),y&amp;&amp;!y[S]&amp;&amp;(y=<span class="hljs-title class_">Ce</span>(y,e)),<span class="hljs-title function_">le</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n,r</span>)&#123;<span class="hljs-keyword">var</span> i,o,a,s=[],u=[],l=t.<span class="hljs-property">length</span>,c=e||<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> r=<span class="hljs-number">0</span>,i=t.<span class="hljs-property">length</span>;r&lt;i;r++)<span class="hljs-title function_">se</span>(e,t[r],n);<span class="hljs-keyword">return</span> n&#125;(h||<span class="hljs-string">&quot;*&quot;</span>,n.<span class="hljs-property">nodeType</span>?[n]:n,[]),f=!d||!e&amp;&amp;h?<span class="hljs-attr">c</span>:<span class="hljs-title class_">Te</span>(c,s,d,n,r),p=g?y||(e?<span class="hljs-attr">d</span>:l||v)?[]:<span class="hljs-attr">t</span>:f;<span class="hljs-keyword">if</span>(g&amp;&amp;<span class="hljs-title function_">g</span>(f,p,n,r),v)&#123;i=<span class="hljs-title class_">Te</span>(p,u),<span class="hljs-title function_">v</span>(i,[],n,r),o=i.<span class="hljs-property">length</span>;<span class="hljs-keyword">while</span>(o--)(a=i[o])&amp;&amp;(p[u[o]]=!(f[u[o]]=a))&#125;<span class="hljs-keyword">if</span>(e)&#123;<span class="hljs-keyword">if</span>(y||d)&#123;<span class="hljs-keyword">if</span>(y)&#123;i=[],o=p.<span class="hljs-property">length</span>;<span class="hljs-keyword">while</span>(o--)(a=p[o])&amp;&amp;i.<span class="hljs-title function_">push</span>(f[o]=a);<span class="hljs-title function_">y</span>(<span class="hljs-literal">null</span>,p=[],i,r)&#125;o=p.<span class="hljs-property">length</span>;<span class="hljs-keyword">while</span>(o--)(a=p[o])&amp;&amp;-<span class="hljs-number">1</span>&lt;(i=y?<span class="hljs-title function_">P</span>(e,a):s[o])&amp;&amp;(e[i]=!(t[i]=a))&#125;&#125;<span class="hljs-keyword">else</span> p=<span class="hljs-title class_">Te</span>(p===t?p.<span class="hljs-title function_">splice</span>(l,p.<span class="hljs-property">length</span>):p),y?<span class="hljs-title function_">y</span>(<span class="hljs-literal">null</span>,t,p,r):H.<span class="hljs-title function_">apply</span>(t,p)&#125;)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">Ee</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i,t,n,r=e.<span class="hljs-property">length</span>,o=b.<span class="hljs-property">relative</span>[e[<span class="hljs-number">0</span>].<span class="hljs-property">type</span>],a=o||b.<span class="hljs-property">relative</span>[<span class="hljs-string">&quot; &quot;</span>],s=o?<span class="hljs-number">1</span>:<span class="hljs-number">0</span>,u=<span class="hljs-title function_">be</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e===i&#125;,a,!<span class="hljs-number">0</span>),l=<span class="hljs-title function_">be</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span>-<span class="hljs-number">1</span>&lt;<span class="hljs-title function_">P</span>(i,e)&#125;,a,!<span class="hljs-number">0</span>),c=[<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r=!o&amp;&amp;(n||t!==w)||((i=t).<span class="hljs-property">nodeType</span>?<span class="hljs-title function_">u</span>(e,t,n):<span class="hljs-title function_">l</span>(e,t,n));<span class="hljs-keyword">return</span> i=<span class="hljs-literal">null</span>,r&#125;];s&lt;r;s++)<span class="hljs-keyword">if</span>(t=b.<span class="hljs-property">relative</span>[e[s].<span class="hljs-property">type</span>])c=[<span class="hljs-title function_">be</span>(<span class="hljs-title function_">we</span>(c),t)];<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">if</span>((t=b.<span class="hljs-property">filter</span>[e[s].<span class="hljs-property">type</span>].<span class="hljs-title function_">apply</span>(<span class="hljs-literal">null</span>,e[s].<span class="hljs-property">matches</span>))[S])&#123;<span class="hljs-keyword">for</span>(n=++s;n&lt;r;n++)<span class="hljs-keyword">if</span>(b.<span class="hljs-property">relative</span>[e[n].<span class="hljs-property">type</span>])<span class="hljs-keyword">break</span>;<span class="hljs-keyword">return</span> <span class="hljs-title class_">Ce</span>(<span class="hljs-number">1</span>&lt;s&amp;&amp;<span class="hljs-title function_">we</span>(c),<span class="hljs-number">1</span>&lt;s&amp;&amp;<span class="hljs-title function_">xe</span>(e.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>,s-<span class="hljs-number">1</span>).<span class="hljs-title function_">concat</span>(&#123;<span class="hljs-attr">value</span>:<span class="hljs-string">&quot; &quot;</span>===e[s-<span class="hljs-number">2</span>].<span class="hljs-property">type</span>?<span class="hljs-string">&quot;*&quot;</span>:<span class="hljs-string">&quot;&quot;</span>&#125;)).<span class="hljs-title function_">replace</span>($,<span class="hljs-string">&quot;$1&quot;</span>),t,s&lt;n&amp;&amp;<span class="hljs-title class_">Ee</span>(e.<span class="hljs-title function_">slice</span>(s,n)),n&lt;r&amp;&amp;<span class="hljs-title class_">Ee</span>(e=e.<span class="hljs-title function_">slice</span>(n)),n&lt;r&amp;&amp;<span class="hljs-title function_">xe</span>(e))&#125;c.<span class="hljs-title function_">push</span>(t)&#125;<span class="hljs-keyword">return</span> <span class="hljs-title function_">we</span>(c)&#125;<span class="hljs-keyword">return</span> me.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>=b.<span class="hljs-property">filters</span>=b.<span class="hljs-property">pseudos</span>,b.<span class="hljs-property">setFilters</span>=<span class="hljs-keyword">new</span> me,h=se.<span class="hljs-property">tokenize</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n,r,i,o,a,s,u,l=x[e+<span class="hljs-string">&quot; &quot;</span>];<span class="hljs-keyword">if</span>(l)<span class="hljs-keyword">return</span> t?<span class="hljs-number">0</span>:l.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);a=e,s=[],u=b.<span class="hljs-property">preFilter</span>;<span class="hljs-keyword">while</span>(a)&#123;<span class="hljs-keyword">for</span>(o <span class="hljs-keyword">in</span> n&amp;&amp;!(r=_.<span class="hljs-title function_">exec</span>(a))||(r&amp;&amp;(a=a.<span class="hljs-title function_">slice</span>(r[<span class="hljs-number">0</span>].<span class="hljs-property">length</span>)||a),s.<span class="hljs-title function_">push</span>(i=[])),n=!<span class="hljs-number">1</span>,(r=z.<span class="hljs-title function_">exec</span>(a))&amp;&amp;(n=r.<span class="hljs-title function_">shift</span>(),i.<span class="hljs-title function_">push</span>(&#123;<span class="hljs-attr">value</span>:n,<span class="hljs-attr">type</span>:r[<span class="hljs-number">0</span>].<span class="hljs-title function_">replace</span>($,<span class="hljs-string">&quot; &quot;</span>)&#125;),a=a.<span class="hljs-title function_">slice</span>(n.<span class="hljs-property">length</span>)),b.<span class="hljs-property">filter</span>)!(r=G[o].<span class="hljs-title function_">exec</span>(a))||u[o]&amp;&amp;!(r=u[o](r))||(n=r.<span class="hljs-title function_">shift</span>(),i.<span class="hljs-title function_">push</span>(&#123;<span class="hljs-attr">value</span>:n,<span class="hljs-attr">type</span>:o,<span class="hljs-attr">matches</span>:r&#125;),a=a.<span class="hljs-title function_">slice</span>(n.<span class="hljs-property">length</span>));<span class="hljs-keyword">if</span>(!n)<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">return</span> t?a.<span class="hljs-property">length</span>:a?se.<span class="hljs-title function_">error</span>(e):<span class="hljs-title function_">x</span>(e,s).<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>)&#125;,f=se.<span class="hljs-property">compile</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n,v,y,m,x,r,i=[],o=[],a=A[e+<span class="hljs-string">&quot; &quot;</span>];<span class="hljs-keyword">if</span>(!a)&#123;t||(t=<span class="hljs-title function_">h</span>(e)),n=t.<span class="hljs-property">length</span>;<span class="hljs-keyword">while</span>(n--)(a=<span class="hljs-title class_">Ee</span>(t[n]))[S]?i.<span class="hljs-title function_">push</span>(a):o.<span class="hljs-title function_">push</span>(a);(a=<span class="hljs-title function_">A</span>(e,(v=o,m=<span class="hljs-number">0</span>&lt;(y=i).<span class="hljs-property">length</span>,x=<span class="hljs-number">0</span>&lt;v.<span class="hljs-property">length</span>,r=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n,r,i</span>)&#123;<span class="hljs-keyword">var</span> o,a,s,u=<span class="hljs-number">0</span>,l=<span class="hljs-string">&quot;0&quot;</span>,c=e&amp;&amp;[],f=[],p=w,d=e||x&amp;&amp;b.<span class="hljs-property">find</span>.<span class="hljs-title function_">TAG</span>(<span class="hljs-string">&quot;*&quot;</span>,i),h=k+=<span class="hljs-literal">null</span>==p?<span class="hljs-number">1</span>:<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>()||<span class="hljs-number">.1</span>,g=d.<span class="hljs-property">length</span>;<span class="hljs-keyword">for</span>(i&amp;&amp;(w=t==C||t||i);l!==g&amp;&amp;<span class="hljs-literal">null</span>!=(o=d[l]);l++)&#123;<span class="hljs-keyword">if</span>(x&amp;&amp;o)&#123;a=<span class="hljs-number">0</span>,t||o.<span class="hljs-property">ownerDocument</span>==C||(<span class="hljs-title function_">T</span>(o),n=!E);<span class="hljs-keyword">while</span>(s=v[a++])<span class="hljs-keyword">if</span>(<span class="hljs-title function_">s</span>(o,t||C,n))&#123;r.<span class="hljs-title function_">push</span>(o);<span class="hljs-keyword">break</span>&#125;i&amp;&amp;(k=h)&#125;m&amp;&amp;((o=!s&amp;&amp;o)&amp;&amp;u--,e&amp;&amp;c.<span class="hljs-title function_">push</span>(o))&#125;<span class="hljs-keyword">if</span>(u+=l,m&amp;&amp;l!==u)&#123;a=<span class="hljs-number">0</span>;<span class="hljs-keyword">while</span>(s=y[a++])<span class="hljs-title function_">s</span>(c,f,t,n);<span class="hljs-keyword">if</span>(e)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>&lt;u)<span class="hljs-keyword">while</span>(l--)c[l]||f[l]||(f[l]=q.<span class="hljs-title function_">call</span>(r));f=<span class="hljs-title class_">Te</span>(f)&#125;H.<span class="hljs-title function_">apply</span>(r,f),i&amp;&amp;!e&amp;&amp;<span class="hljs-number">0</span>&lt;f.<span class="hljs-property">length</span>&amp;&amp;<span class="hljs-number">1</span>&lt;u+y.<span class="hljs-property">length</span>&amp;&amp;se.<span class="hljs-title function_">uniqueSort</span>(r)&#125;<span class="hljs-keyword">return</span> i&amp;&amp;(k=h,w=p),c&#125;,m?<span class="hljs-title function_">le</span>(r):r))).<span class="hljs-property">selector</span>=e&#125;<span class="hljs-keyword">return</span> a&#125;,g=se.<span class="hljs-property">select</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n,r</span>)&#123;<span class="hljs-keyword">var</span> i,o,a,s,u,l=<span class="hljs-string">&quot;function&quot;</span>==<span class="hljs-keyword">typeof</span> e&amp;&amp;e,c=!r&amp;&amp;<span class="hljs-title function_">h</span>(e=l.<span class="hljs-property">selector</span>||e);<span class="hljs-keyword">if</span>(n=n||[],<span class="hljs-number">1</span>===c.<span class="hljs-property">length</span>)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">2</span>&lt;(o=c[<span class="hljs-number">0</span>]=c[<span class="hljs-number">0</span>].<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>)).<span class="hljs-property">length</span>&amp;&amp;<span class="hljs-string">&quot;ID&quot;</span>===(a=o[<span class="hljs-number">0</span>]).<span class="hljs-property">type</span>&amp;&amp;<span class="hljs-number">9</span>===t.<span class="hljs-property">nodeType</span>&amp;&amp;E&amp;&amp;b.<span class="hljs-property">relative</span>[o[<span class="hljs-number">1</span>].<span class="hljs-property">type</span>])&#123;<span class="hljs-keyword">if</span>(!(t=(b.<span class="hljs-property">find</span>.<span class="hljs-title function_">ID</span>(a.<span class="hljs-property">matches</span>[<span class="hljs-number">0</span>].<span class="hljs-title function_">replace</span>(te,ne),t)||[])[<span class="hljs-number">0</span>]))<span class="hljs-keyword">return</span> n;l&amp;&amp;(t=t.<span class="hljs-property">parentNode</span>),e=e.<span class="hljs-title function_">slice</span>(o.<span class="hljs-title function_">shift</span>().<span class="hljs-property">value</span>.<span class="hljs-property">length</span>)&#125;i=G.<span class="hljs-property">needsContext</span>.<span class="hljs-title function_">test</span>(e)?<span class="hljs-number">0</span>:o.<span class="hljs-property">length</span>;<span class="hljs-keyword">while</span>(i--)&#123;<span class="hljs-keyword">if</span>(a=o[i],b.<span class="hljs-property">relative</span>[s=a.<span class="hljs-property">type</span>])<span class="hljs-keyword">break</span>;<span class="hljs-keyword">if</span>((u=b.<span class="hljs-property">find</span>[s])&amp;&amp;(r=<span class="hljs-title function_">u</span>(a.<span class="hljs-property">matches</span>[<span class="hljs-number">0</span>].<span class="hljs-title function_">replace</span>(te,ne),ee.<span class="hljs-title function_">test</span>(o[<span class="hljs-number">0</span>].<span class="hljs-property">type</span>)&amp;&amp;<span class="hljs-title function_">ye</span>(t.<span class="hljs-property">parentNode</span>)||t)))&#123;<span class="hljs-keyword">if</span>(o.<span class="hljs-title function_">splice</span>(i,<span class="hljs-number">1</span>),!(e=r.<span class="hljs-property">length</span>&amp;&amp;<span class="hljs-title function_">xe</span>(o)))<span class="hljs-keyword">return</span> H.<span class="hljs-title function_">apply</span>(n,r),n;<span class="hljs-keyword">break</span>&#125;&#125;&#125;<span class="hljs-keyword">return</span>(l||<span class="hljs-title function_">f</span>(e,c))(r,t,!E,n,!t||ee.<span class="hljs-title function_">test</span>(e)&amp;&amp;<span class="hljs-title function_">ye</span>(t.<span class="hljs-property">parentNode</span>)||t),n&#125;,d.<span class="hljs-property">sortStable</span>=S.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;&quot;</span>).<span class="hljs-title function_">sort</span>(j).<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)===S,d.<span class="hljs-property">detectDuplicates</span>=!!l,<span class="hljs-title function_">T</span>(),d.<span class="hljs-property">sortDetached</span>=<span class="hljs-title function_">ce</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>&amp;e.<span class="hljs-title function_">compareDocumentPosition</span>(C.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;fieldset&quot;</span>))&#125;),<span class="hljs-title function_">ce</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e.<span class="hljs-property">innerHTML</span>=<span class="hljs-string">&quot;&lt;a href=&#x27;#&#x27;&gt;&lt;/a&gt;&quot;</span>,<span class="hljs-string">&quot;#&quot;</span>===e.<span class="hljs-property">firstChild</span>.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;href&quot;</span>)&#125;)||<span class="hljs-title function_">fe</span>(<span class="hljs-string">&quot;type|href|height|width&quot;</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">if</span>(!n)<span class="hljs-keyword">return</span> e.<span class="hljs-title function_">getAttribute</span>(t,<span class="hljs-string">&quot;type&quot;</span>===t.<span class="hljs-title function_">toLowerCase</span>()?<span class="hljs-number">1</span>:<span class="hljs-number">2</span>)&#125;),d.<span class="hljs-property">attributes</span>&amp;&amp;<span class="hljs-title function_">ce</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e.<span class="hljs-property">innerHTML</span>=<span class="hljs-string">&quot;&lt;input/&gt;&quot;</span>,e.<span class="hljs-property">firstChild</span>.<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&quot;value&quot;</span>,<span class="hljs-string">&quot;&quot;</span>),<span class="hljs-string">&quot;&quot;</span>===e.<span class="hljs-property">firstChild</span>.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;value&quot;</span>)&#125;)||<span class="hljs-title function_">fe</span>(<span class="hljs-string">&quot;value&quot;</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">if</span>(!n&amp;&amp;<span class="hljs-string">&quot;input&quot;</span>===e.<span class="hljs-property">nodeName</span>.<span class="hljs-title function_">toLowerCase</span>())<span class="hljs-keyword">return</span> e.<span class="hljs-property">defaultValue</span>&#125;),<span class="hljs-title function_">ce</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>==e.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;disabled&quot;</span>)&#125;)||<span class="hljs-title function_">fe</span>(R,<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r;<span class="hljs-keyword">if</span>(!n)<span class="hljs-keyword">return</span>!<span class="hljs-number">0</span>===e[t]?t.<span class="hljs-title function_">toLowerCase</span>():(r=e.<span class="hljs-title function_">getAttributeNode</span>(t))&amp;&amp;r.<span class="hljs-property">specified</span>?r.<span class="hljs-property">value</span>:<span class="hljs-literal">null</span>&#125;),se&#125;(C);S.<span class="hljs-property">find</span>=d,S.<span class="hljs-property">expr</span>=d.<span class="hljs-property">selectors</span>,S.<span class="hljs-property">expr</span>[<span class="hljs-string">&quot;:&quot;</span>]=S.<span class="hljs-property">expr</span>.<span class="hljs-property">pseudos</span>,S.<span class="hljs-property">uniqueSort</span>=S.<span class="hljs-property">unique</span>=d.<span class="hljs-property">uniqueSort</span>,S.<span class="hljs-property">text</span>=d.<span class="hljs-property">getText</span>,S.<span class="hljs-property">isXMLDoc</span>=d.<span class="hljs-property">isXML</span>,S.<span class="hljs-property">contains</span>=d.<span class="hljs-property">contains</span>,S.<span class="hljs-property">escapeSelector</span>=d.<span class="hljs-property">escape</span>;<span class="hljs-keyword">var</span> h=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r=[],i=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==n;<span class="hljs-keyword">while</span>((e=e[t])&amp;&amp;<span class="hljs-number">9</span>!==e.<span class="hljs-property">nodeType</span>)<span class="hljs-keyword">if</span>(<span class="hljs-number">1</span>===e.<span class="hljs-property">nodeType</span>)&#123;<span class="hljs-keyword">if</span>(i&amp;&amp;<span class="hljs-title function_">S</span>(e).<span class="hljs-title function_">is</span>(n))<span class="hljs-keyword">break</span>;r.<span class="hljs-title function_">push</span>(e)&#125;<span class="hljs-keyword">return</span> r&#125;,T=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> n=[];e;e=e.<span class="hljs-property">nextSibling</span>)<span class="hljs-number">1</span>===e.<span class="hljs-property">nodeType</span>&amp;&amp;e!==t&amp;&amp;n.<span class="hljs-title function_">push</span>(e);<span class="hljs-keyword">return</span> n&#125;,k=S.<span class="hljs-property">expr</span>.<span class="hljs-property">match</span>.<span class="hljs-property">needsContext</span>;<span class="hljs-keyword">function</span> <span class="hljs-title function_">A</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span> e.<span class="hljs-property">nodeName</span>&amp;&amp;e.<span class="hljs-property">nodeName</span>.<span class="hljs-title function_">toLowerCase</span>()===t.<span class="hljs-title function_">toLowerCase</span>()&#125;<span class="hljs-keyword">var</span> N=<span class="hljs-regexp">/^&lt;([a-z][^\/\0&gt;:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?&gt;(?:&lt;\/\1&gt;|)$/i</span>;<span class="hljs-keyword">function</span> <span class="hljs-title function_">j</span>(<span class="hljs-params">e,n,r</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">m</span>(n)?S.<span class="hljs-title function_">grep</span>(e,<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span>!!n.<span class="hljs-title function_">call</span>(e,t,e)!==r&#125;):n.<span class="hljs-property">nodeType</span>?S.<span class="hljs-title function_">grep</span>(e,<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e===n!==r&#125;):<span class="hljs-string">&quot;string&quot;</span>!=<span class="hljs-keyword">typeof</span> n?S.<span class="hljs-title function_">grep</span>(e,<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span>-<span class="hljs-number">1</span>&lt;i.<span class="hljs-title function_">call</span>(n,e)!==r&#125;):S.<span class="hljs-title function_">filter</span>(n,e,r)&#125;S.<span class="hljs-property">filter</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r=t[<span class="hljs-number">0</span>];<span class="hljs-keyword">return</span> n&amp;&amp;(e=<span class="hljs-string">&quot;:not(&quot;</span>+e+<span class="hljs-string">&quot;)&quot;</span>),<span class="hljs-number">1</span>===t.<span class="hljs-property">length</span>&amp;&amp;<span class="hljs-number">1</span>===r.<span class="hljs-property">nodeType</span>?S.<span class="hljs-property">find</span>.<span class="hljs-title function_">matchesSelector</span>(r,e)?[r]:[]:S.<span class="hljs-property">find</span>.<span class="hljs-title function_">matches</span>(e,S.<span class="hljs-title function_">grep</span>(t,<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>===e.<span class="hljs-property">nodeType</span>&#125;))&#125;,S.<span class="hljs-property">fn</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">find</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t,n,r=<span class="hljs-variable language_">this</span>.<span class="hljs-property">length</span>,i=<span class="hljs-variable language_">this</span>;<span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;string&quot;</span>!=<span class="hljs-keyword">typeof</span> e)<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">pushStack</span>(<span class="hljs-title function_">S</span>(e).<span class="hljs-title function_">filter</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">for</span>(t=<span class="hljs-number">0</span>;t&lt;r;t++)<span class="hljs-keyword">if</span>(S.<span class="hljs-title function_">contains</span>(i[t],<span class="hljs-variable language_">this</span>))<span class="hljs-keyword">return</span>!<span class="hljs-number">0</span>&#125;));<span class="hljs-keyword">for</span>(n=<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">pushStack</span>([]),t=<span class="hljs-number">0</span>;t&lt;r;t++)S.<span class="hljs-title function_">find</span>(e,i[t],n);<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>&lt;r?S.<span class="hljs-title function_">uniqueSort</span>(n):n&#125;,<span class="hljs-attr">filter</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">pushStack</span>(<span class="hljs-title function_">j</span>(<span class="hljs-variable language_">this</span>,e||[],!<span class="hljs-number">1</span>))&#125;,<span class="hljs-attr">not</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">pushStack</span>(<span class="hljs-title function_">j</span>(<span class="hljs-variable language_">this</span>,e||[],!<span class="hljs-number">0</span>))&#125;,<span class="hljs-attr">is</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span>!!<span class="hljs-title function_">j</span>(<span class="hljs-variable language_">this</span>,<span class="hljs-string">&quot;string&quot;</span>==<span class="hljs-keyword">typeof</span> e&amp;&amp;k.<span class="hljs-title function_">test</span>(e)?<span class="hljs-title function_">S</span>(e):e||[],!<span class="hljs-number">1</span>).<span class="hljs-property">length</span>&#125;&#125;);<span class="hljs-keyword">var</span> D,q=<span class="hljs-regexp">/^(?:\s*(&lt;[\w\W]+&gt;)[^&gt;]*|#([\w-]+))$/</span>;(S.<span class="hljs-property">fn</span>.<span class="hljs-property">init</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r,i;<span class="hljs-keyword">if</span>(!e)<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>;<span class="hljs-keyword">if</span>(n=n||D,<span class="hljs-string">&quot;string&quot;</span>==<span class="hljs-keyword">typeof</span> e)&#123;<span class="hljs-keyword">if</span>(!(r=<span class="hljs-string">&quot;&lt;&quot;</span>===e[<span class="hljs-number">0</span>]&amp;&amp;<span class="hljs-string">&quot;&gt;&quot;</span>===e[e.<span class="hljs-property">length</span>-<span class="hljs-number">1</span>]&amp;&amp;<span class="hljs-number">3</span>&lt;=e.<span class="hljs-property">length</span>?[<span class="hljs-literal">null</span>,e,<span class="hljs-literal">null</span>]:q.<span class="hljs-title function_">exec</span>(e))||!r[<span class="hljs-number">1</span>]&amp;&amp;t)<span class="hljs-keyword">return</span>!t||t.<span class="hljs-property">jquery</span>?(t||n).<span class="hljs-title function_">find</span>(e):<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">constructor</span>(<span class="hljs-params">t</span>).<span class="hljs-title function_">find</span>(e);<span class="hljs-keyword">if</span>(r[<span class="hljs-number">1</span>])&#123;<span class="hljs-keyword">if</span>(t=t <span class="hljs-keyword">instanceof</span> S?t[<span class="hljs-number">0</span>]:t,S.<span class="hljs-title function_">merge</span>(<span class="hljs-variable language_">this</span>,S.<span class="hljs-title function_">parseHTML</span>(r[<span class="hljs-number">1</span>],t&amp;&amp;t.<span class="hljs-property">nodeType</span>?t.<span class="hljs-property">ownerDocument</span>||<span class="hljs-attr">t</span>:E,!<span class="hljs-number">0</span>)),N.<span class="hljs-title function_">test</span>(r[<span class="hljs-number">1</span>])&amp;&amp;S.<span class="hljs-title function_">isPlainObject</span>(t))<span class="hljs-keyword">for</span>(r <span class="hljs-keyword">in</span> t)<span class="hljs-title function_">m</span>(<span class="hljs-variable language_">this</span>[r])?<span class="hljs-variable language_">this</span>[r](t[r]):<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">attr</span>(r,t[r]);<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>&#125;<span class="hljs-keyword">return</span>(i=E.<span class="hljs-title function_">getElementById</span>(r[<span class="hljs-number">2</span>]))&amp;&amp;(<span class="hljs-variable language_">this</span>[<span class="hljs-number">0</span>]=i,<span class="hljs-variable language_">this</span>.<span class="hljs-property">length</span>=<span class="hljs-number">1</span>),<span class="hljs-variable language_">this</span>&#125;<span class="hljs-keyword">return</span> e.<span class="hljs-property">nodeType</span>?(<span class="hljs-variable language_">this</span>[<span class="hljs-number">0</span>]=e,<span class="hljs-variable language_">this</span>.<span class="hljs-property">length</span>=<span class="hljs-number">1</span>,<span class="hljs-variable language_">this</span>):<span class="hljs-title function_">m</span>(e)?<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==n.<span class="hljs-property">ready</span>?n.<span class="hljs-title function_">ready</span>(e):<span class="hljs-title function_">e</span>(S):S.<span class="hljs-title function_">makeArray</span>(e,<span class="hljs-variable language_">this</span>)&#125;).<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>=S.<span class="hljs-property">fn</span>,D=<span class="hljs-title function_">S</span>(E);<span class="hljs-keyword">var</span> L=<span class="hljs-regexp">/^(?:parents|prev(?:Until|All))/</span>,H=&#123;<span class="hljs-attr">children</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">contents</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">next</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">prev</span>:!<span class="hljs-number">0</span>&#125;;<span class="hljs-keyword">function</span> <span class="hljs-title function_">O</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">while</span>((e=e[t])&amp;&amp;<span class="hljs-number">1</span>!==e.<span class="hljs-property">nodeType</span>);<span class="hljs-keyword">return</span> e&#125;S.<span class="hljs-property">fn</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">has</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=<span class="hljs-title function_">S</span>(e,<span class="hljs-variable language_">this</span>),n=t.<span class="hljs-property">length</span>;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> e=<span class="hljs-number">0</span>;e&lt;n;e++)<span class="hljs-keyword">if</span>(S.<span class="hljs-title function_">contains</span>(<span class="hljs-variable language_">this</span>,t[e]))<span class="hljs-keyword">return</span>!<span class="hljs-number">0</span>&#125;)&#125;,<span class="hljs-attr">closest</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n,r=<span class="hljs-number">0</span>,i=<span class="hljs-variable language_">this</span>.<span class="hljs-property">length</span>,o=[],a=<span class="hljs-string">&quot;string&quot;</span>!=<span class="hljs-keyword">typeof</span> e&amp;&amp;<span class="hljs-title function_">S</span>(e);<span class="hljs-keyword">if</span>(!k.<span class="hljs-title function_">test</span>(e))<span class="hljs-keyword">for</span>(;r&lt;i;r++)<span class="hljs-keyword">for</span>(n=<span class="hljs-variable language_">this</span>[r];n&amp;&amp;n!==t;n=n.<span class="hljs-property">parentNode</span>)<span class="hljs-keyword">if</span>(n.<span class="hljs-property">nodeType</span>&lt;<span class="hljs-number">11</span>&amp;&amp;(a?-<span class="hljs-number">1</span>&lt;a.<span class="hljs-title function_">index</span>(n):<span class="hljs-number">1</span>===n.<span class="hljs-property">nodeType</span>&amp;&amp;S.<span class="hljs-property">find</span>.<span class="hljs-title function_">matchesSelector</span>(n,e)))&#123;o.<span class="hljs-title function_">push</span>(n);<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">pushStack</span>(<span class="hljs-number">1</span>&lt;o.<span class="hljs-property">length</span>?S.<span class="hljs-title function_">uniqueSort</span>(o):o)&#125;,<span class="hljs-attr">index</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e?<span class="hljs-string">&quot;string&quot;</span>==<span class="hljs-keyword">typeof</span> e?i.<span class="hljs-title function_">call</span>(<span class="hljs-title function_">S</span>(e),<span class="hljs-variable language_">this</span>[<span class="hljs-number">0</span>]):i.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>,e.<span class="hljs-property">jquery</span>?e[<span class="hljs-number">0</span>]:e):<span class="hljs-variable language_">this</span>[<span class="hljs-number">0</span>]&amp;&amp;<span class="hljs-variable language_">this</span>[<span class="hljs-number">0</span>].<span class="hljs-property">parentNode</span>?<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">first</span>().<span class="hljs-title function_">prevAll</span>().<span class="hljs-property">length</span>:-<span class="hljs-number">1</span>&#125;,<span class="hljs-attr">add</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">pushStack</span>(S.<span class="hljs-title function_">uniqueSort</span>(S.<span class="hljs-title function_">merge</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">get</span>(),<span class="hljs-title function_">S</span>(e,t))))&#125;,<span class="hljs-attr">addBack</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">add</span>(<span class="hljs-literal">null</span>==e?<span class="hljs-variable language_">this</span>.<span class="hljs-property">prevObject</span>:<span class="hljs-variable language_">this</span>.<span class="hljs-property">prevObject</span>.<span class="hljs-title function_">filter</span>(e))&#125;&#125;),S.<span class="hljs-title function_">each</span>(&#123;<span class="hljs-attr">parent</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=e.<span class="hljs-property">parentNode</span>;<span class="hljs-keyword">return</span> t&amp;&amp;<span class="hljs-number">11</span>!==t.<span class="hljs-property">nodeType</span>?<span class="hljs-attr">t</span>:<span class="hljs-literal">null</span>&#125;,<span class="hljs-attr">parents</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">h</span>(e,<span class="hljs-string">&quot;parentNode&quot;</span>)&#125;,<span class="hljs-attr">parentsUntil</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">h</span>(e,<span class="hljs-string">&quot;parentNode&quot;</span>,n)&#125;,<span class="hljs-attr">next</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">O</span>(e,<span class="hljs-string">&quot;nextSibling&quot;</span>)&#125;,<span class="hljs-attr">prev</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">O</span>(e,<span class="hljs-string">&quot;previousSibling&quot;</span>)&#125;,<span class="hljs-attr">nextAll</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">h</span>(e,<span class="hljs-string">&quot;nextSibling&quot;</span>)&#125;,<span class="hljs-attr">prevAll</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">h</span>(e,<span class="hljs-string">&quot;previousSibling&quot;</span>)&#125;,<span class="hljs-attr">nextUntil</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">h</span>(e,<span class="hljs-string">&quot;nextSibling&quot;</span>,n)&#125;,<span class="hljs-attr">prevUntil</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">h</span>(e,<span class="hljs-string">&quot;previousSibling&quot;</span>,n)&#125;,<span class="hljs-attr">siblings</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">T</span>((e.<span class="hljs-property">parentNode</span>||&#123;&#125;).<span class="hljs-property">firstChild</span>,e)&#125;,<span class="hljs-attr">children</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">T</span>(e.<span class="hljs-property">firstChild</span>)&#125;,<span class="hljs-attr">contents</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>!=e.<span class="hljs-property">contentDocument</span>&amp;&amp;<span class="hljs-title function_">r</span>(e.<span class="hljs-property">contentDocument</span>)?e.<span class="hljs-property">contentDocument</span>:(<span class="hljs-title function_">A</span>(e,<span class="hljs-string">&quot;template&quot;</span>)&amp;&amp;(e=e.<span class="hljs-property">content</span>||e),S.<span class="hljs-title function_">merge</span>([],e.<span class="hljs-property">childNodes</span>))&#125;&#125;,<span class="hljs-keyword">function</span>(<span class="hljs-params">r,i</span>)&#123;S.<span class="hljs-property">fn</span>[r]=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n=S.<span class="hljs-title function_">map</span>(<span class="hljs-variable language_">this</span>,i,e);<span class="hljs-keyword">return</span><span class="hljs-string">&quot;Until&quot;</span>!==r.<span class="hljs-title function_">slice</span>(-<span class="hljs-number">5</span>)&amp;&amp;(t=e),t&amp;&amp;<span class="hljs-string">&quot;string&quot;</span>==<span class="hljs-keyword">typeof</span> t&amp;&amp;(n=S.<span class="hljs-title function_">filter</span>(t,n)),<span class="hljs-number">1</span>&lt;<span class="hljs-variable language_">this</span>.<span class="hljs-property">length</span>&amp;&amp;(H[r]||S.<span class="hljs-title function_">uniqueSort</span>(n),L.<span class="hljs-title function_">test</span>(r)&amp;&amp;n.<span class="hljs-title function_">reverse</span>()),<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">pushStack</span>(n)&#125;&#125;);<span class="hljs-keyword">var</span> P=<span class="hljs-regexp">/[^\x20\t\r\n\f]+/g</span>;<span class="hljs-keyword">function</span> <span class="hljs-title function_">R</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">M</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">throw</span> e&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">I</span>(<span class="hljs-params">e,t,n,r</span>)&#123;<span class="hljs-keyword">var</span> i;<span class="hljs-keyword">try</span>&#123;e&amp;&amp;<span class="hljs-title function_">m</span>(i=e.<span class="hljs-property">promise</span>)?i.<span class="hljs-title function_">call</span>(e).<span class="hljs-title function_">done</span>(t).<span class="hljs-title function_">fail</span>(n):e&amp;&amp;<span class="hljs-title function_">m</span>(i=e.<span class="hljs-property">then</span>)?i.<span class="hljs-title function_">call</span>(e,t,n):t.<span class="hljs-title function_">apply</span>(<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>,[e].<span class="hljs-title function_">slice</span>(r))&#125;<span class="hljs-keyword">catch</span>(e)&#123;n.<span class="hljs-title function_">apply</span>(<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>,[e])&#125;&#125;S.<span class="hljs-property">Callbacks</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">r</span>)&#123;<span class="hljs-keyword">var</span> e,n;r=<span class="hljs-string">&quot;string&quot;</span>==<span class="hljs-keyword">typeof</span> r?(e=r,n=&#123;&#125;,S.<span class="hljs-title function_">each</span>(e.<span class="hljs-title function_">match</span>(P)||[],<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;n[t]=!<span class="hljs-number">0</span>&#125;),n):S.<span class="hljs-title function_">extend</span>(&#123;&#125;,r);<span class="hljs-keyword">var</span> i,t,o,a,s=[],u=[],l=-<span class="hljs-number">1</span>,c=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">for</span>(a=a||r.<span class="hljs-property">once</span>,o=i=!<span class="hljs-number">0</span>;u.<span class="hljs-property">length</span>;l=-<span class="hljs-number">1</span>)&#123;t=u.<span class="hljs-title function_">shift</span>();<span class="hljs-keyword">while</span>(++l&lt;s.<span class="hljs-property">length</span>)!<span class="hljs-number">1</span>===s[l].<span class="hljs-title function_">apply</span>(t[<span class="hljs-number">0</span>],t[<span class="hljs-number">1</span>])&amp;&amp;r.<span class="hljs-property">stopOnFalse</span>&amp;&amp;(l=s.<span class="hljs-property">length</span>,t=!<span class="hljs-number">1</span>)&#125;r.<span class="hljs-property">memory</span>||(t=!<span class="hljs-number">1</span>),i=!<span class="hljs-number">1</span>,a&amp;&amp;(s=t?[]:<span class="hljs-string">&quot;&quot;</span>)&#125;,f=&#123;<span class="hljs-attr">add</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> s&amp;&amp;(t&amp;&amp;!i&amp;&amp;(l=s.<span class="hljs-property">length</span>-<span class="hljs-number">1</span>,u.<span class="hljs-title function_">push</span>(t)),<span class="hljs-keyword">function</span> <span class="hljs-title function_">n</span>(<span class="hljs-params">e</span>)&#123;S.<span class="hljs-title function_">each</span>(e,<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-title function_">m</span>(t)?r.<span class="hljs-property">unique</span>&amp;&amp;f.<span class="hljs-title function_">has</span>(t)||s.<span class="hljs-title function_">push</span>(t):t&amp;&amp;t.<span class="hljs-property">length</span>&amp;&amp;<span class="hljs-string">&quot;string&quot;</span>!==<span class="hljs-title function_">w</span>(t)&amp;&amp;<span class="hljs-title function_">n</span>(t)&#125;)&#125;(<span class="hljs-variable language_">arguments</span>),t&amp;&amp;!i&amp;&amp;<span class="hljs-title function_">c</span>()),<span class="hljs-variable language_">this</span>&#125;,<span class="hljs-attr">remove</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> S.<span class="hljs-title function_">each</span>(<span class="hljs-variable language_">arguments</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n;<span class="hljs-keyword">while</span>(-<span class="hljs-number">1</span>&lt;(n=S.<span class="hljs-title function_">inArray</span>(t,s,n)))s.<span class="hljs-title function_">splice</span>(n,<span class="hljs-number">1</span>),n&lt;=l&amp;&amp;l--&#125;),<span class="hljs-variable language_">this</span>&#125;,<span class="hljs-attr">has</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e?-<span class="hljs-number">1</span>&lt;S.<span class="hljs-title function_">inArray</span>(e,s):<span class="hljs-number">0</span>&lt;s.<span class="hljs-property">length</span>&#125;,<span class="hljs-attr">empty</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> s&amp;&amp;(s=[]),<span class="hljs-variable language_">this</span>&#125;,<span class="hljs-attr">disable</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> a=u=[],s=t=<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-variable language_">this</span>&#125;,<span class="hljs-attr">disabled</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span>!s&#125;,<span class="hljs-attr">lock</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> a=u=[],t||i||(s=t=<span class="hljs-string">&quot;&quot;</span>),<span class="hljs-variable language_">this</span>&#125;,<span class="hljs-attr">locked</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span>!!a&#125;,<span class="hljs-attr">fireWith</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span> a||(t=[e,(t=t||[]).<span class="hljs-property">slice</span>?t.<span class="hljs-title function_">slice</span>():t],u.<span class="hljs-title function_">push</span>(t),i||<span class="hljs-title function_">c</span>()),<span class="hljs-variable language_">this</span>&#125;,<span class="hljs-attr">fire</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> f.<span class="hljs-title function_">fireWith</span>(<span class="hljs-variable language_">this</span>,<span class="hljs-variable language_">arguments</span>),<span class="hljs-variable language_">this</span>&#125;,<span class="hljs-attr">fired</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span>!!o&#125;&#125;;<span class="hljs-keyword">return</span> f&#125;,S.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-title class_">Deferred</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> o=[[<span class="hljs-string">&quot;notify&quot;</span>,<span class="hljs-string">&quot;progress&quot;</span>,S.<span class="hljs-title class_">Callbacks</span>(<span class="hljs-string">&quot;memory&quot;</span>),S.<span class="hljs-title class_">Callbacks</span>(<span class="hljs-string">&quot;memory&quot;</span>),<span class="hljs-number">2</span>],[<span class="hljs-string">&quot;resolve&quot;</span>,<span class="hljs-string">&quot;done&quot;</span>,S.<span class="hljs-title class_">Callbacks</span>(<span class="hljs-string">&quot;once memory&quot;</span>),S.<span class="hljs-title class_">Callbacks</span>(<span class="hljs-string">&quot;once memory&quot;</span>),<span class="hljs-number">0</span>,<span class="hljs-string">&quot;resolved&quot;</span>],[<span class="hljs-string">&quot;reject&quot;</span>,<span class="hljs-string">&quot;fail&quot;</span>,S.<span class="hljs-title class_">Callbacks</span>(<span class="hljs-string">&quot;once memory&quot;</span>),S.<span class="hljs-title class_">Callbacks</span>(<span class="hljs-string">&quot;once memory&quot;</span>),<span class="hljs-number">1</span>,<span class="hljs-string">&quot;rejected&quot;</span>]],i=<span class="hljs-string">&quot;pending&quot;</span>,a=&#123;<span class="hljs-attr">state</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> i&#125;,<span class="hljs-attr">always</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> s.<span class="hljs-title function_">done</span>(<span class="hljs-variable language_">arguments</span>).<span class="hljs-title function_">fail</span>(<span class="hljs-variable language_">arguments</span>),<span class="hljs-variable language_">this</span>&#125;,<span class="hljs-string">&quot;catch&quot;</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> a.<span class="hljs-title function_">then</span>(<span class="hljs-literal">null</span>,e)&#125;,<span class="hljs-attr">pipe</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> i=<span class="hljs-variable language_">arguments</span>;<span class="hljs-keyword">return</span> S.<span class="hljs-title class_">Deferred</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">r</span>)&#123;S.<span class="hljs-title function_">each</span>(o,<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n=<span class="hljs-title function_">m</span>(i[t[<span class="hljs-number">4</span>]])&amp;&amp;i[t[<span class="hljs-number">4</span>]];s[t[<span class="hljs-number">1</span>]](<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> e=n&amp;&amp;n.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>,<span class="hljs-variable language_">arguments</span>);e&amp;&amp;<span class="hljs-title function_">m</span>(e.<span class="hljs-property">promise</span>)?e.<span class="hljs-title function_">promise</span>().<span class="hljs-title function_">progress</span>(r.<span class="hljs-property">notify</span>).<span class="hljs-title function_">done</span>(r.<span class="hljs-property">resolve</span>).<span class="hljs-title function_">fail</span>(r.<span class="hljs-property">reject</span>):r[t[<span class="hljs-number">0</span>]+<span class="hljs-string">&quot;With&quot;</span>](<span class="hljs-variable language_">this</span>,n?[e]:<span class="hljs-variable language_">arguments</span>)&#125;)&#125;),i=<span class="hljs-literal">null</span>&#125;).<span class="hljs-title function_">promise</span>()&#125;,<span class="hljs-attr">then</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">t,n,r</span>)&#123;<span class="hljs-keyword">var</span> u=<span class="hljs-number">0</span>;<span class="hljs-keyword">function</span> <span class="hljs-title function_">l</span>(<span class="hljs-params">i,o,a,s</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> n=<span class="hljs-variable language_">this</span>,r=<span class="hljs-variable language_">arguments</span>,e=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> e,t;<span class="hljs-keyword">if</span>(!(i&lt;u))&#123;<span class="hljs-keyword">if</span>((e=a.<span class="hljs-title function_">apply</span>(n,r))===o.<span class="hljs-title function_">promise</span>())<span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">&quot;Thenable self-resolution&quot;</span>);t=e&amp;&amp;(<span class="hljs-string">&quot;object&quot;</span>==<span class="hljs-keyword">typeof</span> e||<span class="hljs-string">&quot;function&quot;</span>==<span class="hljs-keyword">typeof</span> e)&amp;&amp;e.<span class="hljs-property">then</span>,<span class="hljs-title function_">m</span>(t)?s?t.<span class="hljs-title function_">call</span>(e,<span class="hljs-title function_">l</span>(u,o,R,s),<span class="hljs-title function_">l</span>(u,o,M,s)):(u++,t.<span class="hljs-title function_">call</span>(e,<span class="hljs-title function_">l</span>(u,o,R,s),<span class="hljs-title function_">l</span>(u,o,M,s),<span class="hljs-title function_">l</span>(u,o,R,o.<span class="hljs-property">notifyWith</span>))):(a!==R&amp;&amp;(n=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>,r=[e]),(s||o.<span class="hljs-property">resolveWith</span>)(n,r))&#125;&#125;,t=s?<span class="hljs-attr">e</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">try</span>&#123;<span class="hljs-title function_">e</span>()&#125;<span class="hljs-keyword">catch</span>(e)&#123;S.<span class="hljs-property">Deferred</span>.<span class="hljs-property">exceptionHook</span>&amp;&amp;S.<span class="hljs-property">Deferred</span>.<span class="hljs-title function_">exceptionHook</span>(e,t.<span class="hljs-property">stackTrace</span>),u&lt;=i+<span class="hljs-number">1</span>&amp;&amp;(a!==M&amp;&amp;(n=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>,r=[e]),o.<span class="hljs-title function_">rejectWith</span>(n,r))&#125;&#125;;i?<span class="hljs-title function_">t</span>():(S.<span class="hljs-property">Deferred</span>.<span class="hljs-property">getStackHook</span>&amp;&amp;(t.<span class="hljs-property">stackTrace</span>=S.<span class="hljs-property">Deferred</span>.<span class="hljs-title function_">getStackHook</span>()),C.<span class="hljs-built_in">setTimeout</span>(t))&#125;&#125;<span class="hljs-keyword">return</span> S.<span class="hljs-title class_">Deferred</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;o[<span class="hljs-number">0</span>][<span class="hljs-number">3</span>].<span class="hljs-title function_">add</span>(<span class="hljs-title function_">l</span>(<span class="hljs-number">0</span>,e,<span class="hljs-title function_">m</span>(r)?<span class="hljs-attr">r</span>:R,e.<span class="hljs-property">notifyWith</span>)),o[<span class="hljs-number">1</span>][<span class="hljs-number">3</span>].<span class="hljs-title function_">add</span>(<span class="hljs-title function_">l</span>(<span class="hljs-number">0</span>,e,<span class="hljs-title function_">m</span>(t)?<span class="hljs-attr">t</span>:R)),o[<span class="hljs-number">2</span>][<span class="hljs-number">3</span>].<span class="hljs-title function_">add</span>(<span class="hljs-title function_">l</span>(<span class="hljs-number">0</span>,e,<span class="hljs-title function_">m</span>(n)?<span class="hljs-attr">n</span>:M))&#125;).<span class="hljs-title function_">promise</span>()&#125;,<span class="hljs-attr">promise</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>!=e?S.<span class="hljs-title function_">extend</span>(e,a):a&#125;&#125;,s=&#123;&#125;;<span class="hljs-keyword">return</span> S.<span class="hljs-title function_">each</span>(o,<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n=t[<span class="hljs-number">2</span>],r=t[<span class="hljs-number">5</span>];a[t[<span class="hljs-number">1</span>]]=n.<span class="hljs-property">add</span>,r&amp;&amp;n.<span class="hljs-title function_">add</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;i=r&#125;,o[<span class="hljs-number">3</span>-e][<span class="hljs-number">2</span>].<span class="hljs-property">disable</span>,o[<span class="hljs-number">3</span>-e][<span class="hljs-number">3</span>].<span class="hljs-property">disable</span>,o[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>].<span class="hljs-property">lock</span>,o[<span class="hljs-number">0</span>][<span class="hljs-number">3</span>].<span class="hljs-property">lock</span>),n.<span class="hljs-title function_">add</span>(t[<span class="hljs-number">3</span>].<span class="hljs-property">fire</span>),s[t[<span class="hljs-number">0</span>]]=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> s[t[<span class="hljs-number">0</span>]+<span class="hljs-string">&quot;With&quot;</span>](<span class="hljs-variable language_">this</span>===s?<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>:<span class="hljs-variable language_">this</span>,<span class="hljs-variable language_">arguments</span>),<span class="hljs-variable language_">this</span>&#125;,s[t[<span class="hljs-number">0</span>]+<span class="hljs-string">&quot;With&quot;</span>]=n.<span class="hljs-property">fireWith</span>&#125;),a.<span class="hljs-title function_">promise</span>(s),e&amp;&amp;e.<span class="hljs-title function_">call</span>(s,s),s&#125;,<span class="hljs-attr">when</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> n=<span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>,t=n,r=<span class="hljs-title class_">Array</span>(t),i=s.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">arguments</span>),o=S.<span class="hljs-title class_">Deferred</span>(),a=<span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;r[t]=<span class="hljs-variable language_">this</span>,i[t]=<span class="hljs-number">1</span>&lt;<span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>?s.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">arguments</span>):e,--n||o.<span class="hljs-title function_">resolveWith</span>(r,i)&#125;&#125;;<span class="hljs-keyword">if</span>(n&lt;=<span class="hljs-number">1</span>&amp;&amp;(<span class="hljs-title function_">I</span>(e,o.<span class="hljs-title function_">done</span>(<span class="hljs-title function_">a</span>(t)).<span class="hljs-property">resolve</span>,o.<span class="hljs-property">reject</span>,!n),<span class="hljs-string">&quot;pending&quot;</span>===o.<span class="hljs-title function_">state</span>()||<span class="hljs-title function_">m</span>(i[t]&amp;&amp;i[t].<span class="hljs-property">then</span>)))<span class="hljs-keyword">return</span> o.<span class="hljs-title function_">then</span>();<span class="hljs-keyword">while</span>(t--)<span class="hljs-title function_">I</span>(i[t],<span class="hljs-title function_">a</span>(t),o.<span class="hljs-property">reject</span>);<span class="hljs-keyword">return</span> o.<span class="hljs-title function_">promise</span>()&#125;&#125;);<span class="hljs-keyword">var</span> W=<span class="hljs-regexp">/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/</span>;S.<span class="hljs-property">Deferred</span>.<span class="hljs-property">exceptionHook</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;C.<span class="hljs-property">console</span>&amp;&amp;C.<span class="hljs-property">console</span>.<span class="hljs-property">warn</span>&amp;&amp;e&amp;&amp;W.<span class="hljs-title function_">test</span>(e.<span class="hljs-property">name</span>)&amp;&amp;C.<span class="hljs-property">console</span>.<span class="hljs-title function_">warn</span>(<span class="hljs-string">&quot;jQuery.Deferred exception: &quot;</span>+e.<span class="hljs-property">message</span>,e.<span class="hljs-property">stack</span>,t)&#125;,S.<span class="hljs-property">readyException</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;C.<span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">throw</span> e&#125;)&#125;;<span class="hljs-keyword">var</span> F=S.<span class="hljs-title class_">Deferred</span>();<span class="hljs-keyword">function</span> <span class="hljs-title function_">B</span>(<span class="hljs-params"></span>)&#123;E.<span class="hljs-title function_">removeEventListener</span>(<span class="hljs-string">&quot;DOMContentLoaded&quot;</span>,B),C.<span class="hljs-title function_">removeEventListener</span>(<span class="hljs-string">&quot;load&quot;</span>,B),S.<span class="hljs-title function_">ready</span>()&#125;S.<span class="hljs-property">fn</span>.<span class="hljs-property">ready</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> F.<span class="hljs-title function_">then</span>(e)[<span class="hljs-string">&quot;catch&quot;</span>](<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;S.<span class="hljs-title function_">readyException</span>(e)&#125;),<span class="hljs-variable language_">this</span>&#125;,S.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">isReady</span>:!<span class="hljs-number">1</span>,<span class="hljs-attr">readyWait</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">ready</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;(!<span class="hljs-number">0</span>===e?--S.<span class="hljs-property">readyWait</span>:S.<span class="hljs-property">isReady</span>)||(S.<span class="hljs-property">isReady</span>=!<span class="hljs-number">0</span>)!==e&amp;&amp;<span class="hljs-number">0</span>&lt;--S.<span class="hljs-property">readyWait</span>||F.<span class="hljs-title function_">resolveWith</span>(E,[S])&#125;&#125;),S.<span class="hljs-property">ready</span>.<span class="hljs-property">then</span>=F.<span class="hljs-property">then</span>,<span class="hljs-string">&quot;complete&quot;</span>===E.<span class="hljs-property">readyState</span>||<span class="hljs-string">&quot;loading&quot;</span>!==E.<span class="hljs-property">readyState</span>&amp;&amp;!E.<span class="hljs-property">documentElement</span>.<span class="hljs-property">doScroll</span>?C.<span class="hljs-built_in">setTimeout</span>(S.<span class="hljs-property">ready</span>):(E.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;DOMContentLoaded&quot;</span>,B),C.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;load&quot;</span>,B));<span class="hljs-keyword">var</span> $=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n,r,i,o,a</span>)&#123;<span class="hljs-keyword">var</span> s=<span class="hljs-number">0</span>,u=e.<span class="hljs-property">length</span>,l=<span class="hljs-literal">null</span>==n;<span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;object&quot;</span>===<span class="hljs-title function_">w</span>(n))<span class="hljs-keyword">for</span>(s <span class="hljs-keyword">in</span> i=!<span class="hljs-number">0</span>,n)$(e,t,s,n[s],!<span class="hljs-number">0</span>,o,a);<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==r&amp;&amp;(i=!<span class="hljs-number">0</span>,<span class="hljs-title function_">m</span>(r)||(a=!<span class="hljs-number">0</span>),l&amp;&amp;(a?(t.<span class="hljs-title function_">call</span>(e,r),t=<span class="hljs-literal">null</span>):(l=t,t=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">return</span> l.<span class="hljs-title function_">call</span>(<span class="hljs-title function_">S</span>(e),n)&#125;)),t))<span class="hljs-keyword">for</span>(;s&lt;u;s++)<span class="hljs-title function_">t</span>(e[s],n,a?<span class="hljs-attr">r</span>:r.<span class="hljs-title function_">call</span>(e[s],s,<span class="hljs-title function_">t</span>(e[s],n)));<span class="hljs-keyword">return</span> i?<span class="hljs-attr">e</span>:l?t.<span class="hljs-title function_">call</span>(e):u?<span class="hljs-title function_">t</span>(e[<span class="hljs-number">0</span>],n):o&#125;,_=<span class="hljs-regexp">/^-ms-/</span>,z=<span class="hljs-regexp">/-([a-z])/g</span>;<span class="hljs-keyword">function</span> <span class="hljs-title function_">U</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span> t.<span class="hljs-title function_">toUpperCase</span>()&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">X</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e.<span class="hljs-title function_">replace</span>(_,<span class="hljs-string">&quot;ms-&quot;</span>).<span class="hljs-title function_">replace</span>(z,U)&#125;<span class="hljs-keyword">var</span> V=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>===e.<span class="hljs-property">nodeType</span>||<span class="hljs-number">9</span>===e.<span class="hljs-property">nodeType</span>||!+e.<span class="hljs-property">nodeType</span>&#125;;<span class="hljs-keyword">function</span> <span class="hljs-title function_">G</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-variable language_">this</span>.<span class="hljs-property">expando</span>=S.<span class="hljs-property">expando</span>+G.<span class="hljs-property">uid</span>++&#125;G.<span class="hljs-property">uid</span>=<span class="hljs-number">1</span>,G.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>=&#123;<span class="hljs-attr">cache</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=e[<span class="hljs-variable language_">this</span>.<span class="hljs-property">expando</span>];<span class="hljs-keyword">return</span> t||(t=&#123;&#125;,<span class="hljs-title function_">V</span>(e)&amp;&amp;(e.<span class="hljs-property">nodeType</span>?e[<span class="hljs-variable language_">this</span>.<span class="hljs-property">expando</span>]=<span class="hljs-attr">t</span>:<span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(e,<span class="hljs-variable language_">this</span>.<span class="hljs-property">expando</span>,&#123;<span class="hljs-attr">value</span>:t,<span class="hljs-attr">configurable</span>:!<span class="hljs-number">0</span>&#125;))),t&#125;,<span class="hljs-attr">set</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r,i=<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">cache</span>(e);<span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;string&quot;</span>==<span class="hljs-keyword">typeof</span> t)i[<span class="hljs-title function_">X</span>(t)]=n;<span class="hljs-keyword">else</span> <span class="hljs-keyword">for</span>(r <span class="hljs-keyword">in</span> t)i[<span class="hljs-title function_">X</span>(r)]=t[r];<span class="hljs-keyword">return</span> i&#125;,<span class="hljs-attr">get</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===t?<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">cache</span>(e):e[<span class="hljs-variable language_">this</span>.<span class="hljs-property">expando</span>]&amp;&amp;e[<span class="hljs-variable language_">this</span>.<span class="hljs-property">expando</span>][<span class="hljs-title function_">X</span>(t)]&#125;,<span class="hljs-attr">access</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===t||t&amp;&amp;<span class="hljs-string">&quot;string&quot;</span>==<span class="hljs-keyword">typeof</span> t&amp;&amp;<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===n?<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">get</span>(e,t):(<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">set</span>(e,t,n),<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==n?<span class="hljs-attr">n</span>:t)&#125;,<span class="hljs-attr">remove</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n,r=e[<span class="hljs-variable language_">this</span>.<span class="hljs-property">expando</span>];<span class="hljs-keyword">if</span>(<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==r)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==t)&#123;n=(t=<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(t)?t.<span class="hljs-title function_">map</span>(X):(t=<span class="hljs-title function_">X</span>(t))<span class="hljs-keyword">in</span> r?[t]:t.<span class="hljs-title function_">match</span>(P)||[]).<span class="hljs-property">length</span>;<span class="hljs-keyword">while</span>(n--)<span class="hljs-keyword">delete</span> r[t[n]]&#125;(<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===t||S.<span class="hljs-title function_">isEmptyObject</span>(r))&amp;&amp;(e.<span class="hljs-property">nodeType</span>?e[<span class="hljs-variable language_">this</span>.<span class="hljs-property">expando</span>]=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>:<span class="hljs-keyword">delete</span> e[<span class="hljs-variable language_">this</span>.<span class="hljs-property">expando</span>])&#125;&#125;,<span class="hljs-attr">hasData</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=e[<span class="hljs-variable language_">this</span>.<span class="hljs-property">expando</span>];<span class="hljs-keyword">return</span> <span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==t&amp;&amp;!S.<span class="hljs-title function_">isEmptyObject</span>(t)&#125;&#125;;<span class="hljs-keyword">var</span> Y=<span class="hljs-keyword">new</span> G,Q=<span class="hljs-keyword">new</span> G,J=<span class="hljs-regexp">/^(?:\&#123;[\w\W]*\&#125;|\[[\w\W]*\])$/</span>,K=<span class="hljs-regexp">/[A-Z]/g</span>;<span class="hljs-keyword">function</span> <span class="hljs-title function_">Z</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r,i;<span class="hljs-keyword">if</span>(<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===n&amp;&amp;<span class="hljs-number">1</span>===e.<span class="hljs-property">nodeType</span>)<span class="hljs-keyword">if</span>(r=<span class="hljs-string">&quot;data-&quot;</span>+t.<span class="hljs-title function_">replace</span>(K,<span class="hljs-string">&quot;-$&amp;&quot;</span>).<span class="hljs-title function_">toLowerCase</span>(),<span class="hljs-string">&quot;string&quot;</span>==<span class="hljs-title function_">typeof</span>(n=e.<span class="hljs-title function_">getAttribute</span>(r)))&#123;<span class="hljs-keyword">try</span>&#123;n=<span class="hljs-string">&quot;true&quot;</span>===(i=n)||<span class="hljs-string">&quot;false&quot;</span>!==i&amp;&amp;(<span class="hljs-string">&quot;null&quot;</span>===i?<span class="hljs-attr">null</span>:i===+i+<span class="hljs-string">&quot;&quot;</span>?+<span class="hljs-attr">i</span>:J.<span class="hljs-title function_">test</span>(i)?<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(i):i)&#125;<span class="hljs-keyword">catch</span>(e)&#123;&#125;Q.<span class="hljs-title function_">set</span>(e,t,n)&#125;<span class="hljs-keyword">else</span> n=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>;<span class="hljs-keyword">return</span> n&#125;S.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">hasData</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> Q.<span class="hljs-title function_">hasData</span>(e)||Y.<span class="hljs-title function_">hasData</span>(e)&#125;,<span class="hljs-attr">data</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">return</span> Q.<span class="hljs-title function_">access</span>(e,t,n)&#125;,<span class="hljs-attr">removeData</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;Q.<span class="hljs-title function_">remove</span>(e,t)&#125;,<span class="hljs-attr">_data</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">return</span> Y.<span class="hljs-title function_">access</span>(e,t,n)&#125;,<span class="hljs-attr">_removeData</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;Y.<span class="hljs-title function_">remove</span>(e,t)&#125;&#125;),S.<span class="hljs-property">fn</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">data</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">n,e</span>)&#123;<span class="hljs-keyword">var</span> t,r,i,o=<span class="hljs-variable language_">this</span>[<span class="hljs-number">0</span>],a=o&amp;&amp;o.<span class="hljs-property">attributes</span>;<span class="hljs-keyword">if</span>(<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===n)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">length</span>&amp;&amp;(i=Q.<span class="hljs-title function_">get</span>(o),<span class="hljs-number">1</span>===o.<span class="hljs-property">nodeType</span>&amp;&amp;!Y.<span class="hljs-title function_">get</span>(o,<span class="hljs-string">&quot;hasDataAttrs&quot;</span>)))&#123;t=a.<span class="hljs-property">length</span>;<span class="hljs-keyword">while</span>(t--)a[t]&amp;&amp;<span class="hljs-number">0</span>===(r=a[t].<span class="hljs-property">name</span>).<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;data-&quot;</span>)&amp;&amp;(r=<span class="hljs-title function_">X</span>(r.<span class="hljs-title function_">slice</span>(<span class="hljs-number">5</span>)),<span class="hljs-title function_">Z</span>(o,r,i[r]));Y.<span class="hljs-title function_">set</span>(o,<span class="hljs-string">&quot;hasDataAttrs&quot;</span>,!<span class="hljs-number">0</span>)&#125;<span class="hljs-keyword">return</span> i&#125;<span class="hljs-keyword">return</span><span class="hljs-string">&quot;object&quot;</span>==<span class="hljs-keyword">typeof</span> n?<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;Q.<span class="hljs-title function_">set</span>(<span class="hljs-variable language_">this</span>,n)&#125;):$(<span class="hljs-variable language_">this</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t;<span class="hljs-keyword">if</span>(o&amp;&amp;<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===e)<span class="hljs-keyword">return</span> <span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==(t=Q.<span class="hljs-title function_">get</span>(o,n))?<span class="hljs-attr">t</span>:<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==(t=<span class="hljs-title function_">Z</span>(o,n))?<span class="hljs-attr">t</span>:<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>;<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;Q.<span class="hljs-title function_">set</span>(<span class="hljs-variable language_">this</span>,n,e)&#125;)&#125;,<span class="hljs-literal">null</span>,e,<span class="hljs-number">1</span>&lt;<span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>,<span class="hljs-literal">null</span>,!<span class="hljs-number">0</span>)&#125;,<span class="hljs-attr">removeData</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;Q.<span class="hljs-title function_">remove</span>(<span class="hljs-variable language_">this</span>,e)&#125;)&#125;&#125;),S.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">queue</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r;<span class="hljs-keyword">if</span>(e)<span class="hljs-keyword">return</span> t=(t||<span class="hljs-string">&quot;fx&quot;</span>)+<span class="hljs-string">&quot;queue&quot;</span>,r=Y.<span class="hljs-title function_">get</span>(e,t),n&amp;&amp;(!r||<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(n)?r=Y.<span class="hljs-title function_">access</span>(e,t,S.<span class="hljs-title function_">makeArray</span>(n)):r.<span class="hljs-title function_">push</span>(n)),r||[]&#125;,<span class="hljs-attr">dequeue</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;t=t||<span class="hljs-string">&quot;fx&quot;</span>;<span class="hljs-keyword">var</span> n=S.<span class="hljs-title function_">queue</span>(e,t),r=n.<span class="hljs-property">length</span>,i=n.<span class="hljs-title function_">shift</span>(),o=S.<span class="hljs-title function_">_queueHooks</span>(e,t);<span class="hljs-string">&quot;inprogress&quot;</span>===i&amp;&amp;(i=n.<span class="hljs-title function_">shift</span>(),r--),i&amp;&amp;(<span class="hljs-string">&quot;fx&quot;</span>===t&amp;&amp;n.<span class="hljs-title function_">unshift</span>(<span class="hljs-string">&quot;inprogress&quot;</span>),<span class="hljs-keyword">delete</span> o.<span class="hljs-property">stop</span>,i.<span class="hljs-title function_">call</span>(e,<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;S.<span class="hljs-title function_">dequeue</span>(e,t)&#125;,o)),!r&amp;&amp;o&amp;&amp;o.<span class="hljs-property">empty</span>.<span class="hljs-title function_">fire</span>()&#125;,<span class="hljs-attr">_queueHooks</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n=t+<span class="hljs-string">&quot;queueHooks&quot;</span>;<span class="hljs-keyword">return</span> Y.<span class="hljs-title function_">get</span>(e,n)||Y.<span class="hljs-title function_">access</span>(e,n,&#123;<span class="hljs-attr">empty</span>:S.<span class="hljs-title class_">Callbacks</span>(<span class="hljs-string">&quot;once memory&quot;</span>).<span class="hljs-title function_">add</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;Y.<span class="hljs-title function_">remove</span>(e,[t+<span class="hljs-string">&quot;queue&quot;</span>,n])&#125;)&#125;)&#125;&#125;),S.<span class="hljs-property">fn</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">queue</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">t,n</span>)&#123;<span class="hljs-keyword">var</span> e=<span class="hljs-number">2</span>;<span class="hljs-keyword">return</span><span class="hljs-string">&quot;string&quot;</span>!=<span class="hljs-keyword">typeof</span> t&amp;&amp;(n=t,t=<span class="hljs-string">&quot;fx&quot;</span>,e--),<span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>&lt;e?S.<span class="hljs-title function_">queue</span>(<span class="hljs-variable language_">this</span>[<span class="hljs-number">0</span>],t):<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===n?<span class="hljs-attr">this</span>:<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> e=S.<span class="hljs-title function_">queue</span>(<span class="hljs-variable language_">this</span>,t,n);S.<span class="hljs-title function_">_queueHooks</span>(<span class="hljs-variable language_">this</span>,t),<span class="hljs-string">&quot;fx&quot;</span>===t&amp;&amp;<span class="hljs-string">&quot;inprogress&quot;</span>!==e[<span class="hljs-number">0</span>]&amp;&amp;S.<span class="hljs-title function_">dequeue</span>(<span class="hljs-variable language_">this</span>,t)&#125;)&#125;,<span class="hljs-attr">dequeue</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;S.<span class="hljs-title function_">dequeue</span>(<span class="hljs-variable language_">this</span>,e)&#125;)&#125;,<span class="hljs-attr">clearQueue</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">queue</span>(e||<span class="hljs-string">&quot;fx&quot;</span>,[])&#125;,<span class="hljs-attr">promise</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n,r=<span class="hljs-number">1</span>,i=S.<span class="hljs-title class_">Deferred</span>(),o=<span class="hljs-variable language_">this</span>,a=<span class="hljs-variable language_">this</span>.<span class="hljs-property">length</span>,s=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;--r||i.<span class="hljs-title function_">resolveWith</span>(o,[o])&#125;;<span class="hljs-string">&quot;string&quot;</span>!=<span class="hljs-keyword">typeof</span> e&amp;&amp;(t=e,e=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>),e=e||<span class="hljs-string">&quot;fx&quot;</span>;<span class="hljs-keyword">while</span>(a--)(n=Y.<span class="hljs-title function_">get</span>(o[a],e+<span class="hljs-string">&quot;queueHooks&quot;</span>))&amp;&amp;n.<span class="hljs-property">empty</span>&amp;&amp;(r++,n.<span class="hljs-property">empty</span>.<span class="hljs-title function_">add</span>(s));<span class="hljs-keyword">return</span> <span class="hljs-title function_">s</span>(),i.<span class="hljs-title function_">promise</span>(t)&#125;&#125;);<span class="hljs-keyword">var</span> ee=<span class="hljs-regexp">/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/</span>.<span class="hljs-property">source</span>,te=<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&quot;^(?:([+-])=|)(&quot;</span>+ee+<span class="hljs-string">&quot;)([a-z%]*)$&quot;</span>,<span class="hljs-string">&quot;i&quot;</span>),ne=[<span class="hljs-string">&quot;Top&quot;</span>,<span class="hljs-string">&quot;Right&quot;</span>,<span class="hljs-string">&quot;Bottom&quot;</span>,<span class="hljs-string">&quot;Left&quot;</span>],re=E.<span class="hljs-property">documentElement</span>,ie=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> S.<span class="hljs-title function_">contains</span>(e.<span class="hljs-property">ownerDocument</span>,e)&#125;,oe=&#123;<span class="hljs-attr">composed</span>:!<span class="hljs-number">0</span>&#125;;re.<span class="hljs-property">getRootNode</span>&amp;&amp;(ie=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> S.<span class="hljs-title function_">contains</span>(e.<span class="hljs-property">ownerDocument</span>,e)||e.<span class="hljs-title function_">getRootNode</span>(oe)===e.<span class="hljs-property">ownerDocument</span>&#125;);<span class="hljs-keyword">var</span> ae=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span><span class="hljs-string">&quot;none&quot;</span>===(e=t||e).<span class="hljs-property">style</span>.<span class="hljs-property">display</span>||<span class="hljs-string">&quot;&quot;</span>===e.<span class="hljs-property">style</span>.<span class="hljs-property">display</span>&amp;&amp;<span class="hljs-title function_">ie</span>(e)&amp;&amp;<span class="hljs-string">&quot;none&quot;</span>===S.<span class="hljs-title function_">css</span>(e,<span class="hljs-string">&quot;display&quot;</span>)&#125;;<span class="hljs-keyword">function</span> <span class="hljs-title function_">se</span>(<span class="hljs-params">e,t,n,r</span>)&#123;<span class="hljs-keyword">var</span> i,o,a=<span class="hljs-number">20</span>,s=r?<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> r.<span class="hljs-title function_">cur</span>()&#125;:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> S.<span class="hljs-title function_">css</span>(e,t,<span class="hljs-string">&quot;&quot;</span>)&#125;,u=<span class="hljs-title function_">s</span>(),l=n&amp;&amp;n[<span class="hljs-number">3</span>]||(S.<span class="hljs-property">cssNumber</span>[t]?<span class="hljs-string">&quot;&quot;</span>:<span class="hljs-string">&quot;px&quot;</span>),c=e.<span class="hljs-property">nodeType</span>&amp;&amp;(S.<span class="hljs-property">cssNumber</span>[t]||<span class="hljs-string">&quot;px&quot;</span>!==l&amp;&amp;+u)&amp;&amp;te.<span class="hljs-title function_">exec</span>(S.<span class="hljs-title function_">css</span>(e,t));<span class="hljs-keyword">if</span>(c&amp;&amp;c[<span class="hljs-number">3</span>]!==l)&#123;u/=<span class="hljs-number">2</span>,l=l||c[<span class="hljs-number">3</span>],c=+u||<span class="hljs-number">1</span>;<span class="hljs-keyword">while</span>(a--)S.<span class="hljs-title function_">style</span>(e,t,c+l),(<span class="hljs-number">1</span>-o)*(<span class="hljs-number">1</span>-(o=<span class="hljs-title function_">s</span>()/u||<span class="hljs-number">.5</span>))&lt;=<span class="hljs-number">0</span>&amp;&amp;(a=<span class="hljs-number">0</span>),c/=o;c*=<span class="hljs-number">2</span>,S.<span class="hljs-title function_">style</span>(e,t,c+l),n=n||[]&#125;<span class="hljs-keyword">return</span> n&amp;&amp;(c=+c||+u||<span class="hljs-number">0</span>,i=n[<span class="hljs-number">1</span>]?c+(n[<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>)*n[<span class="hljs-number">2</span>]:+n[<span class="hljs-number">2</span>],r&amp;&amp;(r.<span class="hljs-property">unit</span>=l,r.<span class="hljs-property">start</span>=c,r.<span class="hljs-property">end</span>=i)),i&#125;<span class="hljs-keyword">var</span> ue=&#123;&#125;;<span class="hljs-keyword">function</span> <span class="hljs-title function_">le</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> n,r,i,o,a,s,u,l=[],c=<span class="hljs-number">0</span>,f=e.<span class="hljs-property">length</span>;c&lt;f;c++)(r=e[c]).<span class="hljs-property">style</span>&amp;&amp;(n=r.<span class="hljs-property">style</span>.<span class="hljs-property">display</span>,t?(<span class="hljs-string">&quot;none&quot;</span>===n&amp;&amp;(l[c]=Y.<span class="hljs-title function_">get</span>(r,<span class="hljs-string">&quot;display&quot;</span>)||<span class="hljs-literal">null</span>,l[c]||(r.<span class="hljs-property">style</span>.<span class="hljs-property">display</span>=<span class="hljs-string">&quot;&quot;</span>)),<span class="hljs-string">&quot;&quot;</span>===r.<span class="hljs-property">style</span>.<span class="hljs-property">display</span>&amp;&amp;<span class="hljs-title function_">ae</span>(r)&amp;&amp;(l[c]=(u=a=o=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>,a=(i=r).<span class="hljs-property">ownerDocument</span>,s=i.<span class="hljs-property">nodeName</span>,(u=ue[s])||(o=a.<span class="hljs-property">body</span>.<span class="hljs-title function_">appendChild</span>(a.<span class="hljs-title function_">createElement</span>(s)),u=S.<span class="hljs-title function_">css</span>(o,<span class="hljs-string">&quot;display&quot;</span>),o.<span class="hljs-property">parentNode</span>.<span class="hljs-title function_">removeChild</span>(o),<span class="hljs-string">&quot;none&quot;</span>===u&amp;&amp;(u=<span class="hljs-string">&quot;block&quot;</span>),ue[s]=u)))):<span class="hljs-string">&quot;none&quot;</span>!==n&amp;&amp;(l[c]=<span class="hljs-string">&quot;none&quot;</span>,Y.<span class="hljs-title function_">set</span>(r,<span class="hljs-string">&quot;display&quot;</span>,n)));<span class="hljs-keyword">for</span>(c=<span class="hljs-number">0</span>;c&lt;f;c++)<span class="hljs-literal">null</span>!=l[c]&amp;&amp;(e[c].<span class="hljs-property">style</span>.<span class="hljs-property">display</span>=l[c]);<span class="hljs-keyword">return</span> e&#125;S.<span class="hljs-property">fn</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">show</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">le</span>(<span class="hljs-variable language_">this</span>,!<span class="hljs-number">0</span>)&#125;,<span class="hljs-attr">hide</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">le</span>(<span class="hljs-variable language_">this</span>)&#125;,<span class="hljs-attr">toggle</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span><span class="hljs-string">&quot;boolean&quot;</span>==<span class="hljs-keyword">typeof</span> e?e?<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">show</span>():<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">hide</span>():<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-title function_">ae</span>(<span class="hljs-variable language_">this</span>)?<span class="hljs-title function_">S</span>(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">show</span>():<span class="hljs-title function_">S</span>(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">hide</span>()&#125;)&#125;&#125;);<span class="hljs-keyword">var</span> ce,fe,pe=<span class="hljs-regexp">/^(?:checkbox|radio)$/i</span>,de=<span class="hljs-regexp">/&lt;([a-z][^\/\0&gt;\x20\t\r\n\f]*)/i</span>,he=<span class="hljs-regexp">/^$|^module$|\/(?:java|ecma)script/i</span>;ce=E.<span class="hljs-title function_">createDocumentFragment</span>().<span class="hljs-title function_">appendChild</span>(E.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;div&quot;</span>)),(fe=E.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;input&quot;</span>)).<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&quot;type&quot;</span>,<span class="hljs-string">&quot;radio&quot;</span>),fe.<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&quot;checked&quot;</span>,<span class="hljs-string">&quot;checked&quot;</span>),fe.<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;t&quot;</span>),ce.<span class="hljs-title function_">appendChild</span>(fe),y.<span class="hljs-property">checkClone</span>=ce.<span class="hljs-title function_">cloneNode</span>(!<span class="hljs-number">0</span>).<span class="hljs-title function_">cloneNode</span>(!<span class="hljs-number">0</span>).<span class="hljs-property">lastChild</span>.<span class="hljs-property">checked</span>,ce.<span class="hljs-property">innerHTML</span>=<span class="hljs-string">&quot;&lt;textarea&gt;x&lt;/textarea&gt;&quot;</span>,y.<span class="hljs-property">noCloneChecked</span>=!!ce.<span class="hljs-title function_">cloneNode</span>(!<span class="hljs-number">0</span>).<span class="hljs-property">lastChild</span>.<span class="hljs-property">defaultValue</span>,ce.<span class="hljs-property">innerHTML</span>=<span class="hljs-string">&quot;&lt;option&gt;&lt;/option&gt;&quot;</span>,y.<span class="hljs-property">option</span>=!!ce.<span class="hljs-property">lastChild</span>;<span class="hljs-keyword">var</span> ge=&#123;<span class="hljs-attr">thead</span>:[<span class="hljs-number">1</span>,<span class="hljs-string">&quot;&lt;table&gt;&quot;</span>,<span class="hljs-string">&quot;&lt;/table&gt;&quot;</span>],<span class="hljs-attr">col</span>:[<span class="hljs-number">2</span>,<span class="hljs-string">&quot;&lt;table&gt;&lt;colgroup&gt;&quot;</span>,<span class="hljs-string">&quot;&lt;/colgroup&gt;&lt;/table&gt;&quot;</span>],<span class="hljs-attr">tr</span>:[<span class="hljs-number">2</span>,<span class="hljs-string">&quot;&lt;table&gt;&lt;tbody&gt;&quot;</span>,<span class="hljs-string">&quot;&lt;/tbody&gt;&lt;/table&gt;&quot;</span>],<span class="hljs-attr">td</span>:[<span class="hljs-number">3</span>,<span class="hljs-string">&quot;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&quot;</span>,<span class="hljs-string">&quot;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&quot;</span>],<span class="hljs-attr">_default</span>:[<span class="hljs-number">0</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>]&#125;;<span class="hljs-keyword">function</span> <span class="hljs-title function_">ve</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n;<span class="hljs-keyword">return</span> n=<span class="hljs-string">&quot;undefined&quot;</span>!=<span class="hljs-keyword">typeof</span> e.<span class="hljs-property">getElementsByTagName</span>?e.<span class="hljs-title function_">getElementsByTagName</span>(t||<span class="hljs-string">&quot;*&quot;</span>):<span class="hljs-string">&quot;undefined&quot;</span>!=<span class="hljs-keyword">typeof</span> e.<span class="hljs-property">querySelectorAll</span>?e.<span class="hljs-title function_">querySelectorAll</span>(t||<span class="hljs-string">&quot;*&quot;</span>):[],<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===t||t&amp;&amp;<span class="hljs-title function_">A</span>(e,t)?S.<span class="hljs-title function_">merge</span>([e],n):n&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">ye</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> n=<span class="hljs-number">0</span>,r=e.<span class="hljs-property">length</span>;n&lt;r;n++)Y.<span class="hljs-title function_">set</span>(e[n],<span class="hljs-string">&quot;globalEval&quot;</span>,!t||Y.<span class="hljs-title function_">get</span>(t[n],<span class="hljs-string">&quot;globalEval&quot;</span>))&#125;ge.<span class="hljs-property">tbody</span>=ge.<span class="hljs-property">tfoot</span>=ge.<span class="hljs-property">colgroup</span>=ge.<span class="hljs-property">caption</span>=ge.<span class="hljs-property">thead</span>,ge.<span class="hljs-property">th</span>=ge.<span class="hljs-property">td</span>,y.<span class="hljs-property">option</span>||(ge.<span class="hljs-property">optgroup</span>=ge.<span class="hljs-property">option</span>=[<span class="hljs-number">1</span>,<span class="hljs-string">&quot;&lt;select multiple=&#x27;multiple&#x27;&gt;&quot;</span>,<span class="hljs-string">&quot;&lt;/select&gt;&quot;</span>]);<span class="hljs-keyword">var</span> me=<span class="hljs-regexp">/&lt;|&amp;#?\w+;/</span>;<span class="hljs-keyword">function</span> <span class="hljs-title function_">xe</span>(<span class="hljs-params">e,t,n,r,i</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> o,a,s,u,l,c,f=t.<span class="hljs-title function_">createDocumentFragment</span>(),p=[],d=<span class="hljs-number">0</span>,h=e.<span class="hljs-property">length</span>;d&lt;h;d++)<span class="hljs-keyword">if</span>((o=e[d])||<span class="hljs-number">0</span>===o)<span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;object&quot;</span>===<span class="hljs-title function_">w</span>(o))S.<span class="hljs-title function_">merge</span>(p,o.<span class="hljs-property">nodeType</span>?[o]:o);<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(me.<span class="hljs-title function_">test</span>(o))&#123;a=a||f.<span class="hljs-title function_">appendChild</span>(t.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;div&quot;</span>)),s=(de.<span class="hljs-title function_">exec</span>(o)||[<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>])[<span class="hljs-number">1</span>].<span class="hljs-title function_">toLowerCase</span>(),u=ge[s]||ge.<span class="hljs-property">_default</span>,a.<span class="hljs-property">innerHTML</span>=u[<span class="hljs-number">1</span>]+S.<span class="hljs-title function_">htmlPrefilter</span>(o)+u[<span class="hljs-number">2</span>],c=u[<span class="hljs-number">0</span>];<span class="hljs-keyword">while</span>(c--)a=a.<span class="hljs-property">lastChild</span>;S.<span class="hljs-title function_">merge</span>(p,a.<span class="hljs-property">childNodes</span>),(a=f.<span class="hljs-property">firstChild</span>).<span class="hljs-property">textContent</span>=<span class="hljs-string">&quot;&quot;</span>&#125;<span class="hljs-keyword">else</span> p.<span class="hljs-title function_">push</span>(t.<span class="hljs-title function_">createTextNode</span>(o));f.<span class="hljs-property">textContent</span>=<span class="hljs-string">&quot;&quot;</span>,d=<span class="hljs-number">0</span>;<span class="hljs-keyword">while</span>(o=p[d++])<span class="hljs-keyword">if</span>(r&amp;&amp;-<span class="hljs-number">1</span>&lt;S.<span class="hljs-title function_">inArray</span>(o,r))i&amp;&amp;i.<span class="hljs-title function_">push</span>(o);<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(l=<span class="hljs-title function_">ie</span>(o),a=<span class="hljs-title function_">ve</span>(f.<span class="hljs-title function_">appendChild</span>(o),<span class="hljs-string">&quot;script&quot;</span>),l&amp;&amp;<span class="hljs-title function_">ye</span>(a),n)&#123;c=<span class="hljs-number">0</span>;<span class="hljs-keyword">while</span>(o=a[c++])he.<span class="hljs-title function_">test</span>(o.<span class="hljs-property">type</span>||<span class="hljs-string">&quot;&quot;</span>)&amp;&amp;n.<span class="hljs-title function_">push</span>(o)&#125;<span class="hljs-keyword">return</span> f&#125;<span class="hljs-keyword">var</span> be=<span class="hljs-regexp">/^([^.]*)(?:\.(.+)|)/</span>;<span class="hljs-keyword">function</span> <span class="hljs-title function_">we</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span>!<span class="hljs-number">0</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">Te</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span>!<span class="hljs-number">1</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">Ce</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span> e===<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">try</span>&#123;<span class="hljs-keyword">return</span> E.<span class="hljs-property">activeElement</span>&#125;<span class="hljs-keyword">catch</span>(e)&#123;&#125;&#125;()==(<span class="hljs-string">&quot;focus&quot;</span>===t)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">Ee</span>(<span class="hljs-params">e,t,n,r,i,o</span>)&#123;<span class="hljs-keyword">var</span> a,s;<span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;object&quot;</span>==<span class="hljs-keyword">typeof</span> t)&#123;<span class="hljs-keyword">for</span>(s <span class="hljs-keyword">in</span><span class="hljs-string">&quot;string&quot;</span>!=<span class="hljs-keyword">typeof</span> n&amp;&amp;(r=r||n,n=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>),t)<span class="hljs-title class_">Ee</span>(e,s,n,r,t[s],o);<span class="hljs-keyword">return</span> e&#125;<span class="hljs-keyword">if</span>(<span class="hljs-literal">null</span>==r&amp;&amp;<span class="hljs-literal">null</span>==i?(i=n,r=n=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>):<span class="hljs-literal">null</span>==i&amp;&amp;(<span class="hljs-string">&quot;string&quot;</span>==<span class="hljs-keyword">typeof</span> n?(i=r,r=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>):(i=r,r=n,n=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>)),!<span class="hljs-number">1</span>===i)i=<span class="hljs-title class_">Te</span>;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(!i)<span class="hljs-keyword">return</span> e;<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>===o&amp;&amp;(a=i,(i=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">S</span>().<span class="hljs-title function_">off</span>(e),a.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>,<span class="hljs-variable language_">arguments</span>)&#125;).<span class="hljs-property">guid</span>=a.<span class="hljs-property">guid</span>||(a.<span class="hljs-property">guid</span>=S.<span class="hljs-property">guid</span>++)),e.<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;S.<span class="hljs-property">event</span>.<span class="hljs-title function_">add</span>(<span class="hljs-variable language_">this</span>,t,i,r,n)&#125;)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">Se</span>(<span class="hljs-params">e,i,o</span>)&#123;o?(Y.<span class="hljs-title function_">set</span>(e,i,!<span class="hljs-number">1</span>),S.<span class="hljs-property">event</span>.<span class="hljs-title function_">add</span>(e,i,&#123;<span class="hljs-attr">namespace</span>:!<span class="hljs-number">1</span>,<span class="hljs-attr">handler</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t,n,r=Y.<span class="hljs-title function_">get</span>(<span class="hljs-variable language_">this</span>,i);<span class="hljs-keyword">if</span>(<span class="hljs-number">1</span>&amp;e.<span class="hljs-property">isTrigger</span>&amp;&amp;<span class="hljs-variable language_">this</span>[i])&#123;<span class="hljs-keyword">if</span>(r.<span class="hljs-property">length</span>)(S.<span class="hljs-property">event</span>.<span class="hljs-property">special</span>[i]||&#123;&#125;).<span class="hljs-property">delegateType</span>&amp;&amp;e.<span class="hljs-title function_">stopPropagation</span>();<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(r=s.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">arguments</span>),Y.<span class="hljs-title function_">set</span>(<span class="hljs-variable language_">this</span>,i,r),t=<span class="hljs-title function_">o</span>(<span class="hljs-variable language_">this</span>,i),<span class="hljs-variable language_">this</span>[i](),r!==(n=Y.<span class="hljs-title function_">get</span>(<span class="hljs-variable language_">this</span>,i))||t?Y.<span class="hljs-title function_">set</span>(<span class="hljs-variable language_">this</span>,i,!<span class="hljs-number">1</span>):n=&#123;&#125;,r!==n)<span class="hljs-keyword">return</span> e.<span class="hljs-title function_">stopImmediatePropagation</span>(),e.<span class="hljs-title function_">preventDefault</span>(),n&amp;&amp;n.<span class="hljs-property">value</span>&#125;<span class="hljs-keyword">else</span> r.<span class="hljs-property">length</span>&amp;&amp;(Y.<span class="hljs-title function_">set</span>(<span class="hljs-variable language_">this</span>,i,&#123;<span class="hljs-attr">value</span>:S.<span class="hljs-property">event</span>.<span class="hljs-title function_">trigger</span>(S.<span class="hljs-title function_">extend</span>(r[<span class="hljs-number">0</span>],S.<span class="hljs-property">Event</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>),r.<span class="hljs-title function_">slice</span>(<span class="hljs-number">1</span>),<span class="hljs-variable language_">this</span>)&#125;),e.<span class="hljs-title function_">stopImmediatePropagation</span>())&#125;&#125;)):<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===Y.<span class="hljs-title function_">get</span>(e,i)&amp;&amp;S.<span class="hljs-property">event</span>.<span class="hljs-title function_">add</span>(e,i,we)&#125;S.<span class="hljs-property">event</span>=&#123;<span class="hljs-attr">global</span>:&#123;&#125;,<span class="hljs-attr">add</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">t,e,n,r,i</span>)&#123;<span class="hljs-keyword">var</span> o,a,s,u,l,c,f,p,d,h,g,v=Y.<span class="hljs-title function_">get</span>(t);<span class="hljs-keyword">if</span>(<span class="hljs-title function_">V</span>(t))&#123;n.<span class="hljs-property">handler</span>&amp;&amp;(n=(o=n).<span class="hljs-property">handler</span>,i=o.<span class="hljs-property">selector</span>),i&amp;&amp;S.<span class="hljs-property">find</span>.<span class="hljs-title function_">matchesSelector</span>(re,i),n.<span class="hljs-property">guid</span>||(n.<span class="hljs-property">guid</span>=S.<span class="hljs-property">guid</span>++),(u=v.<span class="hljs-property">events</span>)||(u=v.<span class="hljs-property">events</span>=<span class="hljs-title class_">Object</span>.<span class="hljs-title function_">create</span>(<span class="hljs-literal">null</span>)),(a=v.<span class="hljs-property">handle</span>)||(a=v.<span class="hljs-property">handle</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span><span class="hljs-string">&quot;undefined&quot;</span>!=<span class="hljs-keyword">typeof</span> S&amp;&amp;S.<span class="hljs-property">event</span>.<span class="hljs-property">triggered</span>!==e.<span class="hljs-property">type</span>?S.<span class="hljs-property">event</span>.<span class="hljs-property">dispatch</span>.<span class="hljs-title function_">apply</span>(t,<span class="hljs-variable language_">arguments</span>):<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>&#125;),l=(e=(e||<span class="hljs-string">&quot;&quot;</span>).<span class="hljs-title function_">match</span>(P)||[<span class="hljs-string">&quot;&quot;</span>]).<span class="hljs-property">length</span>;<span class="hljs-keyword">while</span>(l--)d=g=(s=be.<span class="hljs-title function_">exec</span>(e[l])||[])[<span class="hljs-number">1</span>],h=(s[<span class="hljs-number">2</span>]||<span class="hljs-string">&quot;&quot;</span>).<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;.&quot;</span>).<span class="hljs-title function_">sort</span>(),d&amp;&amp;(f=S.<span class="hljs-property">event</span>.<span class="hljs-property">special</span>[d]||&#123;&#125;,d=(i?f.<span class="hljs-property">delegateType</span>:f.<span class="hljs-property">bindType</span>)||d,f=S.<span class="hljs-property">event</span>.<span class="hljs-property">special</span>[d]||&#123;&#125;,c=S.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">type</span>:d,<span class="hljs-attr">origType</span>:g,<span class="hljs-attr">data</span>:r,<span class="hljs-attr">handler</span>:n,<span class="hljs-attr">guid</span>:n.<span class="hljs-property">guid</span>,<span class="hljs-attr">selector</span>:i,<span class="hljs-attr">needsContext</span>:i&amp;&amp;S.<span class="hljs-property">expr</span>.<span class="hljs-property">match</span>.<span class="hljs-property">needsContext</span>.<span class="hljs-title function_">test</span>(i),<span class="hljs-attr">namespace</span>:h.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;.&quot;</span>)&#125;,o),(p=u[d])||((p=u[d]=[]).<span class="hljs-property">delegateCount</span>=<span class="hljs-number">0</span>,f.<span class="hljs-property">setup</span>&amp;&amp;!<span class="hljs-number">1</span>!==f.<span class="hljs-property">setup</span>.<span class="hljs-title function_">call</span>(t,r,h,a)||t.<span class="hljs-property">addEventListener</span>&amp;&amp;t.<span class="hljs-title function_">addEventListener</span>(d,a)),f.<span class="hljs-property">add</span>&amp;&amp;(f.<span class="hljs-property">add</span>.<span class="hljs-title function_">call</span>(t,c),c.<span class="hljs-property">handler</span>.<span class="hljs-property">guid</span>||(c.<span class="hljs-property">handler</span>.<span class="hljs-property">guid</span>=n.<span class="hljs-property">guid</span>)),i?p.<span class="hljs-title function_">splice</span>(p.<span class="hljs-property">delegateCount</span>++,<span class="hljs-number">0</span>,c):p.<span class="hljs-title function_">push</span>(c),S.<span class="hljs-property">event</span>.<span class="hljs-property">global</span>[d]=!<span class="hljs-number">0</span>)&#125;&#125;,<span class="hljs-attr">remove</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n,r,i</span>)&#123;<span class="hljs-keyword">var</span> o,a,s,u,l,c,f,p,d,h,g,v=Y.<span class="hljs-title function_">hasData</span>(e)&amp;&amp;Y.<span class="hljs-title function_">get</span>(e);<span class="hljs-keyword">if</span>(v&amp;&amp;(u=v.<span class="hljs-property">events</span>))&#123;l=(t=(t||<span class="hljs-string">&quot;&quot;</span>).<span class="hljs-title function_">match</span>(P)||[<span class="hljs-string">&quot;&quot;</span>]).<span class="hljs-property">length</span>;<span class="hljs-keyword">while</span>(l--)<span class="hljs-keyword">if</span>(d=g=(s=be.<span class="hljs-title function_">exec</span>(t[l])||[])[<span class="hljs-number">1</span>],h=(s[<span class="hljs-number">2</span>]||<span class="hljs-string">&quot;&quot;</span>).<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;.&quot;</span>).<span class="hljs-title function_">sort</span>(),d)&#123;f=S.<span class="hljs-property">event</span>.<span class="hljs-property">special</span>[d]||&#123;&#125;,p=u[d=(r?f.<span class="hljs-property">delegateType</span>:f.<span class="hljs-property">bindType</span>)||d]||[],s=s[<span class="hljs-number">2</span>]&amp;&amp;<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&quot;(^|\\.)&quot;</span>+h.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;\\.(?:.*\\.|)&quot;</span>)+<span class="hljs-string">&quot;(\\.|$)&quot;</span>),a=o=p.<span class="hljs-property">length</span>;<span class="hljs-keyword">while</span>(o--)c=p[o],!i&amp;&amp;g!==c.<span class="hljs-property">origType</span>||n&amp;&amp;n.<span class="hljs-property">guid</span>!==c.<span class="hljs-property">guid</span>||s&amp;&amp;!s.<span class="hljs-title function_">test</span>(c.<span class="hljs-property">namespace</span>)||r&amp;&amp;r!==c.<span class="hljs-property">selector</span>&amp;&amp;(<span class="hljs-string">&quot;**&quot;</span>!==r||!c.<span class="hljs-property">selector</span>)||(p.<span class="hljs-title function_">splice</span>(o,<span class="hljs-number">1</span>),c.<span class="hljs-property">selector</span>&amp;&amp;p.<span class="hljs-property">delegateCount</span>--,f.<span class="hljs-property">remove</span>&amp;&amp;f.<span class="hljs-property">remove</span>.<span class="hljs-title function_">call</span>(e,c));a&amp;&amp;!p.<span class="hljs-property">length</span>&amp;&amp;(f.<span class="hljs-property">teardown</span>&amp;&amp;!<span class="hljs-number">1</span>!==f.<span class="hljs-property">teardown</span>.<span class="hljs-title function_">call</span>(e,h,v.<span class="hljs-property">handle</span>)||S.<span class="hljs-title function_">removeEvent</span>(e,d,v.<span class="hljs-property">handle</span>),<span class="hljs-keyword">delete</span> u[d])&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">for</span>(d <span class="hljs-keyword">in</span> u)S.<span class="hljs-property">event</span>.<span class="hljs-title function_">remove</span>(e,d+t[l],n,r,!<span class="hljs-number">0</span>);S.<span class="hljs-title function_">isEmptyObject</span>(u)&amp;&amp;Y.<span class="hljs-title function_">remove</span>(e,<span class="hljs-string">&quot;handle events&quot;</span>)&#125;&#125;,<span class="hljs-attr">dispatch</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t,n,r,i,o,a,s=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>),u=S.<span class="hljs-property">event</span>.<span class="hljs-title function_">fix</span>(e),l=(Y.<span class="hljs-title function_">get</span>(<span class="hljs-variable language_">this</span>,<span class="hljs-string">&quot;events&quot;</span>)||<span class="hljs-title class_">Object</span>.<span class="hljs-title function_">create</span>(<span class="hljs-literal">null</span>))[u.<span class="hljs-property">type</span>]||[],c=S.<span class="hljs-property">event</span>.<span class="hljs-property">special</span>[u.<span class="hljs-property">type</span>]||&#123;&#125;;<span class="hljs-keyword">for</span>(s[<span class="hljs-number">0</span>]=u,t=<span class="hljs-number">1</span>;t&lt;<span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>;t++)s[t]=<span class="hljs-variable language_">arguments</span>[t];<span class="hljs-keyword">if</span>(u.<span class="hljs-property">delegateTarget</span>=<span class="hljs-variable language_">this</span>,!c.<span class="hljs-property">preDispatch</span>||!<span class="hljs-number">1</span>!==c.<span class="hljs-property">preDispatch</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>,u))&#123;a=S.<span class="hljs-property">event</span>.<span class="hljs-property">handlers</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>,u,l),t=<span class="hljs-number">0</span>;<span class="hljs-keyword">while</span>((i=a[t++])&amp;&amp;!u.<span class="hljs-title function_">isPropagationStopped</span>())&#123;u.<span class="hljs-property">currentTarget</span>=i.<span class="hljs-property">elem</span>,n=<span class="hljs-number">0</span>;<span class="hljs-keyword">while</span>((o=i.<span class="hljs-property">handlers</span>[n++])&amp;&amp;!u.<span class="hljs-title function_">isImmediatePropagationStopped</span>())u.<span class="hljs-property">rnamespace</span>&amp;&amp;!<span class="hljs-number">1</span>!==o.<span class="hljs-property">namespace</span>&amp;&amp;!u.<span class="hljs-property">rnamespace</span>.<span class="hljs-title function_">test</span>(o.<span class="hljs-property">namespace</span>)||(u.<span class="hljs-property">handleObj</span>=o,u.<span class="hljs-property">data</span>=o.<span class="hljs-property">data</span>,<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==(r=((S.<span class="hljs-property">event</span>.<span class="hljs-property">special</span>[o.<span class="hljs-property">origType</span>]||&#123;&#125;).<span class="hljs-property">handle</span>||o.<span class="hljs-property">handler</span>).<span class="hljs-title function_">apply</span>(i.<span class="hljs-property">elem</span>,s))&amp;&amp;!<span class="hljs-number">1</span>===(u.<span class="hljs-property">result</span>=r)&amp;&amp;(u.<span class="hljs-title function_">preventDefault</span>(),u.<span class="hljs-title function_">stopPropagation</span>()))&#125;<span class="hljs-keyword">return</span> c.<span class="hljs-property">postDispatch</span>&amp;&amp;c.<span class="hljs-property">postDispatch</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>,u),u.<span class="hljs-property">result</span>&#125;&#125;,<span class="hljs-attr">handlers</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n,r,i,o,a,s=[],u=t.<span class="hljs-property">delegateCount</span>,l=e.<span class="hljs-property">target</span>;<span class="hljs-keyword">if</span>(u&amp;&amp;l.<span class="hljs-property">nodeType</span>&amp;&amp;!(<span class="hljs-string">&quot;click&quot;</span>===e.<span class="hljs-property">type</span>&amp;&amp;<span class="hljs-number">1</span>&lt;=e.<span class="hljs-property">button</span>))<span class="hljs-keyword">for</span>(;l!==<span class="hljs-variable language_">this</span>;l=l.<span class="hljs-property">parentNode</span>||<span class="hljs-variable language_">this</span>)<span class="hljs-keyword">if</span>(<span class="hljs-number">1</span>===l.<span class="hljs-property">nodeType</span>&amp;&amp;(<span class="hljs-string">&quot;click&quot;</span>!==e.<span class="hljs-property">type</span>||!<span class="hljs-number">0</span>!==l.<span class="hljs-property">disabled</span>))&#123;<span class="hljs-keyword">for</span>(o=[],a=&#123;&#125;,n=<span class="hljs-number">0</span>;n&lt;u;n++)<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===a[i=(r=t[n]).<span class="hljs-property">selector</span>+<span class="hljs-string">&quot; &quot;</span>]&amp;&amp;(a[i]=r.<span class="hljs-property">needsContext</span>?-<span class="hljs-number">1</span>&lt;<span class="hljs-title function_">S</span>(i,<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">index</span>(l):S.<span class="hljs-title function_">find</span>(i,<span class="hljs-variable language_">this</span>,<span class="hljs-literal">null</span>,[l]).<span class="hljs-property">length</span>),a[i]&amp;&amp;o.<span class="hljs-title function_">push</span>(r);o.<span class="hljs-property">length</span>&amp;&amp;s.<span class="hljs-title function_">push</span>(&#123;<span class="hljs-attr">elem</span>:l,<span class="hljs-attr">handlers</span>:o&#125;)&#125;<span class="hljs-keyword">return</span> l=<span class="hljs-variable language_">this</span>,u&lt;t.<span class="hljs-property">length</span>&amp;&amp;s.<span class="hljs-title function_">push</span>(&#123;<span class="hljs-attr">elem</span>:l,<span class="hljs-attr">handlers</span>:t.<span class="hljs-title function_">slice</span>(u)&#125;),s&#125;,<span class="hljs-attr">addProp</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">t,e</span>)&#123;<span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(S.<span class="hljs-property">Event</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>,t,&#123;<span class="hljs-attr">enumerable</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">configurable</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">get</span>:<span class="hljs-title function_">m</span>(e)?<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">originalEvent</span>)<span class="hljs-keyword">return</span> <span class="hljs-title function_">e</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">originalEvent</span>)&#125;:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">originalEvent</span>)<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">originalEvent</span>[t]&#125;,<span class="hljs-attr">set</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(<span class="hljs-variable language_">this</span>,t,&#123;<span class="hljs-attr">enumerable</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">configurable</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">writable</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">value</span>:e&#125;)&#125;&#125;)&#125;,<span class="hljs-attr">fix</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e[S.<span class="hljs-property">expando</span>]?<span class="hljs-attr">e</span>:<span class="hljs-keyword">new</span> S.<span class="hljs-title class_">Event</span>(e)&#125;,<span class="hljs-attr">special</span>:&#123;<span class="hljs-attr">load</span>:&#123;<span class="hljs-attr">noBubble</span>:!<span class="hljs-number">0</span>&#125;,<span class="hljs-attr">click</span>:&#123;<span class="hljs-attr">setup</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=<span class="hljs-variable language_">this</span>||e;<span class="hljs-keyword">return</span> pe.<span class="hljs-title function_">test</span>(t.<span class="hljs-property">type</span>)&amp;&amp;t.<span class="hljs-property">click</span>&amp;&amp;<span class="hljs-title function_">A</span>(t,<span class="hljs-string">&quot;input&quot;</span>)&amp;&amp;<span class="hljs-title class_">Se</span>(t,<span class="hljs-string">&quot;click&quot;</span>,we),!<span class="hljs-number">1</span>&#125;,<span class="hljs-attr">trigger</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=<span class="hljs-variable language_">this</span>||e;<span class="hljs-keyword">return</span> pe.<span class="hljs-title function_">test</span>(t.<span class="hljs-property">type</span>)&amp;&amp;t.<span class="hljs-property">click</span>&amp;&amp;<span class="hljs-title function_">A</span>(t,<span class="hljs-string">&quot;input&quot;</span>)&amp;&amp;<span class="hljs-title class_">Se</span>(t,<span class="hljs-string">&quot;click&quot;</span>),!<span class="hljs-number">0</span>&#125;,<span class="hljs-attr">_default</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=e.<span class="hljs-property">target</span>;<span class="hljs-keyword">return</span> pe.<span class="hljs-title function_">test</span>(t.<span class="hljs-property">type</span>)&amp;&amp;t.<span class="hljs-property">click</span>&amp;&amp;<span class="hljs-title function_">A</span>(t,<span class="hljs-string">&quot;input&quot;</span>)&amp;&amp;Y.<span class="hljs-title function_">get</span>(t,<span class="hljs-string">&quot;click&quot;</span>)||<span class="hljs-title function_">A</span>(t,<span class="hljs-string">&quot;a&quot;</span>)&#125;&#125;,<span class="hljs-attr">beforeunload</span>:&#123;<span class="hljs-attr">postDispatch</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==e.<span class="hljs-property">result</span>&amp;&amp;e.<span class="hljs-property">originalEvent</span>&amp;&amp;(e.<span class="hljs-property">originalEvent</span>.<span class="hljs-property">returnValue</span>=e.<span class="hljs-property">result</span>)&#125;&#125;&#125;&#125;,S.<span class="hljs-property">removeEvent</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;e.<span class="hljs-property">removeEventListener</span>&amp;&amp;e.<span class="hljs-title function_">removeEventListener</span>(t,n)&#125;,S.<span class="hljs-property">Event</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">if</span>(!(<span class="hljs-variable language_">this</span> <span class="hljs-keyword">instanceof</span> S.<span class="hljs-property">Event</span>))<span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> S.<span class="hljs-title class_">Event</span>(e,t);e&amp;&amp;e.<span class="hljs-property">type</span>?(<span class="hljs-variable language_">this</span>.<span class="hljs-property">originalEvent</span>=e,<span class="hljs-variable language_">this</span>.<span class="hljs-property">type</span>=e.<span class="hljs-property">type</span>,<span class="hljs-variable language_">this</span>.<span class="hljs-property">isDefaultPrevented</span>=e.<span class="hljs-property">defaultPrevented</span>||<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===e.<span class="hljs-property">defaultPrevented</span>&amp;&amp;!<span class="hljs-number">1</span>===e.<span class="hljs-property">returnValue</span>?<span class="hljs-attr">we</span>:<span class="hljs-title class_">Te</span>,<span class="hljs-variable language_">this</span>.<span class="hljs-property">target</span>=e.<span class="hljs-property">target</span>&amp;&amp;<span class="hljs-number">3</span>===e.<span class="hljs-property">target</span>.<span class="hljs-property">nodeType</span>?e.<span class="hljs-property">target</span>.<span class="hljs-property">parentNode</span>:e.<span class="hljs-property">target</span>,<span class="hljs-variable language_">this</span>.<span class="hljs-property">currentTarget</span>=e.<span class="hljs-property">currentTarget</span>,<span class="hljs-variable language_">this</span>.<span class="hljs-property">relatedTarget</span>=e.<span class="hljs-property">relatedTarget</span>):<span class="hljs-variable language_">this</span>.<span class="hljs-property">type</span>=e,t&amp;&amp;S.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>,t),<span class="hljs-variable language_">this</span>.<span class="hljs-property">timeStamp</span>=e&amp;&amp;e.<span class="hljs-property">timeStamp</span>||<span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>(),<span class="hljs-variable language_">this</span>[S.<span class="hljs-property">expando</span>]=!<span class="hljs-number">0</span>&#125;,S.<span class="hljs-property">Event</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>=&#123;<span class="hljs-attr">constructor</span>:S.<span class="hljs-property">Event</span>,<span class="hljs-attr">isDefaultPrevented</span>:<span class="hljs-title class_">Te</span>,<span class="hljs-attr">isPropagationStopped</span>:<span class="hljs-title class_">Te</span>,<span class="hljs-attr">isImmediatePropagationStopped</span>:<span class="hljs-title class_">Te</span>,<span class="hljs-attr">isSimulated</span>:!<span class="hljs-number">1</span>,<span class="hljs-attr">preventDefault</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> e=<span class="hljs-variable language_">this</span>.<span class="hljs-property">originalEvent</span>;<span class="hljs-variable language_">this</span>.<span class="hljs-property">isDefaultPrevented</span>=we,e&amp;&amp;!<span class="hljs-variable language_">this</span>.<span class="hljs-property">isSimulated</span>&amp;&amp;e.<span class="hljs-title function_">preventDefault</span>()&#125;,<span class="hljs-attr">stopPropagation</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> e=<span class="hljs-variable language_">this</span>.<span class="hljs-property">originalEvent</span>;<span class="hljs-variable language_">this</span>.<span class="hljs-property">isPropagationStopped</span>=we,e&amp;&amp;!<span class="hljs-variable language_">this</span>.<span class="hljs-property">isSimulated</span>&amp;&amp;e.<span class="hljs-title function_">stopPropagation</span>()&#125;,<span class="hljs-attr">stopImmediatePropagation</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> e=<span class="hljs-variable language_">this</span>.<span class="hljs-property">originalEvent</span>;<span class="hljs-variable language_">this</span>.<span class="hljs-property">isImmediatePropagationStopped</span>=we,e&amp;&amp;!<span class="hljs-variable language_">this</span>.<span class="hljs-property">isSimulated</span>&amp;&amp;e.<span class="hljs-title function_">stopImmediatePropagation</span>(),<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">stopPropagation</span>()&#125;&#125;,S.<span class="hljs-title function_">each</span>(&#123;<span class="hljs-attr">altKey</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">bubbles</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">cancelable</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">changedTouches</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">ctrlKey</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">detail</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">eventPhase</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">metaKey</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">pageX</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">pageY</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">shiftKey</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">view</span>:!<span class="hljs-number">0</span>,<span class="hljs-string">&quot;char&quot;</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">code</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">charCode</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">key</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">keyCode</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">button</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">buttons</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">clientX</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">clientY</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">offsetX</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">offsetY</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">pointerId</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">pointerType</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">screenX</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">screenY</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">targetTouches</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">toElement</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">touches</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">which</span>:!<span class="hljs-number">0</span>&#125;,S.<span class="hljs-property">event</span>.<span class="hljs-property">addProp</span>),S.<span class="hljs-title function_">each</span>(&#123;<span class="hljs-attr">focus</span>:<span class="hljs-string">&quot;focusin&quot;</span>,<span class="hljs-attr">blur</span>:<span class="hljs-string">&quot;focusout&quot;</span>&#125;,<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;S.<span class="hljs-property">event</span>.<span class="hljs-property">special</span>[e]=&#123;<span class="hljs-attr">setup</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title class_">Se</span>(<span class="hljs-variable language_">this</span>,e,<span class="hljs-title class_">Ce</span>),!<span class="hljs-number">1</span>&#125;,<span class="hljs-attr">trigger</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title class_">Se</span>(<span class="hljs-variable language_">this</span>,e),!<span class="hljs-number">0</span>&#125;,<span class="hljs-attr">_default</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span>!<span class="hljs-number">0</span>&#125;,<span class="hljs-attr">delegateType</span>:t&#125;&#125;),S.<span class="hljs-title function_">each</span>(&#123;<span class="hljs-attr">mouseenter</span>:<span class="hljs-string">&quot;mouseover&quot;</span>,<span class="hljs-attr">mouseleave</span>:<span class="hljs-string">&quot;mouseout&quot;</span>,<span class="hljs-attr">pointerenter</span>:<span class="hljs-string">&quot;pointerover&quot;</span>,<span class="hljs-attr">pointerleave</span>:<span class="hljs-string">&quot;pointerout&quot;</span>&#125;,<span class="hljs-keyword">function</span>(<span class="hljs-params">e,i</span>)&#123;S.<span class="hljs-property">event</span>.<span class="hljs-property">special</span>[e]=&#123;<span class="hljs-attr">delegateType</span>:i,<span class="hljs-attr">bindType</span>:i,<span class="hljs-attr">handle</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t,n=e.<span class="hljs-property">relatedTarget</span>,r=e.<span class="hljs-property">handleObj</span>;<span class="hljs-keyword">return</span> n&amp;&amp;(n===<span class="hljs-variable language_">this</span>||S.<span class="hljs-title function_">contains</span>(<span class="hljs-variable language_">this</span>,n))||(e.<span class="hljs-property">type</span>=r.<span class="hljs-property">origType</span>,t=r.<span class="hljs-property">handler</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>,<span class="hljs-variable language_">arguments</span>),e.<span class="hljs-property">type</span>=i),t&#125;&#125;&#125;),S.<span class="hljs-property">fn</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">on</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n,r</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title class_">Ee</span>(<span class="hljs-variable language_">this</span>,e,t,n,r)&#125;,<span class="hljs-attr">one</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n,r</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title class_">Ee</span>(<span class="hljs-variable language_">this</span>,e,t,n,r,<span class="hljs-number">1</span>)&#125;,<span class="hljs-attr">off</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r,i;<span class="hljs-keyword">if</span>(e&amp;&amp;e.<span class="hljs-property">preventDefault</span>&amp;&amp;e.<span class="hljs-property">handleObj</span>)<span class="hljs-keyword">return</span> r=e.<span class="hljs-property">handleObj</span>,<span class="hljs-title function_">S</span>(e.<span class="hljs-property">delegateTarget</span>).<span class="hljs-title function_">off</span>(r.<span class="hljs-property">namespace</span>?r.<span class="hljs-property">origType</span>+<span class="hljs-string">&quot;.&quot;</span>+r.<span class="hljs-property">namespace</span>:r.<span class="hljs-property">origType</span>,r.<span class="hljs-property">selector</span>,r.<span class="hljs-property">handler</span>),<span class="hljs-variable language_">this</span>;<span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;object&quot;</span>==<span class="hljs-keyword">typeof</span> e)&#123;<span class="hljs-keyword">for</span>(i <span class="hljs-keyword">in</span> e)<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">off</span>(i,t,e[i]);<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>&#125;<span class="hljs-keyword">return</span>!<span class="hljs-number">1</span>!==t&amp;&amp;<span class="hljs-string">&quot;function&quot;</span>!=<span class="hljs-keyword">typeof</span> t||(n=t,t=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>),!<span class="hljs-number">1</span>===n&amp;&amp;(n=<span class="hljs-title class_">Te</span>),<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;S.<span class="hljs-property">event</span>.<span class="hljs-title function_">remove</span>(<span class="hljs-variable language_">this</span>,e,n,t)&#125;)&#125;&#125;);<span class="hljs-keyword">var</span> ke=<span class="hljs-regexp">/&lt;script|&lt;style|&lt;link/i</span>,<span class="hljs-title class_">Ae</span>=<span class="hljs-regexp">/checked\s*(?:[^=]|=\s*.checked.)/i</span>,<span class="hljs-title class_">Ne</span>=<span class="hljs-regexp">/^\s*&lt;!(?:\[CDATA\[|--)|(?:\]\]|--)&gt;\s*$/g</span>;<span class="hljs-keyword">function</span> <span class="hljs-title function_">je</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">A</span>(e,<span class="hljs-string">&quot;table&quot;</span>)&amp;&amp;<span class="hljs-title function_">A</span>(<span class="hljs-number">11</span>!==t.<span class="hljs-property">nodeType</span>?<span class="hljs-attr">t</span>:t.<span class="hljs-property">firstChild</span>,<span class="hljs-string">&quot;tr&quot;</span>)&amp;&amp;<span class="hljs-title function_">S</span>(e).<span class="hljs-title function_">children</span>(<span class="hljs-string">&quot;tbody&quot;</span>)[<span class="hljs-number">0</span>]||e&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">De</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e.<span class="hljs-property">type</span>=(<span class="hljs-literal">null</span>!==e.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;type&quot;</span>))+<span class="hljs-string">&quot;/&quot;</span>+e.<span class="hljs-property">type</span>,e&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">qe</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span><span class="hljs-string">&quot;true/&quot;</span>===(e.<span class="hljs-property">type</span>||<span class="hljs-string">&quot;&quot;</span>).<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>,<span class="hljs-number">5</span>)?e.<span class="hljs-property">type</span>=e.<span class="hljs-property">type</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">5</span>):e.<span class="hljs-title function_">removeAttribute</span>(<span class="hljs-string">&quot;type&quot;</span>),e&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">Le</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n,r,i,o,a,s;<span class="hljs-keyword">if</span>(<span class="hljs-number">1</span>===t.<span class="hljs-property">nodeType</span>)&#123;<span class="hljs-keyword">if</span>(Y.<span class="hljs-title function_">hasData</span>(e)&amp;&amp;(s=Y.<span class="hljs-title function_">get</span>(e).<span class="hljs-property">events</span>))<span class="hljs-keyword">for</span>(i <span class="hljs-keyword">in</span> Y.<span class="hljs-title function_">remove</span>(t,<span class="hljs-string">&quot;handle events&quot;</span>),s)<span class="hljs-keyword">for</span>(n=<span class="hljs-number">0</span>,r=s[i].<span class="hljs-property">length</span>;n&lt;r;n++)S.<span class="hljs-property">event</span>.<span class="hljs-title function_">add</span>(t,i,s[i][n]);Q.<span class="hljs-title function_">hasData</span>(e)&amp;&amp;(o=Q.<span class="hljs-title function_">access</span>(e),a=S.<span class="hljs-title function_">extend</span>(&#123;&#125;,o),Q.<span class="hljs-title function_">set</span>(t,a))&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">He</span>(<span class="hljs-params">n,r,i,o</span>)&#123;r=<span class="hljs-title function_">g</span>(r);<span class="hljs-keyword">var</span> e,t,a,s,u,l,c=<span class="hljs-number">0</span>,f=n.<span class="hljs-property">length</span>,p=f-<span class="hljs-number">1</span>,d=r[<span class="hljs-number">0</span>],h=<span class="hljs-title function_">m</span>(d);<span class="hljs-keyword">if</span>(h||<span class="hljs-number">1</span>&lt;f&amp;&amp;<span class="hljs-string">&quot;string&quot;</span>==<span class="hljs-keyword">typeof</span> d&amp;&amp;!y.<span class="hljs-property">checkClone</span>&amp;&amp;<span class="hljs-title class_">Ae</span>.<span class="hljs-title function_">test</span>(d))<span class="hljs-keyword">return</span> n.<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=n.<span class="hljs-title function_">eq</span>(e);h&amp;&amp;(r[<span class="hljs-number">0</span>]=d.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>,e,t.<span class="hljs-title function_">html</span>())),<span class="hljs-title class_">He</span>(t,r,i,o)&#125;);<span class="hljs-keyword">if</span>(f&amp;&amp;(t=(e=<span class="hljs-title function_">xe</span>(r,n[<span class="hljs-number">0</span>].<span class="hljs-property">ownerDocument</span>,!<span class="hljs-number">1</span>,n,o)).<span class="hljs-property">firstChild</span>,<span class="hljs-number">1</span>===e.<span class="hljs-property">childNodes</span>.<span class="hljs-property">length</span>&amp;&amp;(e=t),t||o))&#123;<span class="hljs-keyword">for</span>(s=(a=S.<span class="hljs-title function_">map</span>(<span class="hljs-title function_">ve</span>(e,<span class="hljs-string">&quot;script&quot;</span>),<span class="hljs-title class_">De</span>)).<span class="hljs-property">length</span>;c&lt;f;c++)u=e,c!==p&amp;&amp;(u=S.<span class="hljs-title function_">clone</span>(u,!<span class="hljs-number">0</span>,!<span class="hljs-number">0</span>),s&amp;&amp;S.<span class="hljs-title function_">merge</span>(a,<span class="hljs-title function_">ve</span>(u,<span class="hljs-string">&quot;script&quot;</span>))),i.<span class="hljs-title function_">call</span>(n[c],u,c);<span class="hljs-keyword">if</span>(s)<span class="hljs-keyword">for</span>(l=a[a.<span class="hljs-property">length</span>-<span class="hljs-number">1</span>].<span class="hljs-property">ownerDocument</span>,S.<span class="hljs-title function_">map</span>(a,qe),c=<span class="hljs-number">0</span>;c&lt;s;c++)u=a[c],he.<span class="hljs-title function_">test</span>(u.<span class="hljs-property">type</span>||<span class="hljs-string">&quot;&quot;</span>)&amp;&amp;!Y.<span class="hljs-title function_">access</span>(u,<span class="hljs-string">&quot;globalEval&quot;</span>)&amp;&amp;S.<span class="hljs-title function_">contains</span>(l,u)&amp;&amp;(u.<span class="hljs-property">src</span>&amp;&amp;<span class="hljs-string">&quot;module&quot;</span>!==(u.<span class="hljs-property">type</span>||<span class="hljs-string">&quot;&quot;</span>).<span class="hljs-title function_">toLowerCase</span>()?S.<span class="hljs-property">_evalUrl</span>&amp;&amp;!u.<span class="hljs-property">noModule</span>&amp;&amp;S.<span class="hljs-title function_">_evalUrl</span>(u.<span class="hljs-property">src</span>,&#123;<span class="hljs-attr">nonce</span>:u.<span class="hljs-property">nonce</span>||u.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;nonce&quot;</span>)&#125;,l):<span class="hljs-title function_">b</span>(u.<span class="hljs-property">textContent</span>.<span class="hljs-title function_">replace</span>(<span class="hljs-title class_">Ne</span>,<span class="hljs-string">&quot;&quot;</span>),u,l))&#125;<span class="hljs-keyword">return</span> n&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">Oe</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> r,i=t?S.<span class="hljs-title function_">filter</span>(t,e):e,o=<span class="hljs-number">0</span>;<span class="hljs-literal">null</span>!=(r=i[o]);o++)n||<span class="hljs-number">1</span>!==r.<span class="hljs-property">nodeType</span>||S.<span class="hljs-title function_">cleanData</span>(<span class="hljs-title function_">ve</span>(r)),r.<span class="hljs-property">parentNode</span>&amp;&amp;(n&amp;&amp;<span class="hljs-title function_">ie</span>(r)&amp;&amp;<span class="hljs-title function_">ye</span>(<span class="hljs-title function_">ve</span>(r,<span class="hljs-string">&quot;script&quot;</span>)),r.<span class="hljs-property">parentNode</span>.<span class="hljs-title function_">removeChild</span>(r));<span class="hljs-keyword">return</span> e&#125;S.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">htmlPrefilter</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e&#125;,<span class="hljs-attr">clone</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r,i,o,a,s,u,l,c=e.<span class="hljs-title function_">cloneNode</span>(!<span class="hljs-number">0</span>),f=<span class="hljs-title function_">ie</span>(e);<span class="hljs-keyword">if</span>(!(y.<span class="hljs-property">noCloneChecked</span>||<span class="hljs-number">1</span>!==e.<span class="hljs-property">nodeType</span>&amp;&amp;<span class="hljs-number">11</span>!==e.<span class="hljs-property">nodeType</span>||S.<span class="hljs-title function_">isXMLDoc</span>(e)))<span class="hljs-keyword">for</span>(a=<span class="hljs-title function_">ve</span>(c),r=<span class="hljs-number">0</span>,i=(o=<span class="hljs-title function_">ve</span>(e)).<span class="hljs-property">length</span>;r&lt;i;r++)s=o[r],u=a[r],<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>,<span class="hljs-string">&quot;input&quot;</span>===(l=u.<span class="hljs-property">nodeName</span>.<span class="hljs-title function_">toLowerCase</span>())&amp;&amp;pe.<span class="hljs-title function_">test</span>(s.<span class="hljs-property">type</span>)?u.<span class="hljs-property">checked</span>=s.<span class="hljs-property">checked</span>:<span class="hljs-string">&quot;input&quot;</span>!==l&amp;&amp;<span class="hljs-string">&quot;textarea&quot;</span>!==l||(u.<span class="hljs-property">defaultValue</span>=s.<span class="hljs-property">defaultValue</span>);<span class="hljs-keyword">if</span>(t)<span class="hljs-keyword">if</span>(n)<span class="hljs-keyword">for</span>(o=o||<span class="hljs-title function_">ve</span>(e),a=a||<span class="hljs-title function_">ve</span>(c),r=<span class="hljs-number">0</span>,i=o.<span class="hljs-property">length</span>;r&lt;i;r++)<span class="hljs-title class_">Le</span>(o[r],a[r]);<span class="hljs-keyword">else</span> <span class="hljs-title class_">Le</span>(e,c);<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>&lt;(a=<span class="hljs-title function_">ve</span>(c,<span class="hljs-string">&quot;script&quot;</span>)).<span class="hljs-property">length</span>&amp;&amp;<span class="hljs-title function_">ye</span>(a,!f&amp;&amp;<span class="hljs-title function_">ve</span>(e,<span class="hljs-string">&quot;script&quot;</span>)),c&#125;,<span class="hljs-attr">cleanData</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> t,n,r,i=S.<span class="hljs-property">event</span>.<span class="hljs-property">special</span>,o=<span class="hljs-number">0</span>;<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==(n=e[o]);o++)<span class="hljs-keyword">if</span>(<span class="hljs-title function_">V</span>(n))&#123;<span class="hljs-keyword">if</span>(t=n[Y.<span class="hljs-property">expando</span>])&#123;<span class="hljs-keyword">if</span>(t.<span class="hljs-property">events</span>)<span class="hljs-keyword">for</span>(r <span class="hljs-keyword">in</span> t.<span class="hljs-property">events</span>)i[r]?S.<span class="hljs-property">event</span>.<span class="hljs-title function_">remove</span>(n,r):S.<span class="hljs-title function_">removeEvent</span>(n,r,t.<span class="hljs-property">handle</span>);n[Y.<span class="hljs-property">expando</span>]=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>&#125;n[Q.<span class="hljs-property">expando</span>]&amp;&amp;(n[Q.<span class="hljs-property">expando</span>]=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>)&#125;&#125;&#125;),S.<span class="hljs-property">fn</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">detach</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title class_">Oe</span>(<span class="hljs-variable language_">this</span>,e,!<span class="hljs-number">0</span>)&#125;,<span class="hljs-attr">remove</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title class_">Oe</span>(<span class="hljs-variable language_">this</span>,e)&#125;,<span class="hljs-attr">text</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> $(<span class="hljs-variable language_">this</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===e?S.<span class="hljs-title function_">text</span>(<span class="hljs-variable language_">this</span>):<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">empty</span>().<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-number">1</span>!==<span class="hljs-variable language_">this</span>.<span class="hljs-property">nodeType</span>&amp;&amp;<span class="hljs-number">11</span>!==<span class="hljs-variable language_">this</span>.<span class="hljs-property">nodeType</span>&amp;&amp;<span class="hljs-number">9</span>!==<span class="hljs-variable language_">this</span>.<span class="hljs-property">nodeType</span>||(<span class="hljs-variable language_">this</span>.<span class="hljs-property">textContent</span>=e)&#125;)&#125;,<span class="hljs-literal">null</span>,e,<span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>)&#125;,<span class="hljs-attr">append</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title class_">He</span>(<span class="hljs-variable language_">this</span>,<span class="hljs-variable language_">arguments</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-number">1</span>!==<span class="hljs-variable language_">this</span>.<span class="hljs-property">nodeType</span>&amp;&amp;<span class="hljs-number">11</span>!==<span class="hljs-variable language_">this</span>.<span class="hljs-property">nodeType</span>&amp;&amp;<span class="hljs-number">9</span>!==<span class="hljs-variable language_">this</span>.<span class="hljs-property">nodeType</span>||<span class="hljs-title function_">je</span>(<span class="hljs-variable language_">this</span>,e).<span class="hljs-title function_">appendChild</span>(e)&#125;)&#125;,<span class="hljs-attr">prepend</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title class_">He</span>(<span class="hljs-variable language_">this</span>,<span class="hljs-variable language_">arguments</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">1</span>===<span class="hljs-variable language_">this</span>.<span class="hljs-property">nodeType</span>||<span class="hljs-number">11</span>===<span class="hljs-variable language_">this</span>.<span class="hljs-property">nodeType</span>||<span class="hljs-number">9</span>===<span class="hljs-variable language_">this</span>.<span class="hljs-property">nodeType</span>)&#123;<span class="hljs-keyword">var</span> t=<span class="hljs-title function_">je</span>(<span class="hljs-variable language_">this</span>,e);t.<span class="hljs-title function_">insertBefore</span>(e,t.<span class="hljs-property">firstChild</span>)&#125;&#125;)&#125;,<span class="hljs-attr">before</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title class_">He</span>(<span class="hljs-variable language_">this</span>,<span class="hljs-variable language_">arguments</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-variable language_">this</span>.<span class="hljs-property">parentNode</span>&amp;&amp;<span class="hljs-variable language_">this</span>.<span class="hljs-property">parentNode</span>.<span class="hljs-title function_">insertBefore</span>(e,<span class="hljs-variable language_">this</span>)&#125;)&#125;,<span class="hljs-attr">after</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title class_">He</span>(<span class="hljs-variable language_">this</span>,<span class="hljs-variable language_">arguments</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-variable language_">this</span>.<span class="hljs-property">parentNode</span>&amp;&amp;<span class="hljs-variable language_">this</span>.<span class="hljs-property">parentNode</span>.<span class="hljs-title function_">insertBefore</span>(e,<span class="hljs-variable language_">this</span>.<span class="hljs-property">nextSibling</span>)&#125;)&#125;,<span class="hljs-attr">empty</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> e,t=<span class="hljs-number">0</span>;<span class="hljs-literal">null</span>!=(e=<span class="hljs-variable language_">this</span>[t]);t++)<span class="hljs-number">1</span>===e.<span class="hljs-property">nodeType</span>&amp;&amp;(S.<span class="hljs-title function_">cleanData</span>(<span class="hljs-title function_">ve</span>(e,!<span class="hljs-number">1</span>)),e.<span class="hljs-property">textContent</span>=<span class="hljs-string">&quot;&quot;</span>);<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>&#125;,<span class="hljs-attr">clone</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span> e=<span class="hljs-literal">null</span>!=e&amp;&amp;e,t=<span class="hljs-literal">null</span>==t?<span class="hljs-attr">e</span>:t,<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">map</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> S.<span class="hljs-title function_">clone</span>(<span class="hljs-variable language_">this</span>,e,t)&#125;)&#125;,<span class="hljs-attr">html</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> $(<span class="hljs-variable language_">this</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=<span class="hljs-variable language_">this</span>[<span class="hljs-number">0</span>]||&#123;&#125;,n=<span class="hljs-number">0</span>,r=<span class="hljs-variable language_">this</span>.<span class="hljs-property">length</span>;<span class="hljs-keyword">if</span>(<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===e&amp;&amp;<span class="hljs-number">1</span>===t.<span class="hljs-property">nodeType</span>)<span class="hljs-keyword">return</span> t.<span class="hljs-property">innerHTML</span>;<span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;string&quot;</span>==<span class="hljs-keyword">typeof</span> e&amp;&amp;!ke.<span class="hljs-title function_">test</span>(e)&amp;&amp;!ge[(de.<span class="hljs-title function_">exec</span>(e)||[<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>])[<span class="hljs-number">1</span>].<span class="hljs-title function_">toLowerCase</span>()])&#123;e=S.<span class="hljs-title function_">htmlPrefilter</span>(e);<span class="hljs-keyword">try</span>&#123;<span class="hljs-keyword">for</span>(;n&lt;r;n++)<span class="hljs-number">1</span>===(t=<span class="hljs-variable language_">this</span>[n]||&#123;&#125;).<span class="hljs-property">nodeType</span>&amp;&amp;(S.<span class="hljs-title function_">cleanData</span>(<span class="hljs-title function_">ve</span>(t,!<span class="hljs-number">1</span>)),t.<span class="hljs-property">innerHTML</span>=e);t=<span class="hljs-number">0</span>&#125;<span class="hljs-keyword">catch</span>(e)&#123;&#125;&#125;t&amp;&amp;<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">empty</span>().<span class="hljs-title function_">append</span>(e)&#125;,<span class="hljs-literal">null</span>,e,<span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>)&#125;,<span class="hljs-attr">replaceWith</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> n=[];<span class="hljs-keyword">return</span> <span class="hljs-title class_">He</span>(<span class="hljs-variable language_">this</span>,<span class="hljs-variable language_">arguments</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=<span class="hljs-variable language_">this</span>.<span class="hljs-property">parentNode</span>;S.<span class="hljs-title function_">inArray</span>(<span class="hljs-variable language_">this</span>,n)&lt;<span class="hljs-number">0</span>&amp;&amp;(S.<span class="hljs-title function_">cleanData</span>(<span class="hljs-title function_">ve</span>(<span class="hljs-variable language_">this</span>)),t&amp;&amp;t.<span class="hljs-title function_">replaceChild</span>(e,<span class="hljs-variable language_">this</span>))&#125;,n)&#125;&#125;),S.<span class="hljs-title function_">each</span>(&#123;<span class="hljs-attr">appendTo</span>:<span class="hljs-string">&quot;append&quot;</span>,<span class="hljs-attr">prependTo</span>:<span class="hljs-string">&quot;prepend&quot;</span>,<span class="hljs-attr">insertBefore</span>:<span class="hljs-string">&quot;before&quot;</span>,<span class="hljs-attr">insertAfter</span>:<span class="hljs-string">&quot;after&quot;</span>,<span class="hljs-attr">replaceAll</span>:<span class="hljs-string">&quot;replaceWith&quot;</span>&#125;,<span class="hljs-keyword">function</span>(<span class="hljs-params">e,a</span>)&#123;S.<span class="hljs-property">fn</span>[e]=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> t,n=[],r=<span class="hljs-title function_">S</span>(e),i=r.<span class="hljs-property">length</span>-<span class="hljs-number">1</span>,o=<span class="hljs-number">0</span>;o&lt;=i;o++)t=o===i?<span class="hljs-attr">this</span>:<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clone</span>(!<span class="hljs-number">0</span>),<span class="hljs-title function_">S</span>(r[o])[a](t),u.<span class="hljs-title function_">apply</span>(n,t.<span class="hljs-title function_">get</span>());<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">pushStack</span>(n)&#125;&#125;);<span class="hljs-keyword">var</span> <span class="hljs-title class_">Pe</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&quot;^(&quot;</span>+ee+<span class="hljs-string">&quot;)(?!px)[a-z%]+$&quot;</span>,<span class="hljs-string">&quot;i&quot;</span>),<span class="hljs-title class_">Re</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=e.<span class="hljs-property">ownerDocument</span>.<span class="hljs-property">defaultView</span>;<span class="hljs-keyword">return</span> t&amp;&amp;t.<span class="hljs-property">opener</span>||(t=C),t.<span class="hljs-title function_">getComputedStyle</span>(e)&#125;,<span class="hljs-title class_">Me</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r,i,o=&#123;&#125;;<span class="hljs-keyword">for</span>(i <span class="hljs-keyword">in</span> t)o[i]=e.<span class="hljs-property">style</span>[i],e.<span class="hljs-property">style</span>[i]=t[i];<span class="hljs-keyword">for</span>(i <span class="hljs-keyword">in</span> r=n.<span class="hljs-title function_">call</span>(e),t)e.<span class="hljs-property">style</span>[i]=o[i];<span class="hljs-keyword">return</span> r&#125;,<span class="hljs-title class_">Ie</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(ne.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;|&quot;</span>),<span class="hljs-string">&quot;i&quot;</span>);<span class="hljs-keyword">function</span> <span class="hljs-title function_">We</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r,i,o,a,s=e.<span class="hljs-property">style</span>;<span class="hljs-keyword">return</span>(n=n||<span class="hljs-title class_">Re</span>(e))&amp;&amp;(<span class="hljs-string">&quot;&quot;</span>!==(a=n.<span class="hljs-title function_">getPropertyValue</span>(t)||n[t])||<span class="hljs-title function_">ie</span>(e)||(a=S.<span class="hljs-title function_">style</span>(e,t)),!y.<span class="hljs-title function_">pixelBoxStyles</span>()&amp;&amp;<span class="hljs-title class_">Pe</span>.<span class="hljs-title function_">test</span>(a)&amp;&amp;<span class="hljs-title class_">Ie</span>.<span class="hljs-title function_">test</span>(t)&amp;&amp;(r=s.<span class="hljs-property">width</span>,i=s.<span class="hljs-property">minWidth</span>,o=s.<span class="hljs-property">maxWidth</span>,s.<span class="hljs-property">minWidth</span>=s.<span class="hljs-property">maxWidth</span>=s.<span class="hljs-property">width</span>=a,a=n.<span class="hljs-property">width</span>,s.<span class="hljs-property">width</span>=r,s.<span class="hljs-property">minWidth</span>=i,s.<span class="hljs-property">maxWidth</span>=o)),<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==a?a+<span class="hljs-string">&quot;&quot;</span>:a&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">Fe</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">get</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">if</span>(!<span class="hljs-title function_">e</span>())<span class="hljs-keyword">return</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">get</span>=t).<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>,<span class="hljs-variable language_">arguments</span>);<span class="hljs-keyword">delete</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">get</span>&#125;&#125;&#125;!<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">function</span> <span class="hljs-title function_">e</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">if</span>(l)&#123;u.<span class="hljs-property">style</span>.<span class="hljs-property">cssText</span>=<span class="hljs-string">&quot;position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0&quot;</span>,l.<span class="hljs-property">style</span>.<span class="hljs-property">cssText</span>=<span class="hljs-string">&quot;position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%&quot;</span>,re.<span class="hljs-title function_">appendChild</span>(u).<span class="hljs-title function_">appendChild</span>(l);<span class="hljs-keyword">var</span> e=C.<span class="hljs-title function_">getComputedStyle</span>(l);n=<span class="hljs-string">&quot;1%&quot;</span>!==e.<span class="hljs-property">top</span>,s=<span class="hljs-number">12</span>===<span class="hljs-title function_">t</span>(e.<span class="hljs-property">marginLeft</span>),l.<span class="hljs-property">style</span>.<span class="hljs-property">right</span>=<span class="hljs-string">&quot;60%&quot;</span>,o=<span class="hljs-number">36</span>===<span class="hljs-title function_">t</span>(e.<span class="hljs-property">right</span>),r=<span class="hljs-number">36</span>===<span class="hljs-title function_">t</span>(e.<span class="hljs-property">width</span>),l.<span class="hljs-property">style</span>.<span class="hljs-property">position</span>=<span class="hljs-string">&quot;absolute&quot;</span>,i=<span class="hljs-number">12</span>===<span class="hljs-title function_">t</span>(l.<span class="hljs-property">offsetWidth</span>/<span class="hljs-number">3</span>),re.<span class="hljs-title function_">removeChild</span>(u),l=<span class="hljs-literal">null</span>&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">t</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(<span class="hljs-built_in">parseFloat</span>(e))&#125;<span class="hljs-keyword">var</span> n,r,i,o,a,s,u=E.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;div&quot;</span>),l=E.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;div&quot;</span>);l.<span class="hljs-property">style</span>&amp;&amp;(l.<span class="hljs-property">style</span>.<span class="hljs-property">backgroundClip</span>=<span class="hljs-string">&quot;content-box&quot;</span>,l.<span class="hljs-title function_">cloneNode</span>(!<span class="hljs-number">0</span>).<span class="hljs-property">style</span>.<span class="hljs-property">backgroundClip</span>=<span class="hljs-string">&quot;&quot;</span>,y.<span class="hljs-property">clearCloneStyle</span>=<span class="hljs-string">&quot;content-box&quot;</span>===l.<span class="hljs-property">style</span>.<span class="hljs-property">backgroundClip</span>,S.<span class="hljs-title function_">extend</span>(y,&#123;<span class="hljs-attr">boxSizingReliable</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">e</span>(),r&#125;,<span class="hljs-attr">pixelBoxStyles</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">e</span>(),o&#125;,<span class="hljs-attr">pixelPosition</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">e</span>(),n&#125;,<span class="hljs-attr">reliableMarginLeft</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">e</span>(),s&#125;,<span class="hljs-attr">scrollboxSize</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">e</span>(),i&#125;,<span class="hljs-attr">reliableTrDimensions</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> e,t,n,r;<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>==a&amp;&amp;(e=E.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;table&quot;</span>),t=E.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;tr&quot;</span>),n=E.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;div&quot;</span>),e.<span class="hljs-property">style</span>.<span class="hljs-property">cssText</span>=<span class="hljs-string">&quot;position:absolute;left:-11111px;border-collapse:separate&quot;</span>,t.<span class="hljs-property">style</span>.<span class="hljs-property">cssText</span>=<span class="hljs-string">&quot;border:1px solid&quot;</span>,t.<span class="hljs-property">style</span>.<span class="hljs-property">height</span>=<span class="hljs-string">&quot;1px&quot;</span>,n.<span class="hljs-property">style</span>.<span class="hljs-property">height</span>=<span class="hljs-string">&quot;9px&quot;</span>,n.<span class="hljs-property">style</span>.<span class="hljs-property">display</span>=<span class="hljs-string">&quot;block&quot;</span>,re.<span class="hljs-title function_">appendChild</span>(e).<span class="hljs-title function_">appendChild</span>(t).<span class="hljs-title function_">appendChild</span>(n),r=C.<span class="hljs-title function_">getComputedStyle</span>(t),a=<span class="hljs-built_in">parseInt</span>(r.<span class="hljs-property">height</span>,<span class="hljs-number">10</span>)+<span class="hljs-built_in">parseInt</span>(r.<span class="hljs-property">borderTopWidth</span>,<span class="hljs-number">10</span>)+<span class="hljs-built_in">parseInt</span>(r.<span class="hljs-property">borderBottomWidth</span>,<span class="hljs-number">10</span>)===t.<span class="hljs-property">offsetHeight</span>,re.<span class="hljs-title function_">removeChild</span>(e)),a&#125;&#125;))&#125;();<span class="hljs-keyword">var</span> <span class="hljs-title class_">Be</span>=[<span class="hljs-string">&quot;Webkit&quot;</span>,<span class="hljs-string">&quot;Moz&quot;</span>,<span class="hljs-string">&quot;ms&quot;</span>],$e=E.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;div&quot;</span>).<span class="hljs-property">style</span>,_e=&#123;&#125;;<span class="hljs-keyword">function</span> <span class="hljs-title function_">ze</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=S.<span class="hljs-property">cssProps</span>[e]||_e[e];<span class="hljs-keyword">return</span> t||(e <span class="hljs-keyword">in</span> $e?<span class="hljs-attr">e</span>:_e[e]=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=e[<span class="hljs-number">0</span>].<span class="hljs-title function_">toUpperCase</span>()+e.<span class="hljs-title function_">slice</span>(<span class="hljs-number">1</span>),n=<span class="hljs-title class_">Be</span>.<span class="hljs-property">length</span>;<span class="hljs-keyword">while</span>(n--)<span class="hljs-keyword">if</span>((e=<span class="hljs-title class_">Be</span>[n]+t)<span class="hljs-keyword">in</span> $e)<span class="hljs-keyword">return</span> e&#125;(e)||e)&#125;<span class="hljs-keyword">var</span> <span class="hljs-title class_">Ue</span>=<span class="hljs-regexp">/^(none|table(?!-c[ea]).+)/</span>,<span class="hljs-title class_">Xe</span>=<span class="hljs-regexp">/^--/</span>,<span class="hljs-title class_">Ve</span>=&#123;<span class="hljs-attr">position</span>:<span class="hljs-string">&quot;absolute&quot;</span>,<span class="hljs-attr">visibility</span>:<span class="hljs-string">&quot;hidden&quot;</span>,<span class="hljs-attr">display</span>:<span class="hljs-string">&quot;block&quot;</span>&#125;,<span class="hljs-title class_">Ge</span>=&#123;<span class="hljs-attr">letterSpacing</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-attr">fontWeight</span>:<span class="hljs-string">&quot;400&quot;</span>&#125;;<span class="hljs-keyword">function</span> <span class="hljs-title function_">Ye</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r=te.<span class="hljs-title function_">exec</span>(t);<span class="hljs-keyword">return</span> r?<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(<span class="hljs-number">0</span>,r[<span class="hljs-number">2</span>]-(n||<span class="hljs-number">0</span>))+(r[<span class="hljs-number">3</span>]||<span class="hljs-string">&quot;px&quot;</span>):t&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">Qe</span>(<span class="hljs-params">e,t,n,r,i,o</span>)&#123;<span class="hljs-keyword">var</span> a=<span class="hljs-string">&quot;width&quot;</span>===t?<span class="hljs-number">1</span>:<span class="hljs-number">0</span>,s=<span class="hljs-number">0</span>,u=<span class="hljs-number">0</span>;<span class="hljs-keyword">if</span>(n===(r?<span class="hljs-string">&quot;border&quot;</span>:<span class="hljs-string">&quot;content&quot;</span>))<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(;a&lt;<span class="hljs-number">4</span>;a+=<span class="hljs-number">2</span>)<span class="hljs-string">&quot;margin&quot;</span>===n&amp;&amp;(u+=S.<span class="hljs-title function_">css</span>(e,n+ne[a],!<span class="hljs-number">0</span>,i)),r?(<span class="hljs-string">&quot;content&quot;</span>===n&amp;&amp;(u-=S.<span class="hljs-title function_">css</span>(e,<span class="hljs-string">&quot;padding&quot;</span>+ne[a],!<span class="hljs-number">0</span>,i)),<span class="hljs-string">&quot;margin&quot;</span>!==n&amp;&amp;(u-=S.<span class="hljs-title function_">css</span>(e,<span class="hljs-string">&quot;border&quot;</span>+ne[a]+<span class="hljs-string">&quot;Width&quot;</span>,!<span class="hljs-number">0</span>,i))):(u+=S.<span class="hljs-title function_">css</span>(e,<span class="hljs-string">&quot;padding&quot;</span>+ne[a],!<span class="hljs-number">0</span>,i),<span class="hljs-string">&quot;padding&quot;</span>!==n?u+=S.<span class="hljs-title function_">css</span>(e,<span class="hljs-string">&quot;border&quot;</span>+ne[a]+<span class="hljs-string">&quot;Width&quot;</span>,!<span class="hljs-number">0</span>,i):s+=S.<span class="hljs-title function_">css</span>(e,<span class="hljs-string">&quot;border&quot;</span>+ne[a]+<span class="hljs-string">&quot;Width&quot;</span>,!<span class="hljs-number">0</span>,i));<span class="hljs-keyword">return</span>!r&amp;&amp;<span class="hljs-number">0</span>&lt;=o&amp;&amp;(u+=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(<span class="hljs-number">0</span>,<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(e[<span class="hljs-string">&quot;offset&quot;</span>+t[<span class="hljs-number">0</span>].<span class="hljs-title function_">toUpperCase</span>()+t.<span class="hljs-title function_">slice</span>(<span class="hljs-number">1</span>)]-o-u-s-<span class="hljs-number">.5</span>))||<span class="hljs-number">0</span>),u&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">Je</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r=<span class="hljs-title class_">Re</span>(e),i=(!y.<span class="hljs-title function_">boxSizingReliable</span>()||n)&amp;&amp;<span class="hljs-string">&quot;border-box&quot;</span>===S.<span class="hljs-title function_">css</span>(e,<span class="hljs-string">&quot;boxSizing&quot;</span>,!<span class="hljs-number">1</span>,r),o=i,a=<span class="hljs-title class_">We</span>(e,t,r),s=<span class="hljs-string">&quot;offset&quot;</span>+t[<span class="hljs-number">0</span>].<span class="hljs-title function_">toUpperCase</span>()+t.<span class="hljs-title function_">slice</span>(<span class="hljs-number">1</span>);<span class="hljs-keyword">if</span>(<span class="hljs-title class_">Pe</span>.<span class="hljs-title function_">test</span>(a))&#123;<span class="hljs-keyword">if</span>(!n)<span class="hljs-keyword">return</span> a;a=<span class="hljs-string">&quot;auto&quot;</span>&#125;<span class="hljs-keyword">return</span>(!y.<span class="hljs-title function_">boxSizingReliable</span>()&amp;&amp;i||!y.<span class="hljs-title function_">reliableTrDimensions</span>()&amp;&amp;<span class="hljs-title function_">A</span>(e,<span class="hljs-string">&quot;tr&quot;</span>)||<span class="hljs-string">&quot;auto&quot;</span>===a||!<span class="hljs-built_in">parseFloat</span>(a)&amp;&amp;<span class="hljs-string">&quot;inline&quot;</span>===S.<span class="hljs-title function_">css</span>(e,<span class="hljs-string">&quot;display&quot;</span>,!<span class="hljs-number">1</span>,r))&amp;&amp;e.<span class="hljs-title function_">getClientRects</span>().<span class="hljs-property">length</span>&amp;&amp;(i=<span class="hljs-string">&quot;border-box&quot;</span>===S.<span class="hljs-title function_">css</span>(e,<span class="hljs-string">&quot;boxSizing&quot;</span>,!<span class="hljs-number">1</span>,r),(o=s <span class="hljs-keyword">in</span> e)&amp;&amp;(a=e[s])),(a=<span class="hljs-built_in">parseFloat</span>(a)||<span class="hljs-number">0</span>)+<span class="hljs-title class_">Qe</span>(e,t,n||(i?<span class="hljs-string">&quot;border&quot;</span>:<span class="hljs-string">&quot;content&quot;</span>),o,r,a)+<span class="hljs-string">&quot;px&quot;</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">Ke</span>(<span class="hljs-params">e,t,n,r,i</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Ke</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">init</span>(e,t,n,r,i)&#125;S.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">cssHooks</span>:&#123;<span class="hljs-attr">opacity</span>:&#123;<span class="hljs-attr">get</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">if</span>(t)&#123;<span class="hljs-keyword">var</span> n=<span class="hljs-title class_">We</span>(e,<span class="hljs-string">&quot;opacity&quot;</span>);<span class="hljs-keyword">return</span><span class="hljs-string">&quot;&quot;</span>===n?<span class="hljs-string">&quot;1&quot;</span>:n&#125;&#125;&#125;&#125;,<span class="hljs-attr">cssNumber</span>:&#123;<span class="hljs-attr">animationIterationCount</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">columnCount</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">fillOpacity</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">flexGrow</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">flexShrink</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">fontWeight</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">gridArea</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">gridColumn</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">gridColumnEnd</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">gridColumnStart</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">gridRow</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">gridRowEnd</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">gridRowStart</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">lineHeight</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">opacity</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">order</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">orphans</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">widows</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">zIndex</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">zoom</span>:!<span class="hljs-number">0</span>&#125;,<span class="hljs-attr">cssProps</span>:&#123;&#125;,<span class="hljs-attr">style</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n,r</span>)&#123;<span class="hljs-keyword">if</span>(e&amp;&amp;<span class="hljs-number">3</span>!==e.<span class="hljs-property">nodeType</span>&amp;&amp;<span class="hljs-number">8</span>!==e.<span class="hljs-property">nodeType</span>&amp;&amp;e.<span class="hljs-property">style</span>)&#123;<span class="hljs-keyword">var</span> i,o,a,s=<span class="hljs-title function_">X</span>(t),u=<span class="hljs-title class_">Xe</span>.<span class="hljs-title function_">test</span>(t),l=e.<span class="hljs-property">style</span>;<span class="hljs-keyword">if</span>(u||(t=<span class="hljs-title function_">ze</span>(s)),a=S.<span class="hljs-property">cssHooks</span>[t]||S.<span class="hljs-property">cssHooks</span>[s],<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===n)<span class="hljs-keyword">return</span> a&amp;&amp;<span class="hljs-string">&quot;get&quot;</span><span class="hljs-keyword">in</span> a&amp;&amp;<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==(i=a.<span class="hljs-title function_">get</span>(e,!<span class="hljs-number">1</span>,r))?<span class="hljs-attr">i</span>:l[t];<span class="hljs-string">&quot;string&quot;</span>===(o=<span class="hljs-keyword">typeof</span> n)&amp;&amp;(i=te.<span class="hljs-title function_">exec</span>(n))&amp;&amp;i[<span class="hljs-number">1</span>]&amp;&amp;(n=<span class="hljs-title function_">se</span>(e,t,i),o=<span class="hljs-string">&quot;number&quot;</span>),<span class="hljs-literal">null</span>!=n&amp;&amp;n==n&amp;&amp;(<span class="hljs-string">&quot;number&quot;</span>!==o||u||(n+=i&amp;&amp;i[<span class="hljs-number">3</span>]||(S.<span class="hljs-property">cssNumber</span>[s]?<span class="hljs-string">&quot;&quot;</span>:<span class="hljs-string">&quot;px&quot;</span>)),y.<span class="hljs-property">clearCloneStyle</span>||<span class="hljs-string">&quot;&quot;</span>!==n||<span class="hljs-number">0</span>!==t.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;background&quot;</span>)||(l[t]=<span class="hljs-string">&quot;inherit&quot;</span>),a&amp;&amp;<span class="hljs-string">&quot;set&quot;</span><span class="hljs-keyword">in</span> a&amp;&amp;<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===(n=a.<span class="hljs-title function_">set</span>(e,n,r))||(u?l.<span class="hljs-title function_">setProperty</span>(t,n):l[t]=n))&#125;&#125;,<span class="hljs-attr">css</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n,r</span>)&#123;<span class="hljs-keyword">var</span> i,o,a,s=<span class="hljs-title function_">X</span>(t);<span class="hljs-keyword">return</span> <span class="hljs-title class_">Xe</span>.<span class="hljs-title function_">test</span>(t)||(t=<span class="hljs-title function_">ze</span>(s)),(a=S.<span class="hljs-property">cssHooks</span>[t]||S.<span class="hljs-property">cssHooks</span>[s])&amp;&amp;<span class="hljs-string">&quot;get&quot;</span><span class="hljs-keyword">in</span> a&amp;&amp;(i=a.<span class="hljs-title function_">get</span>(e,!<span class="hljs-number">0</span>,n)),<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===i&amp;&amp;(i=<span class="hljs-title class_">We</span>(e,t,r)),<span class="hljs-string">&quot;normal&quot;</span>===i&amp;&amp;t <span class="hljs-keyword">in</span> <span class="hljs-title class_">Ge</span>&amp;&amp;(i=<span class="hljs-title class_">Ge</span>[t]),<span class="hljs-string">&quot;&quot;</span>===n||n?(o=<span class="hljs-built_in">parseFloat</span>(i),!<span class="hljs-number">0</span>===n||<span class="hljs-built_in">isFinite</span>(o)?o||<span class="hljs-number">0</span>:i):i&#125;&#125;),S.<span class="hljs-title function_">each</span>([<span class="hljs-string">&quot;height&quot;</span>,<span class="hljs-string">&quot;width&quot;</span>],<span class="hljs-keyword">function</span>(<span class="hljs-params">e,u</span>)&#123;S.<span class="hljs-property">cssHooks</span>[u]=&#123;<span class="hljs-attr">get</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">if</span>(t)<span class="hljs-keyword">return</span>!<span class="hljs-title class_">Ue</span>.<span class="hljs-title function_">test</span>(S.<span class="hljs-title function_">css</span>(e,<span class="hljs-string">&quot;display&quot;</span>))||e.<span class="hljs-title function_">getClientRects</span>().<span class="hljs-property">length</span>&amp;&amp;e.<span class="hljs-title function_">getBoundingClientRect</span>().<span class="hljs-property">width</span>?<span class="hljs-title class_">Je</span>(e,u,n):<span class="hljs-title class_">Me</span>(e,<span class="hljs-title class_">Ve</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title class_">Je</span>(e,u,n)&#125;)&#125;,<span class="hljs-attr">set</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r,i=<span class="hljs-title class_">Re</span>(e),o=!y.<span class="hljs-title function_">scrollboxSize</span>()&amp;&amp;<span class="hljs-string">&quot;absolute&quot;</span>===i.<span class="hljs-property">position</span>,a=(o||n)&amp;&amp;<span class="hljs-string">&quot;border-box&quot;</span>===S.<span class="hljs-title function_">css</span>(e,<span class="hljs-string">&quot;boxSizing&quot;</span>,!<span class="hljs-number">1</span>,i),s=n?<span class="hljs-title class_">Qe</span>(e,u,n,a,i):<span class="hljs-number">0</span>;<span class="hljs-keyword">return</span> a&amp;&amp;o&amp;&amp;(s-=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(e[<span class="hljs-string">&quot;offset&quot;</span>+u[<span class="hljs-number">0</span>].<span class="hljs-title function_">toUpperCase</span>()+u.<span class="hljs-title function_">slice</span>(<span class="hljs-number">1</span>)]-<span class="hljs-built_in">parseFloat</span>(i[u])-<span class="hljs-title class_">Qe</span>(e,u,<span class="hljs-string">&quot;border&quot;</span>,!<span class="hljs-number">1</span>,i)-<span class="hljs-number">.5</span>)),s&amp;&amp;(r=te.<span class="hljs-title function_">exec</span>(t))&amp;&amp;<span class="hljs-string">&quot;px&quot;</span>!==(r[<span class="hljs-number">3</span>]||<span class="hljs-string">&quot;px&quot;</span>)&amp;&amp;(e.<span class="hljs-property">style</span>[u]=t,t=S.<span class="hljs-title function_">css</span>(e,u)),<span class="hljs-title class_">Ye</span>(<span class="hljs-number">0</span>,t,s)&#125;&#125;&#125;),S.<span class="hljs-property">cssHooks</span>.<span class="hljs-property">marginLeft</span>=<span class="hljs-title class_">Fe</span>(y.<span class="hljs-property">reliableMarginLeft</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">if</span>(t)<span class="hljs-keyword">return</span>(<span class="hljs-built_in">parseFloat</span>(<span class="hljs-title class_">We</span>(e,<span class="hljs-string">&quot;marginLeft&quot;</span>))||e.<span class="hljs-title function_">getBoundingClientRect</span>().<span class="hljs-property">left</span>-<span class="hljs-title class_">Me</span>(e,&#123;<span class="hljs-attr">marginLeft</span>:<span class="hljs-number">0</span>&#125;,<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> e.<span class="hljs-title function_">getBoundingClientRect</span>().<span class="hljs-property">left</span>&#125;))+<span class="hljs-string">&quot;px&quot;</span>&#125;),S.<span class="hljs-title function_">each</span>(&#123;<span class="hljs-attr">margin</span>:<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-attr">padding</span>:<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-attr">border</span>:<span class="hljs-string">&quot;Width&quot;</span>&#125;,<span class="hljs-keyword">function</span>(<span class="hljs-params">i,o</span>)&#123;S.<span class="hljs-property">cssHooks</span>[i+o]=&#123;<span class="hljs-attr">expand</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> t=<span class="hljs-number">0</span>,n=&#123;&#125;,r=<span class="hljs-string">&quot;string&quot;</span>==<span class="hljs-keyword">typeof</span> e?e.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot; &quot;</span>):[e];t&lt;<span class="hljs-number">4</span>;t++)n[i+ne[t]+o]=r[t]||r[t-<span class="hljs-number">2</span>]||r[<span class="hljs-number">0</span>];<span class="hljs-keyword">return</span> n&#125;&#125;,<span class="hljs-string">&quot;margin&quot;</span>!==i&amp;&amp;(S.<span class="hljs-property">cssHooks</span>[i+o].<span class="hljs-property">set</span>=<span class="hljs-title class_">Ye</span>)&#125;),S.<span class="hljs-property">fn</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">css</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span> $(<span class="hljs-variable language_">this</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r,i,o=&#123;&#125;,a=<span class="hljs-number">0</span>;<span class="hljs-keyword">if</span>(<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(t))&#123;<span class="hljs-keyword">for</span>(r=<span class="hljs-title class_">Re</span>(e),i=t.<span class="hljs-property">length</span>;a&lt;i;a++)o[t[a]]=S.<span class="hljs-title function_">css</span>(e,t[a],!<span class="hljs-number">1</span>,r);<span class="hljs-keyword">return</span> o&#125;<span class="hljs-keyword">return</span> <span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==n?S.<span class="hljs-title function_">style</span>(e,t,n):S.<span class="hljs-title function_">css</span>(e,t)&#125;,e,t,<span class="hljs-number">1</span>&lt;<span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>)&#125;&#125;),((S.<span class="hljs-property">Tween</span>=<span class="hljs-title class_">Ke</span>).<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>=&#123;<span class="hljs-attr">constructor</span>:<span class="hljs-title class_">Ke</span>,<span class="hljs-attr">init</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n,r,i,o</span>)&#123;<span class="hljs-variable language_">this</span>.<span class="hljs-property">elem</span>=e,<span class="hljs-variable language_">this</span>.<span class="hljs-property">prop</span>=n,<span class="hljs-variable language_">this</span>.<span class="hljs-property">easing</span>=i||S.<span class="hljs-property">easing</span>.<span class="hljs-property">_default</span>,<span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span>=t,<span class="hljs-variable language_">this</span>.<span class="hljs-property">start</span>=<span class="hljs-variable language_">this</span>.<span class="hljs-property">now</span>=<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">cur</span>(),<span class="hljs-variable language_">this</span>.<span class="hljs-property">end</span>=r,<span class="hljs-variable language_">this</span>.<span class="hljs-property">unit</span>=o||(S.<span class="hljs-property">cssNumber</span>[n]?<span class="hljs-string">&quot;&quot;</span>:<span class="hljs-string">&quot;px&quot;</span>)&#125;,<span class="hljs-attr">cur</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> e=<span class="hljs-title class_">Ke</span>.<span class="hljs-property">propHooks</span>[<span class="hljs-variable language_">this</span>.<span class="hljs-property">prop</span>];<span class="hljs-keyword">return</span> e&amp;&amp;e.<span class="hljs-property">get</span>?e.<span class="hljs-title function_">get</span>(<span class="hljs-variable language_">this</span>):<span class="hljs-title class_">Ke</span>.<span class="hljs-property">propHooks</span>.<span class="hljs-property">_default</span>.<span class="hljs-title function_">get</span>(<span class="hljs-variable language_">this</span>)&#125;,<span class="hljs-attr">run</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t,n=<span class="hljs-title class_">Ke</span>.<span class="hljs-property">propHooks</span>[<span class="hljs-variable language_">this</span>.<span class="hljs-property">prop</span>];<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span>.<span class="hljs-property">duration</span>?<span class="hljs-variable language_">this</span>.<span class="hljs-property">pos</span>=t=S.<span class="hljs-property">easing</span>[<span class="hljs-variable language_">this</span>.<span class="hljs-property">easing</span>](e,<span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span>.<span class="hljs-property">duration</span>*e,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span>.<span class="hljs-property">duration</span>):<span class="hljs-variable language_">this</span>.<span class="hljs-property">pos</span>=t=e,<span class="hljs-variable language_">this</span>.<span class="hljs-property">now</span>=(<span class="hljs-variable language_">this</span>.<span class="hljs-property">end</span>-<span class="hljs-variable language_">this</span>.<span class="hljs-property">start</span>)*t+<span class="hljs-variable language_">this</span>.<span class="hljs-property">start</span>,<span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span>.<span class="hljs-property">step</span>&amp;&amp;<span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span>.<span class="hljs-property">step</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">elem</span>,<span class="hljs-variable language_">this</span>.<span class="hljs-property">now</span>,<span class="hljs-variable language_">this</span>),n&amp;&amp;n.<span class="hljs-property">set</span>?n.<span class="hljs-title function_">set</span>(<span class="hljs-variable language_">this</span>):<span class="hljs-title class_">Ke</span>.<span class="hljs-property">propHooks</span>.<span class="hljs-property">_default</span>.<span class="hljs-title function_">set</span>(<span class="hljs-variable language_">this</span>),<span class="hljs-variable language_">this</span>&#125;&#125;).<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>=<span class="hljs-title class_">Ke</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>,(<span class="hljs-title class_">Ke</span>.<span class="hljs-property">propHooks</span>=&#123;<span class="hljs-attr">_default</span>:&#123;<span class="hljs-attr">get</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t;<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>!==e.<span class="hljs-property">elem</span>.<span class="hljs-property">nodeType</span>||<span class="hljs-literal">null</span>!=e.<span class="hljs-property">elem</span>[e.<span class="hljs-property">prop</span>]&amp;&amp;<span class="hljs-literal">null</span>==e.<span class="hljs-property">elem</span>.<span class="hljs-property">style</span>[e.<span class="hljs-property">prop</span>]?e.<span class="hljs-property">elem</span>[e.<span class="hljs-property">prop</span>]:(t=S.<span class="hljs-title function_">css</span>(e.<span class="hljs-property">elem</span>,e.<span class="hljs-property">prop</span>,<span class="hljs-string">&quot;&quot;</span>))&amp;&amp;<span class="hljs-string">&quot;auto&quot;</span>!==t?<span class="hljs-attr">t</span>:<span class="hljs-number">0</span>&#125;,<span class="hljs-attr">set</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;S.<span class="hljs-property">fx</span>.<span class="hljs-property">step</span>[e.<span class="hljs-property">prop</span>]?S.<span class="hljs-property">fx</span>.<span class="hljs-property">step</span>[e.<span class="hljs-property">prop</span>](e):<span class="hljs-number">1</span>!==e.<span class="hljs-property">elem</span>.<span class="hljs-property">nodeType</span>||!S.<span class="hljs-property">cssHooks</span>[e.<span class="hljs-property">prop</span>]&amp;&amp;<span class="hljs-literal">null</span>==e.<span class="hljs-property">elem</span>.<span class="hljs-property">style</span>[<span class="hljs-title function_">ze</span>(e.<span class="hljs-property">prop</span>)]?e.<span class="hljs-property">elem</span>[e.<span class="hljs-property">prop</span>]=e.<span class="hljs-property">now</span>:S.<span class="hljs-title function_">style</span>(e.<span class="hljs-property">elem</span>,e.<span class="hljs-property">prop</span>,e.<span class="hljs-property">now</span>+e.<span class="hljs-property">unit</span>)&#125;&#125;&#125;).<span class="hljs-property">scrollTop</span>=<span class="hljs-title class_">Ke</span>.<span class="hljs-property">propHooks</span>.<span class="hljs-property">scrollLeft</span>=&#123;<span class="hljs-attr">set</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;e.<span class="hljs-property">elem</span>.<span class="hljs-property">nodeType</span>&amp;&amp;e.<span class="hljs-property">elem</span>.<span class="hljs-property">parentNode</span>&amp;&amp;(e.<span class="hljs-property">elem</span>[e.<span class="hljs-property">prop</span>]=e.<span class="hljs-property">now</span>)&#125;&#125;,S.<span class="hljs-property">easing</span>=&#123;<span class="hljs-attr">linear</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e&#125;,<span class="hljs-attr">swing</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span><span class="hljs-number">.5</span>-<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">cos</span>(e*<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>)/<span class="hljs-number">2</span>&#125;,<span class="hljs-attr">_default</span>:<span class="hljs-string">&quot;swing&quot;</span>&#125;,S.<span class="hljs-property">fx</span>=<span class="hljs-title class_">Ke</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">init</span>,S.<span class="hljs-property">fx</span>.<span class="hljs-property">step</span>=&#123;&#125;;<span class="hljs-keyword">var</span> <span class="hljs-title class_">Ze</span>,et,tt,nt,rt=<span class="hljs-regexp">/^(?:toggle|show|hide)$/</span>,it=<span class="hljs-regexp">/queueHooks$/</span>;<span class="hljs-keyword">function</span> <span class="hljs-title function_">ot</span>(<span class="hljs-params"></span>)&#123;et&amp;&amp;(!<span class="hljs-number">1</span>===E.<span class="hljs-property">hidden</span>&amp;&amp;C.<span class="hljs-property">requestAnimationFrame</span>?C.<span class="hljs-title function_">requestAnimationFrame</span>(ot):C.<span class="hljs-built_in">setTimeout</span>(ot,S.<span class="hljs-property">fx</span>.<span class="hljs-property">interval</span>),S.<span class="hljs-property">fx</span>.<span class="hljs-title function_">tick</span>())&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">at</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> C.<span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-title class_">Ze</span>=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>&#125;),<span class="hljs-title class_">Ze</span>=<span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>()&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">st</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n,r=<span class="hljs-number">0</span>,i=&#123;<span class="hljs-attr">height</span>:e&#125;;<span class="hljs-keyword">for</span>(t=t?<span class="hljs-number">1</span>:<span class="hljs-number">0</span>;r&lt;<span class="hljs-number">4</span>;r+=<span class="hljs-number">2</span>-t)i[<span class="hljs-string">&quot;margin&quot;</span>+(n=ne[r])]=i[<span class="hljs-string">&quot;padding&quot;</span>+n]=e;<span class="hljs-keyword">return</span> t&amp;&amp;(i.<span class="hljs-property">opacity</span>=i.<span class="hljs-property">width</span>=e),i&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">ut</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> r,i=(lt.<span class="hljs-property">tweeners</span>[t]||[]).<span class="hljs-title function_">concat</span>(lt.<span class="hljs-property">tweeners</span>[<span class="hljs-string">&quot;*&quot;</span>]),o=<span class="hljs-number">0</span>,a=i.<span class="hljs-property">length</span>;o&lt;a;o++)<span class="hljs-keyword">if</span>(r=i[o].<span class="hljs-title function_">call</span>(n,t,e))<span class="hljs-keyword">return</span> r&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">lt</span>(<span class="hljs-params">o,e,t</span>)&#123;<span class="hljs-keyword">var</span> n,a,r=<span class="hljs-number">0</span>,i=lt.<span class="hljs-property">prefilters</span>.<span class="hljs-property">length</span>,s=S.<span class="hljs-title class_">Deferred</span>().<span class="hljs-title function_">always</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">delete</span> u.<span class="hljs-property">elem</span>&#125;),u=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">if</span>(a)<span class="hljs-keyword">return</span>!<span class="hljs-number">1</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> e=<span class="hljs-title class_">Ze</span>||<span class="hljs-title function_">at</span>(),t=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(<span class="hljs-number">0</span>,l.<span class="hljs-property">startTime</span>+l.<span class="hljs-property">duration</span>-e),n=<span class="hljs-number">1</span>-(t/l.<span class="hljs-property">duration</span>||<span class="hljs-number">0</span>),r=<span class="hljs-number">0</span>,i=l.<span class="hljs-property">tweens</span>.<span class="hljs-property">length</span>;r&lt;i;r++)l.<span class="hljs-property">tweens</span>[r].<span class="hljs-title function_">run</span>(n);<span class="hljs-keyword">return</span> s.<span class="hljs-title function_">notifyWith</span>(o,[l,n,t]),n&lt;<span class="hljs-number">1</span>&amp;&amp;i?<span class="hljs-attr">t</span>:(i||s.<span class="hljs-title function_">notifyWith</span>(o,[l,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>]),s.<span class="hljs-title function_">resolveWith</span>(o,[l]),!<span class="hljs-number">1</span>)&#125;,l=s.<span class="hljs-title function_">promise</span>(&#123;<span class="hljs-attr">elem</span>:o,<span class="hljs-attr">props</span>:S.<span class="hljs-title function_">extend</span>(&#123;&#125;,e),<span class="hljs-attr">opts</span>:S.<span class="hljs-title function_">extend</span>(!<span class="hljs-number">0</span>,&#123;<span class="hljs-attr">specialEasing</span>:&#123;&#125;,<span class="hljs-attr">easing</span>:S.<span class="hljs-property">easing</span>.<span class="hljs-property">_default</span>&#125;,t),<span class="hljs-attr">originalProperties</span>:e,<span class="hljs-attr">originalOptions</span>:t,<span class="hljs-attr">startTime</span>:<span class="hljs-title class_">Ze</span>||<span class="hljs-title function_">at</span>(),<span class="hljs-attr">duration</span>:t.<span class="hljs-property">duration</span>,<span class="hljs-attr">tweens</span>:[],<span class="hljs-attr">createTween</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n=S.<span class="hljs-title class_">Tween</span>(o,l.<span class="hljs-property">opts</span>,e,t,l.<span class="hljs-property">opts</span>.<span class="hljs-property">specialEasing</span>[e]||l.<span class="hljs-property">opts</span>.<span class="hljs-property">easing</span>);<span class="hljs-keyword">return</span> l.<span class="hljs-property">tweens</span>.<span class="hljs-title function_">push</span>(n),n&#125;,<span class="hljs-attr">stop</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=<span class="hljs-number">0</span>,n=e?l.<span class="hljs-property">tweens</span>.<span class="hljs-property">length</span>:<span class="hljs-number">0</span>;<span class="hljs-keyword">if</span>(a)<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>;<span class="hljs-keyword">for</span>(a=!<span class="hljs-number">0</span>;t&lt;n;t++)l.<span class="hljs-property">tweens</span>[t].<span class="hljs-title function_">run</span>(<span class="hljs-number">1</span>);<span class="hljs-keyword">return</span> e?(s.<span class="hljs-title function_">notifyWith</span>(o,[l,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>]),s.<span class="hljs-title function_">resolveWith</span>(o,[l,e])):s.<span class="hljs-title function_">rejectWith</span>(o,[l,e]),<span class="hljs-variable language_">this</span>&#125;&#125;),c=l.<span class="hljs-property">props</span>;<span class="hljs-keyword">for</span>(!<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n,r,i,o,a;<span class="hljs-keyword">for</span>(n <span class="hljs-keyword">in</span> e)<span class="hljs-keyword">if</span>(i=t[r=<span class="hljs-title function_">X</span>(n)],o=e[n],<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(o)&amp;&amp;(i=o[<span class="hljs-number">1</span>],o=e[n]=o[<span class="hljs-number">0</span>]),n!==r&amp;&amp;(e[r]=o,<span class="hljs-keyword">delete</span> e[n]),(a=S.<span class="hljs-property">cssHooks</span>[r])&amp;&amp;<span class="hljs-string">&quot;expand&quot;</span><span class="hljs-keyword">in</span> a)<span class="hljs-keyword">for</span>(n <span class="hljs-keyword">in</span> o=a.<span class="hljs-title function_">expand</span>(o),<span class="hljs-keyword">delete</span> e[r],o)n <span class="hljs-keyword">in</span> e||(e[n]=o[n],t[n]=i);<span class="hljs-keyword">else</span> t[r]=i&#125;(c,l.<span class="hljs-property">opts</span>.<span class="hljs-property">specialEasing</span>);r&lt;i;r++)<span class="hljs-keyword">if</span>(n=lt.<span class="hljs-property">prefilters</span>[r].<span class="hljs-title function_">call</span>(l,o,c,l.<span class="hljs-property">opts</span>))<span class="hljs-keyword">return</span> <span class="hljs-title function_">m</span>(n.<span class="hljs-property">stop</span>)&amp;&amp;(S.<span class="hljs-title function_">_queueHooks</span>(l.<span class="hljs-property">elem</span>,l.<span class="hljs-property">opts</span>.<span class="hljs-property">queue</span>).<span class="hljs-property">stop</span>=n.<span class="hljs-property">stop</span>.<span class="hljs-title function_">bind</span>(n)),n;<span class="hljs-keyword">return</span> S.<span class="hljs-title function_">map</span>(c,ut,l),<span class="hljs-title function_">m</span>(l.<span class="hljs-property">opts</span>.<span class="hljs-property">start</span>)&amp;&amp;l.<span class="hljs-property">opts</span>.<span class="hljs-property">start</span>.<span class="hljs-title function_">call</span>(o,l),l.<span class="hljs-title function_">progress</span>(l.<span class="hljs-property">opts</span>.<span class="hljs-property">progress</span>).<span class="hljs-title function_">done</span>(l.<span class="hljs-property">opts</span>.<span class="hljs-property">done</span>,l.<span class="hljs-property">opts</span>.<span class="hljs-property">complete</span>).<span class="hljs-title function_">fail</span>(l.<span class="hljs-property">opts</span>.<span class="hljs-property">fail</span>).<span class="hljs-title function_">always</span>(l.<span class="hljs-property">opts</span>.<span class="hljs-property">always</span>),S.<span class="hljs-property">fx</span>.<span class="hljs-title function_">timer</span>(S.<span class="hljs-title function_">extend</span>(u,&#123;<span class="hljs-attr">elem</span>:o,<span class="hljs-attr">anim</span>:l,<span class="hljs-attr">queue</span>:l.<span class="hljs-property">opts</span>.<span class="hljs-property">queue</span>&#125;)),l&#125;S.<span class="hljs-property">Animation</span>=S.<span class="hljs-title function_">extend</span>(lt,&#123;<span class="hljs-attr">tweeners</span>:&#123;<span class="hljs-string">&quot;*&quot;</span>:[<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n=<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">createTween</span>(e,t);<span class="hljs-keyword">return</span> <span class="hljs-title function_">se</span>(n.<span class="hljs-property">elem</span>,e,te.<span class="hljs-title function_">exec</span>(t),n),n&#125;]&#125;,<span class="hljs-attr">tweener</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-title function_">m</span>(e)?(t=e,e=[<span class="hljs-string">&quot;*&quot;</span>]):e=e.<span class="hljs-title function_">match</span>(P);<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> n,r=<span class="hljs-number">0</span>,i=e.<span class="hljs-property">length</span>;r&lt;i;r++)n=e[r],lt.<span class="hljs-property">tweeners</span>[n]=lt.<span class="hljs-property">tweeners</span>[n]||[],lt.<span class="hljs-property">tweeners</span>[n].<span class="hljs-title function_">unshift</span>(t)&#125;,<span class="hljs-attr">prefilters</span>:[<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r,i,o,a,s,u,l,c,f=<span class="hljs-string">&quot;width&quot;</span><span class="hljs-keyword">in</span> t||<span class="hljs-string">&quot;height&quot;</span><span class="hljs-keyword">in</span> t,p=<span class="hljs-variable language_">this</span>,d=&#123;&#125;,h=e.<span class="hljs-property">style</span>,g=e.<span class="hljs-property">nodeType</span>&amp;&amp;<span class="hljs-title function_">ae</span>(e),v=Y.<span class="hljs-title function_">get</span>(e,<span class="hljs-string">&quot;fxshow&quot;</span>);<span class="hljs-keyword">for</span>(r <span class="hljs-keyword">in</span> n.<span class="hljs-property">queue</span>||(<span class="hljs-literal">null</span>==(a=S.<span class="hljs-title function_">_queueHooks</span>(e,<span class="hljs-string">&quot;fx&quot;</span>)).<span class="hljs-property">unqueued</span>&amp;&amp;(a.<span class="hljs-property">unqueued</span>=<span class="hljs-number">0</span>,s=a.<span class="hljs-property">empty</span>.<span class="hljs-property">fire</span>,a.<span class="hljs-property">empty</span>.<span class="hljs-property">fire</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;a.<span class="hljs-property">unqueued</span>||<span class="hljs-title function_">s</span>()&#125;),a.<span class="hljs-property">unqueued</span>++,p.<span class="hljs-title function_">always</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;p.<span class="hljs-title function_">always</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;a.<span class="hljs-property">unqueued</span>--,S.<span class="hljs-title function_">queue</span>(e,<span class="hljs-string">&quot;fx&quot;</span>).<span class="hljs-property">length</span>||a.<span class="hljs-property">empty</span>.<span class="hljs-title function_">fire</span>()&#125;)&#125;)),t)<span class="hljs-keyword">if</span>(i=t[r],rt.<span class="hljs-title function_">test</span>(i))&#123;<span class="hljs-keyword">if</span>(<span class="hljs-keyword">delete</span> t[r],o=o||<span class="hljs-string">&quot;toggle&quot;</span>===i,i===(g?<span class="hljs-string">&quot;hide&quot;</span>:<span class="hljs-string">&quot;show&quot;</span>))&#123;<span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;show&quot;</span>!==i||!v||<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===v[r])<span class="hljs-keyword">continue</span>;g=!<span class="hljs-number">0</span>&#125;d[r]=v&amp;&amp;v[r]||S.<span class="hljs-title function_">style</span>(e,r)&#125;<span class="hljs-keyword">if</span>((u=!S.<span class="hljs-title function_">isEmptyObject</span>(t))||!S.<span class="hljs-title function_">isEmptyObject</span>(d))<span class="hljs-keyword">for</span>(r <span class="hljs-keyword">in</span> f&amp;&amp;<span class="hljs-number">1</span>===e.<span class="hljs-property">nodeType</span>&amp;&amp;(n.<span class="hljs-property">overflow</span>=[h.<span class="hljs-property">overflow</span>,h.<span class="hljs-property">overflowX</span>,h.<span class="hljs-property">overflowY</span>],<span class="hljs-literal">null</span>==(l=v&amp;&amp;v.<span class="hljs-property">display</span>)&amp;&amp;(l=Y.<span class="hljs-title function_">get</span>(e,<span class="hljs-string">&quot;display&quot;</span>)),<span class="hljs-string">&quot;none&quot;</span>===(c=S.<span class="hljs-title function_">css</span>(e,<span class="hljs-string">&quot;display&quot;</span>))&amp;&amp;(l?c=<span class="hljs-attr">l</span>:(<span class="hljs-title function_">le</span>([e],!<span class="hljs-number">0</span>),l=e.<span class="hljs-property">style</span>.<span class="hljs-property">display</span>||l,c=S.<span class="hljs-title function_">css</span>(e,<span class="hljs-string">&quot;display&quot;</span>),<span class="hljs-title function_">le</span>([e]))),(<span class="hljs-string">&quot;inline&quot;</span>===c||<span class="hljs-string">&quot;inline-block&quot;</span>===c&amp;&amp;<span class="hljs-literal">null</span>!=l)&amp;&amp;<span class="hljs-string">&quot;none&quot;</span>===S.<span class="hljs-title function_">css</span>(e,<span class="hljs-string">&quot;float&quot;</span>)&amp;&amp;(u||(p.<span class="hljs-title function_">done</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;h.<span class="hljs-property">display</span>=l&#125;),<span class="hljs-literal">null</span>==l&amp;&amp;(c=h.<span class="hljs-property">display</span>,l=<span class="hljs-string">&quot;none&quot;</span>===c?<span class="hljs-string">&quot;&quot;</span>:c)),h.<span class="hljs-property">display</span>=<span class="hljs-string">&quot;inline-block&quot;</span>)),n.<span class="hljs-property">overflow</span>&amp;&amp;(h.<span class="hljs-property">overflow</span>=<span class="hljs-string">&quot;hidden&quot;</span>,p.<span class="hljs-title function_">always</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;h.<span class="hljs-property">overflow</span>=n.<span class="hljs-property">overflow</span>[<span class="hljs-number">0</span>],h.<span class="hljs-property">overflowX</span>=n.<span class="hljs-property">overflow</span>[<span class="hljs-number">1</span>],h.<span class="hljs-property">overflowY</span>=n.<span class="hljs-property">overflow</span>[<span class="hljs-number">2</span>]&#125;)),u=!<span class="hljs-number">1</span>,d)u||(v?<span class="hljs-string">&quot;hidden&quot;</span><span class="hljs-keyword">in</span> v&amp;&amp;(g=v.<span class="hljs-property">hidden</span>):v=Y.<span class="hljs-title function_">access</span>(e,<span class="hljs-string">&quot;fxshow&quot;</span>,&#123;<span class="hljs-attr">display</span>:l&#125;),o&amp;&amp;(v.<span class="hljs-property">hidden</span>=!g),g&amp;&amp;<span class="hljs-title function_">le</span>([e],!<span class="hljs-number">0</span>),p.<span class="hljs-title function_">done</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">for</span>(r <span class="hljs-keyword">in</span> g||<span class="hljs-title function_">le</span>([e]),Y.<span class="hljs-title function_">remove</span>(e,<span class="hljs-string">&quot;fxshow&quot;</span>),d)S.<span class="hljs-title function_">style</span>(e,r,d[r])&#125;)),u=<span class="hljs-title function_">ut</span>(g?v[r]:<span class="hljs-number">0</span>,r,p),r <span class="hljs-keyword">in</span> v||(v[r]=u.<span class="hljs-property">start</span>,g&amp;&amp;(u.<span class="hljs-property">end</span>=u.<span class="hljs-property">start</span>,u.<span class="hljs-property">start</span>=<span class="hljs-number">0</span>))&#125;],<span class="hljs-attr">prefilter</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;t?lt.<span class="hljs-property">prefilters</span>.<span class="hljs-title function_">unshift</span>(e):lt.<span class="hljs-property">prefilters</span>.<span class="hljs-title function_">push</span>(e)&#125;&#125;),S.<span class="hljs-property">speed</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r=e&amp;&amp;<span class="hljs-string">&quot;object&quot;</span>==<span class="hljs-keyword">typeof</span> e?S.<span class="hljs-title function_">extend</span>(&#123;&#125;,e):&#123;<span class="hljs-attr">complete</span>:n||!n&amp;&amp;t||<span class="hljs-title function_">m</span>(e)&amp;&amp;e,<span class="hljs-attr">duration</span>:e,<span class="hljs-attr">easing</span>:n&amp;&amp;t||t&amp;&amp;!<span class="hljs-title function_">m</span>(t)&amp;&amp;t&#125;;<span class="hljs-keyword">return</span> S.<span class="hljs-property">fx</span>.<span class="hljs-property">off</span>?r.<span class="hljs-property">duration</span>=<span class="hljs-number">0</span>:<span class="hljs-string">&quot;number&quot;</span>!=<span class="hljs-keyword">typeof</span> r.<span class="hljs-property">duration</span>&amp;&amp;(r.<span class="hljs-property">duration</span> <span class="hljs-keyword">in</span> S.<span class="hljs-property">fx</span>.<span class="hljs-property">speeds</span>?r.<span class="hljs-property">duration</span>=S.<span class="hljs-property">fx</span>.<span class="hljs-property">speeds</span>[r.<span class="hljs-property">duration</span>]:r.<span class="hljs-property">duration</span>=S.<span class="hljs-property">fx</span>.<span class="hljs-property">speeds</span>.<span class="hljs-property">_default</span>),<span class="hljs-literal">null</span>!=r.<span class="hljs-property">queue</span>&amp;&amp;!<span class="hljs-number">0</span>!==r.<span class="hljs-property">queue</span>||(r.<span class="hljs-property">queue</span>=<span class="hljs-string">&quot;fx&quot;</span>),r.<span class="hljs-property">old</span>=r.<span class="hljs-property">complete</span>,r.<span class="hljs-property">complete</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-title function_">m</span>(r.<span class="hljs-property">old</span>)&amp;&amp;r.<span class="hljs-property">old</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>),r.<span class="hljs-property">queue</span>&amp;&amp;S.<span class="hljs-title function_">dequeue</span>(<span class="hljs-variable language_">this</span>,r.<span class="hljs-property">queue</span>)&#125;,r&#125;,S.<span class="hljs-property">fn</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">fadeTo</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n,r</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">filter</span>(ae).<span class="hljs-title function_">css</span>(<span class="hljs-string">&quot;opacity&quot;</span>,<span class="hljs-number">0</span>).<span class="hljs-title function_">show</span>().<span class="hljs-title function_">end</span>().<span class="hljs-title function_">animate</span>(&#123;<span class="hljs-attr">opacity</span>:t&#125;,e,n,r)&#125;,<span class="hljs-attr">animate</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">t,e,n,r</span>)&#123;<span class="hljs-keyword">var</span> i=S.<span class="hljs-title function_">isEmptyObject</span>(t),o=S.<span class="hljs-title function_">speed</span>(e,n,r),a=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> e=<span class="hljs-title function_">lt</span>(<span class="hljs-variable language_">this</span>,S.<span class="hljs-title function_">extend</span>(&#123;&#125;,t),o);(i||Y.<span class="hljs-title function_">get</span>(<span class="hljs-variable language_">this</span>,<span class="hljs-string">&quot;finish&quot;</span>))&amp;&amp;e.<span class="hljs-title function_">stop</span>(!<span class="hljs-number">0</span>)&#125;;<span class="hljs-keyword">return</span> a.<span class="hljs-property">finish</span>=a,i||!<span class="hljs-number">1</span>===o.<span class="hljs-property">queue</span>?<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">each</span>(a):<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">queue</span>(o.<span class="hljs-property">queue</span>,a)&#125;,<span class="hljs-attr">stop</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">i,e,o</span>)&#123;<span class="hljs-keyword">var</span> a=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=e.<span class="hljs-property">stop</span>;<span class="hljs-keyword">delete</span> e.<span class="hljs-property">stop</span>,<span class="hljs-title function_">t</span>(o)&#125;;<span class="hljs-keyword">return</span><span class="hljs-string">&quot;string&quot;</span>!=<span class="hljs-keyword">typeof</span> i&amp;&amp;(o=e,e=i,i=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>),e&amp;&amp;<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">queue</span>(i||<span class="hljs-string">&quot;fx&quot;</span>,[]),<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> e=!<span class="hljs-number">0</span>,t=<span class="hljs-literal">null</span>!=i&amp;&amp;i+<span class="hljs-string">&quot;queueHooks&quot;</span>,n=S.<span class="hljs-property">timers</span>,r=Y.<span class="hljs-title function_">get</span>(<span class="hljs-variable language_">this</span>);<span class="hljs-keyword">if</span>(t)r[t]&amp;&amp;r[t].<span class="hljs-property">stop</span>&amp;&amp;<span class="hljs-title function_">a</span>(r[t]);<span class="hljs-keyword">else</span> <span class="hljs-keyword">for</span>(t <span class="hljs-keyword">in</span> r)r[t]&amp;&amp;r[t].<span class="hljs-property">stop</span>&amp;&amp;it.<span class="hljs-title function_">test</span>(t)&amp;&amp;<span class="hljs-title function_">a</span>(r[t]);<span class="hljs-keyword">for</span>(t=n.<span class="hljs-property">length</span>;t--;)n[t].<span class="hljs-property">elem</span>!==<span class="hljs-variable language_">this</span>||<span class="hljs-literal">null</span>!=i&amp;&amp;n[t].<span class="hljs-property">queue</span>!==i||(n[t].<span class="hljs-property">anim</span>.<span class="hljs-title function_">stop</span>(o),e=!<span class="hljs-number">1</span>,n.<span class="hljs-title function_">splice</span>(t,<span class="hljs-number">1</span>));!e&amp;&amp;o||S.<span class="hljs-title function_">dequeue</span>(<span class="hljs-variable language_">this</span>,i)&#125;)&#125;,<span class="hljs-attr">finish</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span>!<span class="hljs-number">1</span>!==a&amp;&amp;(a=a||<span class="hljs-string">&quot;fx&quot;</span>),<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> e,t=Y.<span class="hljs-title function_">get</span>(<span class="hljs-variable language_">this</span>),n=t[a+<span class="hljs-string">&quot;queue&quot;</span>],r=t[a+<span class="hljs-string">&quot;queueHooks&quot;</span>],i=S.<span class="hljs-property">timers</span>,o=n?n.<span class="hljs-property">length</span>:<span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(t.<span class="hljs-property">finish</span>=!<span class="hljs-number">0</span>,S.<span class="hljs-title function_">queue</span>(<span class="hljs-variable language_">this</span>,a,[]),r&amp;&amp;r.<span class="hljs-property">stop</span>&amp;&amp;r.<span class="hljs-property">stop</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>,!<span class="hljs-number">0</span>),e=i.<span class="hljs-property">length</span>;e--;)i[e].<span class="hljs-property">elem</span>===<span class="hljs-variable language_">this</span>&amp;&amp;i[e].<span class="hljs-property">queue</span>===a&amp;&amp;(i[e].<span class="hljs-property">anim</span>.<span class="hljs-title function_">stop</span>(!<span class="hljs-number">0</span>),i.<span class="hljs-title function_">splice</span>(e,<span class="hljs-number">1</span>));<span class="hljs-keyword">for</span>(e=<span class="hljs-number">0</span>;e&lt;o;e++)n[e]&amp;&amp;n[e].<span class="hljs-property">finish</span>&amp;&amp;n[e].<span class="hljs-property">finish</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<span class="hljs-keyword">delete</span> t.<span class="hljs-property">finish</span>&#125;)&#125;&#125;),S.<span class="hljs-title function_">each</span>([<span class="hljs-string">&quot;toggle&quot;</span>,<span class="hljs-string">&quot;show&quot;</span>,<span class="hljs-string">&quot;hide&quot;</span>],<span class="hljs-keyword">function</span>(<span class="hljs-params">e,r</span>)&#123;<span class="hljs-keyword">var</span> i=S.<span class="hljs-property">fn</span>[r];S.<span class="hljs-property">fn</span>[r]=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>==e||<span class="hljs-string">&quot;boolean&quot;</span>==<span class="hljs-keyword">typeof</span> e?i.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>,<span class="hljs-variable language_">arguments</span>):<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">animate</span>(<span class="hljs-title function_">st</span>(r,!<span class="hljs-number">0</span>),e,t,n)&#125;&#125;),S.<span class="hljs-title function_">each</span>(&#123;<span class="hljs-attr">slideDown</span>:<span class="hljs-title function_">st</span>(<span class="hljs-string">&quot;show&quot;</span>),<span class="hljs-attr">slideUp</span>:<span class="hljs-title function_">st</span>(<span class="hljs-string">&quot;hide&quot;</span>),<span class="hljs-attr">slideToggle</span>:<span class="hljs-title function_">st</span>(<span class="hljs-string">&quot;toggle&quot;</span>),<span class="hljs-attr">fadeIn</span>:&#123;<span class="hljs-attr">opacity</span>:<span class="hljs-string">&quot;show&quot;</span>&#125;,<span class="hljs-attr">fadeOut</span>:&#123;<span class="hljs-attr">opacity</span>:<span class="hljs-string">&quot;hide&quot;</span>&#125;,<span class="hljs-attr">fadeToggle</span>:&#123;<span class="hljs-attr">opacity</span>:<span class="hljs-string">&quot;toggle&quot;</span>&#125;&#125;,<span class="hljs-keyword">function</span>(<span class="hljs-params">e,r</span>)&#123;S.<span class="hljs-property">fn</span>[e]=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">animate</span>(r,e,t,n)&#125;&#125;),S.<span class="hljs-property">timers</span>=[],S.<span class="hljs-property">fx</span>.<span class="hljs-property">tick</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> e,t=<span class="hljs-number">0</span>,n=S.<span class="hljs-property">timers</span>;<span class="hljs-keyword">for</span>(<span class="hljs-title class_">Ze</span>=<span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>();t&lt;n.<span class="hljs-property">length</span>;t++)(e=n[t])()||n[t]!==e||n.<span class="hljs-title function_">splice</span>(t--,<span class="hljs-number">1</span>);n.<span class="hljs-property">length</span>||S.<span class="hljs-property">fx</span>.<span class="hljs-title function_">stop</span>(),<span class="hljs-title class_">Ze</span>=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>&#125;,S.<span class="hljs-property">fx</span>.<span class="hljs-property">timer</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;S.<span class="hljs-property">timers</span>.<span class="hljs-title function_">push</span>(e),S.<span class="hljs-property">fx</span>.<span class="hljs-title function_">start</span>()&#125;,S.<span class="hljs-property">fx</span>.<span class="hljs-property">interval</span>=<span class="hljs-number">13</span>,S.<span class="hljs-property">fx</span>.<span class="hljs-property">start</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;et||(et=!<span class="hljs-number">0</span>,<span class="hljs-title function_">ot</span>())&#125;,S.<span class="hljs-property">fx</span>.<span class="hljs-property">stop</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;et=<span class="hljs-literal">null</span>&#125;,S.<span class="hljs-property">fx</span>.<span class="hljs-property">speeds</span>=&#123;<span class="hljs-attr">slow</span>:<span class="hljs-number">600</span>,<span class="hljs-attr">fast</span>:<span class="hljs-number">200</span>,<span class="hljs-attr">_default</span>:<span class="hljs-number">400</span>&#125;,S.<span class="hljs-property">fn</span>.<span class="hljs-property">delay</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">r,e</span>)&#123;<span class="hljs-keyword">return</span> r=S.<span class="hljs-property">fx</span>&amp;&amp;S.<span class="hljs-property">fx</span>.<span class="hljs-property">speeds</span>[r]||r,e=e||<span class="hljs-string">&quot;fx&quot;</span>,<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">queue</span>(e,<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n=C.<span class="hljs-built_in">setTimeout</span>(e,r);t.<span class="hljs-property">stop</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;C.<span class="hljs-built_in">clearTimeout</span>(n)&#125;&#125;)&#125;,tt=E.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;input&quot;</span>),nt=E.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;select&quot;</span>).<span class="hljs-title function_">appendChild</span>(E.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;option&quot;</span>)),tt.<span class="hljs-property">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>,y.<span class="hljs-property">checkOn</span>=<span class="hljs-string">&quot;&quot;</span>!==tt.<span class="hljs-property">value</span>,y.<span class="hljs-property">optSelected</span>=nt.<span class="hljs-property">selected</span>,(tt=E.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;input&quot;</span>)).<span class="hljs-property">value</span>=<span class="hljs-string">&quot;t&quot;</span>,tt.<span class="hljs-property">type</span>=<span class="hljs-string">&quot;radio&quot;</span>,y.<span class="hljs-property">radioValue</span>=<span class="hljs-string">&quot;t&quot;</span>===tt.<span class="hljs-property">value</span>;<span class="hljs-keyword">var</span> ct,ft=S.<span class="hljs-property">expr</span>.<span class="hljs-property">attrHandle</span>;S.<span class="hljs-property">fn</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">attr</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span> $(<span class="hljs-variable language_">this</span>,S.<span class="hljs-property">attr</span>,e,t,<span class="hljs-number">1</span>&lt;<span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>)&#125;,<span class="hljs-attr">removeAttr</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;S.<span class="hljs-title function_">removeAttr</span>(<span class="hljs-variable language_">this</span>,e)&#125;)&#125;&#125;),S.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">attr</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r,i,o=e.<span class="hljs-property">nodeType</span>;<span class="hljs-keyword">if</span>(<span class="hljs-number">3</span>!==o&amp;&amp;<span class="hljs-number">8</span>!==o&amp;&amp;<span class="hljs-number">2</span>!==o)<span class="hljs-keyword">return</span><span class="hljs-string">&quot;undefined&quot;</span>==<span class="hljs-keyword">typeof</span> e.<span class="hljs-property">getAttribute</span>?S.<span class="hljs-title function_">prop</span>(e,t,n):(<span class="hljs-number">1</span>===o&amp;&amp;S.<span class="hljs-title function_">isXMLDoc</span>(e)||(i=S.<span class="hljs-property">attrHooks</span>[t.<span class="hljs-title function_">toLowerCase</span>()]||(S.<span class="hljs-property">expr</span>.<span class="hljs-property">match</span>.<span class="hljs-property">bool</span>.<span class="hljs-title function_">test</span>(t)?<span class="hljs-attr">ct</span>:<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>)),<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==n?<span class="hljs-literal">null</span>===n?<span class="hljs-keyword">void</span> S.<span class="hljs-title function_">removeAttr</span>(e,t):i&amp;&amp;<span class="hljs-string">&quot;set&quot;</span><span class="hljs-keyword">in</span> i&amp;&amp;<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==(r=i.<span class="hljs-title function_">set</span>(e,n,t))?<span class="hljs-attr">r</span>:(e.<span class="hljs-title function_">setAttribute</span>(t,n+<span class="hljs-string">&quot;&quot;</span>),n):i&amp;&amp;<span class="hljs-string">&quot;get&quot;</span><span class="hljs-keyword">in</span> i&amp;&amp;<span class="hljs-literal">null</span>!==(r=i.<span class="hljs-title function_">get</span>(e,t))?<span class="hljs-attr">r</span>:<span class="hljs-literal">null</span>==(r=S.<span class="hljs-property">find</span>.<span class="hljs-title function_">attr</span>(e,t))?<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>:r)&#125;,<span class="hljs-attr">attrHooks</span>:&#123;<span class="hljs-attr">type</span>:&#123;<span class="hljs-attr">set</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">if</span>(!y.<span class="hljs-property">radioValue</span>&amp;&amp;<span class="hljs-string">&quot;radio&quot;</span>===t&amp;&amp;<span class="hljs-title function_">A</span>(e,<span class="hljs-string">&quot;input&quot;</span>))&#123;<span class="hljs-keyword">var</span> n=e.<span class="hljs-property">value</span>;<span class="hljs-keyword">return</span> e.<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&quot;type&quot;</span>,t),n&amp;&amp;(e.<span class="hljs-property">value</span>=n),t&#125;&#125;&#125;&#125;,<span class="hljs-attr">removeAttr</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n,r=<span class="hljs-number">0</span>,i=t&amp;&amp;t.<span class="hljs-title function_">match</span>(P);<span class="hljs-keyword">if</span>(i&amp;&amp;<span class="hljs-number">1</span>===e.<span class="hljs-property">nodeType</span>)<span class="hljs-keyword">while</span>(n=i[r++])e.<span class="hljs-title function_">removeAttribute</span>(n)&#125;&#125;),ct=&#123;<span class="hljs-attr">set</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">return</span>!<span class="hljs-number">1</span>===t?S.<span class="hljs-title function_">removeAttr</span>(e,n):e.<span class="hljs-title function_">setAttribute</span>(n,n),n&#125;&#125;,S.<span class="hljs-title function_">each</span>(S.<span class="hljs-property">expr</span>.<span class="hljs-property">match</span>.<span class="hljs-property">bool</span>.<span class="hljs-property">source</span>.<span class="hljs-title function_">match</span>(<span class="hljs-regexp">/\w+/g</span>),<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> a=ft[t]||S.<span class="hljs-property">find</span>.<span class="hljs-property">attr</span>;ft[t]=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r,i,o=t.<span class="hljs-title function_">toLowerCase</span>();<span class="hljs-keyword">return</span> n||(i=ft[o],ft[o]=r,r=<span class="hljs-literal">null</span>!=<span class="hljs-title function_">a</span>(e,t,n)?<span class="hljs-attr">o</span>:<span class="hljs-literal">null</span>,ft[o]=i),r&#125;&#125;);<span class="hljs-keyword">var</span> pt=<span class="hljs-regexp">/^(?:input|select|textarea|button)$/i</span>,dt=<span class="hljs-regexp">/^(?:a|area)$/i</span>;<span class="hljs-keyword">function</span> <span class="hljs-title function_">ht</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span>(e.<span class="hljs-title function_">match</span>(P)||[]).<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot; &quot;</span>)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">gt</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e.<span class="hljs-property">getAttribute</span>&amp;&amp;e.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;class&quot;</span>)||<span class="hljs-string">&quot;&quot;</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">vt</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(e)?<span class="hljs-attr">e</span>:<span class="hljs-string">&quot;string&quot;</span>==<span class="hljs-keyword">typeof</span> e&amp;&amp;e.<span class="hljs-title function_">match</span>(P)||[]&#125;S.<span class="hljs-property">fn</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">prop</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span> $(<span class="hljs-variable language_">this</span>,S.<span class="hljs-property">prop</span>,e,t,<span class="hljs-number">1</span>&lt;<span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>)&#125;,<span class="hljs-attr">removeProp</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">delete</span> <span class="hljs-variable language_">this</span>[S.<span class="hljs-property">propFix</span>[e]||e]&#125;)&#125;&#125;),S.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">prop</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r,i,o=e.<span class="hljs-property">nodeType</span>;<span class="hljs-keyword">if</span>(<span class="hljs-number">3</span>!==o&amp;&amp;<span class="hljs-number">8</span>!==o&amp;&amp;<span class="hljs-number">2</span>!==o)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>===o&amp;&amp;S.<span class="hljs-title function_">isXMLDoc</span>(e)||(t=S.<span class="hljs-property">propFix</span>[t]||t,i=S.<span class="hljs-property">propHooks</span>[t]),<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==n?i&amp;&amp;<span class="hljs-string">&quot;set&quot;</span><span class="hljs-keyword">in</span> i&amp;&amp;<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==(r=i.<span class="hljs-title function_">set</span>(e,n,t))?<span class="hljs-attr">r</span>:e[t]=<span class="hljs-attr">n</span>:i&amp;&amp;<span class="hljs-string">&quot;get&quot;</span><span class="hljs-keyword">in</span> i&amp;&amp;<span class="hljs-literal">null</span>!==(r=i.<span class="hljs-title function_">get</span>(e,t))?<span class="hljs-attr">r</span>:e[t]&#125;,<span class="hljs-attr">propHooks</span>:&#123;<span class="hljs-attr">tabIndex</span>:&#123;<span class="hljs-attr">get</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=S.<span class="hljs-property">find</span>.<span class="hljs-title function_">attr</span>(e,<span class="hljs-string">&quot;tabindex&quot;</span>);<span class="hljs-keyword">return</span> t?<span class="hljs-built_in">parseInt</span>(t,<span class="hljs-number">10</span>):pt.<span class="hljs-title function_">test</span>(e.<span class="hljs-property">nodeName</span>)||dt.<span class="hljs-title function_">test</span>(e.<span class="hljs-property">nodeName</span>)&amp;&amp;e.<span class="hljs-property">href</span>?<span class="hljs-number">0</span>:-<span class="hljs-number">1</span>&#125;&#125;&#125;,<span class="hljs-attr">propFix</span>:&#123;<span class="hljs-string">&quot;for&quot;</span>:<span class="hljs-string">&quot;htmlFor&quot;</span>,<span class="hljs-string">&quot;class&quot;</span>:<span class="hljs-string">&quot;className&quot;</span>&#125;&#125;),y.<span class="hljs-property">optSelected</span>||(S.<span class="hljs-property">propHooks</span>.<span class="hljs-property">selected</span>=&#123;<span class="hljs-attr">get</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=e.<span class="hljs-property">parentNode</span>;<span class="hljs-keyword">return</span> t&amp;&amp;t.<span class="hljs-property">parentNode</span>&amp;&amp;t.<span class="hljs-property">parentNode</span>.<span class="hljs-property">selectedIndex</span>,<span class="hljs-literal">null</span>&#125;,<span class="hljs-attr">set</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=e.<span class="hljs-property">parentNode</span>;t&amp;&amp;(t.<span class="hljs-property">selectedIndex</span>,t.<span class="hljs-property">parentNode</span>&amp;&amp;t.<span class="hljs-property">parentNode</span>.<span class="hljs-property">selectedIndex</span>)&#125;&#125;),S.<span class="hljs-title function_">each</span>([<span class="hljs-string">&quot;tabIndex&quot;</span>,<span class="hljs-string">&quot;readOnly&quot;</span>,<span class="hljs-string">&quot;maxLength&quot;</span>,<span class="hljs-string">&quot;cellSpacing&quot;</span>,<span class="hljs-string">&quot;cellPadding&quot;</span>,<span class="hljs-string">&quot;rowSpan&quot;</span>,<span class="hljs-string">&quot;colSpan&quot;</span>,<span class="hljs-string">&quot;useMap&quot;</span>,<span class="hljs-string">&quot;frameBorder&quot;</span>,<span class="hljs-string">&quot;contentEditable&quot;</span>],<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;S.<span class="hljs-property">propFix</span>[<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">toLowerCase</span>()]=<span class="hljs-variable language_">this</span>&#125;),S.<span class="hljs-property">fn</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">addClass</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>)&#123;<span class="hljs-keyword">var</span> e,n,r,i,o,a,s,u=<span class="hljs-number">0</span>;<span class="hljs-keyword">if</span>(<span class="hljs-title function_">m</span>(t))<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-title function_">S</span>(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">addClass</span>(t.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>,e,<span class="hljs-title function_">gt</span>(<span class="hljs-variable language_">this</span>)))&#125;);<span class="hljs-keyword">if</span>((e=<span class="hljs-title function_">vt</span>(t)).<span class="hljs-property">length</span>)<span class="hljs-keyword">while</span>(n=<span class="hljs-variable language_">this</span>[u++])<span class="hljs-keyword">if</span>(i=<span class="hljs-title function_">gt</span>(n),r=<span class="hljs-number">1</span>===n.<span class="hljs-property">nodeType</span>&amp;&amp;<span class="hljs-string">&quot; &quot;</span>+<span class="hljs-title function_">ht</span>(i)+<span class="hljs-string">&quot; &quot;</span>)&#123;a=<span class="hljs-number">0</span>;<span class="hljs-keyword">while</span>(o=e[a++])r.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot; &quot;</span>+o+<span class="hljs-string">&quot; &quot;</span>)&lt;<span class="hljs-number">0</span>&amp;&amp;(r+=o+<span class="hljs-string">&quot; &quot;</span>);i!==(s=<span class="hljs-title function_">ht</span>(r))&amp;&amp;n.<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&quot;class&quot;</span>,s)&#125;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>&#125;,<span class="hljs-attr">removeClass</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>)&#123;<span class="hljs-keyword">var</span> e,n,r,i,o,a,s,u=<span class="hljs-number">0</span>;<span class="hljs-keyword">if</span>(<span class="hljs-title function_">m</span>(t))<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-title function_">S</span>(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">removeClass</span>(t.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>,e,<span class="hljs-title function_">gt</span>(<span class="hljs-variable language_">this</span>)))&#125;);<span class="hljs-keyword">if</span>(!<span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>)<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">attr</span>(<span class="hljs-string">&quot;class&quot;</span>,<span class="hljs-string">&quot;&quot;</span>);<span class="hljs-keyword">if</span>((e=<span class="hljs-title function_">vt</span>(t)).<span class="hljs-property">length</span>)<span class="hljs-keyword">while</span>(n=<span class="hljs-variable language_">this</span>[u++])<span class="hljs-keyword">if</span>(i=<span class="hljs-title function_">gt</span>(n),r=<span class="hljs-number">1</span>===n.<span class="hljs-property">nodeType</span>&amp;&amp;<span class="hljs-string">&quot; &quot;</span>+<span class="hljs-title function_">ht</span>(i)+<span class="hljs-string">&quot; &quot;</span>)&#123;a=<span class="hljs-number">0</span>;<span class="hljs-keyword">while</span>(o=e[a++])<span class="hljs-keyword">while</span>(-<span class="hljs-number">1</span>&lt;r.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot; &quot;</span>+o+<span class="hljs-string">&quot; &quot;</span>))r=r.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&quot; &quot;</span>+o+<span class="hljs-string">&quot; &quot;</span>,<span class="hljs-string">&quot; &quot;</span>);i!==(s=<span class="hljs-title function_">ht</span>(r))&amp;&amp;n.<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&quot;class&quot;</span>,s)&#125;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>&#125;,<span class="hljs-attr">toggleClass</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">i,t</span>)&#123;<span class="hljs-keyword">var</span> o=<span class="hljs-keyword">typeof</span> i,a=<span class="hljs-string">&quot;string&quot;</span>===o||<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(i);<span class="hljs-keyword">return</span><span class="hljs-string">&quot;boolean&quot;</span>==<span class="hljs-keyword">typeof</span> t&amp;&amp;a?t?<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">addClass</span>(i):<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">removeClass</span>(i):<span class="hljs-title function_">m</span>(i)?<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-title function_">S</span>(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">toggleClass</span>(i.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>,e,<span class="hljs-title function_">gt</span>(<span class="hljs-variable language_">this</span>),t),t)&#125;):<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> e,t,n,r;<span class="hljs-keyword">if</span>(a)&#123;t=<span class="hljs-number">0</span>,n=<span class="hljs-title function_">S</span>(<span class="hljs-variable language_">this</span>),r=<span class="hljs-title function_">vt</span>(i);<span class="hljs-keyword">while</span>(e=r[t++])n.<span class="hljs-title function_">hasClass</span>(e)?n.<span class="hljs-title function_">removeClass</span>(e):n.<span class="hljs-title function_">addClass</span>(e)&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==i&amp;&amp;<span class="hljs-string">&quot;boolean&quot;</span>!==o||((e=<span class="hljs-title function_">gt</span>(<span class="hljs-variable language_">this</span>))&amp;&amp;Y.<span class="hljs-title function_">set</span>(<span class="hljs-variable language_">this</span>,<span class="hljs-string">&quot;__className__&quot;</span>,e),<span class="hljs-variable language_">this</span>.<span class="hljs-property">setAttribute</span>&amp;&amp;<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&quot;class&quot;</span>,e||!<span class="hljs-number">1</span>===i?<span class="hljs-string">&quot;&quot;</span>:Y.<span class="hljs-title function_">get</span>(<span class="hljs-variable language_">this</span>,<span class="hljs-string">&quot;__className__&quot;</span>)||<span class="hljs-string">&quot;&quot;</span>))&#125;)&#125;,<span class="hljs-attr">hasClass</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t,n,r=<span class="hljs-number">0</span>;t=<span class="hljs-string">&quot; &quot;</span>+e+<span class="hljs-string">&quot; &quot;</span>;<span class="hljs-keyword">while</span>(n=<span class="hljs-variable language_">this</span>[r++])<span class="hljs-keyword">if</span>(<span class="hljs-number">1</span>===n.<span class="hljs-property">nodeType</span>&amp;&amp;-<span class="hljs-number">1</span>&lt;(<span class="hljs-string">&quot; &quot;</span>+<span class="hljs-title function_">ht</span>(<span class="hljs-title function_">gt</span>(n))+<span class="hljs-string">&quot; &quot;</span>).<span class="hljs-title function_">indexOf</span>(t))<span class="hljs-keyword">return</span>!<span class="hljs-number">0</span>;<span class="hljs-keyword">return</span>!<span class="hljs-number">1</span>&#125;&#125;);<span class="hljs-keyword">var</span> yt=<span class="hljs-regexp">/\r/g</span>;S.<span class="hljs-property">fn</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">val</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>)&#123;<span class="hljs-keyword">var</span> r,e,i,t=<span class="hljs-variable language_">this</span>[<span class="hljs-number">0</span>];<span class="hljs-keyword">return</span> <span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>?(i=<span class="hljs-title function_">m</span>(n),<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t;<span class="hljs-number">1</span>===<span class="hljs-variable language_">this</span>.<span class="hljs-property">nodeType</span>&amp;&amp;(<span class="hljs-literal">null</span>==(t=i?n.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>,e,<span class="hljs-title function_">S</span>(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">val</span>()):n)?t=<span class="hljs-string">&quot;&quot;</span>:<span class="hljs-string">&quot;number&quot;</span>==<span class="hljs-keyword">typeof</span> t?t+=<span class="hljs-string">&quot;&quot;</span>:<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(t)&amp;&amp;(t=S.<span class="hljs-title function_">map</span>(t,<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>==e?<span class="hljs-string">&quot;&quot;</span>:e+<span class="hljs-string">&quot;&quot;</span>&#125;)),(r=S.<span class="hljs-property">valHooks</span>[<span class="hljs-variable language_">this</span>.<span class="hljs-property">type</span>]||S.<span class="hljs-property">valHooks</span>[<span class="hljs-variable language_">this</span>.<span class="hljs-property">nodeName</span>.<span class="hljs-title function_">toLowerCase</span>()])&amp;&amp;<span class="hljs-string">&quot;set&quot;</span><span class="hljs-keyword">in</span> r&amp;&amp;<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==r.<span class="hljs-title function_">set</span>(<span class="hljs-variable language_">this</span>,t,<span class="hljs-string">&quot;value&quot;</span>)||(<span class="hljs-variable language_">this</span>.<span class="hljs-property">value</span>=t))&#125;)):t?(r=S.<span class="hljs-property">valHooks</span>[t.<span class="hljs-property">type</span>]||S.<span class="hljs-property">valHooks</span>[t.<span class="hljs-property">nodeName</span>.<span class="hljs-title function_">toLowerCase</span>()])&amp;&amp;<span class="hljs-string">&quot;get&quot;</span><span class="hljs-keyword">in</span> r&amp;&amp;<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==(e=r.<span class="hljs-title function_">get</span>(t,<span class="hljs-string">&quot;value&quot;</span>))?<span class="hljs-attr">e</span>:<span class="hljs-string">&quot;string&quot;</span>==<span class="hljs-title function_">typeof</span>(e=t.<span class="hljs-property">value</span>)?e.<span class="hljs-title function_">replace</span>(yt,<span class="hljs-string">&quot;&quot;</span>):<span class="hljs-literal">null</span>==e?<span class="hljs-string">&quot;&quot;</span>:<span class="hljs-attr">e</span>:<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>&#125;&#125;),S.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">valHooks</span>:&#123;<span class="hljs-attr">option</span>:&#123;<span class="hljs-attr">get</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=S.<span class="hljs-property">find</span>.<span class="hljs-title function_">attr</span>(e,<span class="hljs-string">&quot;value&quot;</span>);<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>!=t?<span class="hljs-attr">t</span>:<span class="hljs-title function_">ht</span>(S.<span class="hljs-title function_">text</span>(e))&#125;&#125;,<span class="hljs-attr">select</span>:&#123;<span class="hljs-attr">get</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t,n,r,i=e.<span class="hljs-property">options</span>,o=e.<span class="hljs-property">selectedIndex</span>,a=<span class="hljs-string">&quot;select-one&quot;</span>===e.<span class="hljs-property">type</span>,s=a?<span class="hljs-attr">null</span>:[],u=a?o+<span class="hljs-number">1</span>:i.<span class="hljs-property">length</span>;<span class="hljs-keyword">for</span>(r=o&lt;<span class="hljs-number">0</span>?<span class="hljs-attr">u</span>:a?<span class="hljs-attr">o</span>:<span class="hljs-number">0</span>;r&lt;u;r++)<span class="hljs-keyword">if</span>(((n=i[r]).<span class="hljs-property">selected</span>||r===o)&amp;&amp;!n.<span class="hljs-property">disabled</span>&amp;&amp;(!n.<span class="hljs-property">parentNode</span>.<span class="hljs-property">disabled</span>||!<span class="hljs-title function_">A</span>(n.<span class="hljs-property">parentNode</span>,<span class="hljs-string">&quot;optgroup&quot;</span>)))&#123;<span class="hljs-keyword">if</span>(t=<span class="hljs-title function_">S</span>(n).<span class="hljs-title function_">val</span>(),a)<span class="hljs-keyword">return</span> t;s.<span class="hljs-title function_">push</span>(t)&#125;<span class="hljs-keyword">return</span> s&#125;,<span class="hljs-attr">set</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n,r,i=e.<span class="hljs-property">options</span>,o=S.<span class="hljs-title function_">makeArray</span>(t),a=i.<span class="hljs-property">length</span>;<span class="hljs-keyword">while</span>(a--)((r=i[a]).<span class="hljs-property">selected</span>=-<span class="hljs-number">1</span>&lt;S.<span class="hljs-title function_">inArray</span>(S.<span class="hljs-property">valHooks</span>.<span class="hljs-property">option</span>.<span class="hljs-title function_">get</span>(r),o))&amp;&amp;(n=!<span class="hljs-number">0</span>);<span class="hljs-keyword">return</span> n||(e.<span class="hljs-property">selectedIndex</span>=-<span class="hljs-number">1</span>),o&#125;&#125;&#125;&#125;),S.<span class="hljs-title function_">each</span>([<span class="hljs-string">&quot;radio&quot;</span>,<span class="hljs-string">&quot;checkbox&quot;</span>],<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;S.<span class="hljs-property">valHooks</span>[<span class="hljs-variable language_">this</span>]=&#123;<span class="hljs-attr">set</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(t))<span class="hljs-keyword">return</span> e.<span class="hljs-property">checked</span>=-<span class="hljs-number">1</span>&lt;S.<span class="hljs-title function_">inArray</span>(<span class="hljs-title function_">S</span>(e).<span class="hljs-title function_">val</span>(),t)&#125;&#125;,y.<span class="hljs-property">checkOn</span>||(S.<span class="hljs-property">valHooks</span>[<span class="hljs-variable language_">this</span>].<span class="hljs-property">get</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>===e.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;value&quot;</span>)?<span class="hljs-string">&quot;on&quot;</span>:e.<span class="hljs-property">value</span>&#125;)&#125;),y.<span class="hljs-property">focusin</span>=<span class="hljs-string">&quot;onfocusin&quot;</span><span class="hljs-keyword">in</span> C;<span class="hljs-keyword">var</span> mt=<span class="hljs-regexp">/^(?:focusinfocus|focusoutblur)$/</span>,xt=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;e.<span class="hljs-title function_">stopPropagation</span>()&#125;;S.<span class="hljs-title function_">extend</span>(S.<span class="hljs-property">event</span>,&#123;<span class="hljs-attr">trigger</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n,r</span>)&#123;<span class="hljs-keyword">var</span> i,o,a,s,u,l,c,f,p=[n||E],d=v.<span class="hljs-title function_">call</span>(e,<span class="hljs-string">&quot;type&quot;</span>)?e.<span class="hljs-property">type</span>:e,h=v.<span class="hljs-title function_">call</span>(e,<span class="hljs-string">&quot;namespace&quot;</span>)?e.<span class="hljs-property">namespace</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;.&quot;</span>):[];<span class="hljs-keyword">if</span>(o=f=a=n=n||E,<span class="hljs-number">3</span>!==n.<span class="hljs-property">nodeType</span>&amp;&amp;<span class="hljs-number">8</span>!==n.<span class="hljs-property">nodeType</span>&amp;&amp;!mt.<span class="hljs-title function_">test</span>(d+S.<span class="hljs-property">event</span>.<span class="hljs-property">triggered</span>)&amp;&amp;(-<span class="hljs-number">1</span>&lt;d.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;.&quot;</span>)&amp;&amp;(d=(h=d.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;.&quot;</span>)).<span class="hljs-title function_">shift</span>(),h.<span class="hljs-title function_">sort</span>()),u=d.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;:&quot;</span>)&lt;<span class="hljs-number">0</span>&amp;&amp;<span class="hljs-string">&quot;on&quot;</span>+d,(e=e[S.<span class="hljs-property">expando</span>]?<span class="hljs-attr">e</span>:<span class="hljs-keyword">new</span> S.<span class="hljs-title class_">Event</span>(d,<span class="hljs-string">&quot;object&quot;</span>==<span class="hljs-keyword">typeof</span> e&amp;&amp;e)).<span class="hljs-property">isTrigger</span>=r?<span class="hljs-number">2</span>:<span class="hljs-number">3</span>,e.<span class="hljs-property">namespace</span>=h.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;.&quot;</span>),e.<span class="hljs-property">rnamespace</span>=e.<span class="hljs-property">namespace</span>?<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&quot;(^|\\.)&quot;</span>+h.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;\\.(?:.*\\.|)&quot;</span>)+<span class="hljs-string">&quot;(\\.|$)&quot;</span>):<span class="hljs-literal">null</span>,e.<span class="hljs-property">result</span>=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>,e.<span class="hljs-property">target</span>||(e.<span class="hljs-property">target</span>=n),t=<span class="hljs-literal">null</span>==t?[e]:S.<span class="hljs-title function_">makeArray</span>(t,[e]),c=S.<span class="hljs-property">event</span>.<span class="hljs-property">special</span>[d]||&#123;&#125;,r||!c.<span class="hljs-property">trigger</span>||!<span class="hljs-number">1</span>!==c.<span class="hljs-property">trigger</span>.<span class="hljs-title function_">apply</span>(n,t)))&#123;<span class="hljs-keyword">if</span>(!r&amp;&amp;!c.<span class="hljs-property">noBubble</span>&amp;&amp;!<span class="hljs-title function_">x</span>(n))&#123;<span class="hljs-keyword">for</span>(s=c.<span class="hljs-property">delegateType</span>||d,mt.<span class="hljs-title function_">test</span>(s+d)||(o=o.<span class="hljs-property">parentNode</span>);o;o=o.<span class="hljs-property">parentNode</span>)p.<span class="hljs-title function_">push</span>(o),a=o;a===(n.<span class="hljs-property">ownerDocument</span>||E)&amp;&amp;p.<span class="hljs-title function_">push</span>(a.<span class="hljs-property">defaultView</span>||a.<span class="hljs-property">parentWindow</span>||C)&#125;i=<span class="hljs-number">0</span>;<span class="hljs-keyword">while</span>((o=p[i++])&amp;&amp;!e.<span class="hljs-title function_">isPropagationStopped</span>())f=o,e.<span class="hljs-property">type</span>=<span class="hljs-number">1</span>&lt;i?<span class="hljs-attr">s</span>:c.<span class="hljs-property">bindType</span>||d,(l=(Y.<span class="hljs-title function_">get</span>(o,<span class="hljs-string">&quot;events&quot;</span>)||<span class="hljs-title class_">Object</span>.<span class="hljs-title function_">create</span>(<span class="hljs-literal">null</span>))[e.<span class="hljs-property">type</span>]&amp;&amp;Y.<span class="hljs-title function_">get</span>(o,<span class="hljs-string">&quot;handle&quot;</span>))&amp;&amp;l.<span class="hljs-title function_">apply</span>(o,t),(l=u&amp;&amp;o[u])&amp;&amp;l.<span class="hljs-property">apply</span>&amp;&amp;<span class="hljs-title function_">V</span>(o)&amp;&amp;(e.<span class="hljs-property">result</span>=l.<span class="hljs-title function_">apply</span>(o,t),!<span class="hljs-number">1</span>===e.<span class="hljs-property">result</span>&amp;&amp;e.<span class="hljs-title function_">preventDefault</span>());<span class="hljs-keyword">return</span> e.<span class="hljs-property">type</span>=d,r||e.<span class="hljs-title function_">isDefaultPrevented</span>()||c.<span class="hljs-property">_default</span>&amp;&amp;!<span class="hljs-number">1</span>!==c.<span class="hljs-property">_default</span>.<span class="hljs-title function_">apply</span>(p.<span class="hljs-title function_">pop</span>(),t)||!<span class="hljs-title function_">V</span>(n)||u&amp;&amp;<span class="hljs-title function_">m</span>(n[d])&amp;&amp;!<span class="hljs-title function_">x</span>(n)&amp;&amp;((a=n[u])&amp;&amp;(n[u]=<span class="hljs-literal">null</span>),S.<span class="hljs-property">event</span>.<span class="hljs-property">triggered</span>=d,e.<span class="hljs-title function_">isPropagationStopped</span>()&amp;&amp;f.<span class="hljs-title function_">addEventListener</span>(d,xt),n[d](),e.<span class="hljs-title function_">isPropagationStopped</span>()&amp;&amp;f.<span class="hljs-title function_">removeEventListener</span>(d,xt),S.<span class="hljs-property">event</span>.<span class="hljs-property">triggered</span>=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>,a&amp;&amp;(n[u]=a)),e.<span class="hljs-property">result</span>&#125;&#125;,<span class="hljs-attr">simulate</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r=S.<span class="hljs-title function_">extend</span>(<span class="hljs-keyword">new</span> S.<span class="hljs-property">Event</span>,n,&#123;<span class="hljs-attr">type</span>:e,<span class="hljs-attr">isSimulated</span>:!<span class="hljs-number">0</span>&#125;);S.<span class="hljs-property">event</span>.<span class="hljs-title function_">trigger</span>(r,<span class="hljs-literal">null</span>,t)&#125;&#125;),S.<span class="hljs-property">fn</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">trigger</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;S.<span class="hljs-property">event</span>.<span class="hljs-title function_">trigger</span>(e,t,<span class="hljs-variable language_">this</span>)&#125;)&#125;,<span class="hljs-attr">triggerHandler</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n=<span class="hljs-variable language_">this</span>[<span class="hljs-number">0</span>];<span class="hljs-keyword">if</span>(n)<span class="hljs-keyword">return</span> S.<span class="hljs-property">event</span>.<span class="hljs-title function_">trigger</span>(e,t,n,!<span class="hljs-number">0</span>)&#125;&#125;),y.<span class="hljs-property">focusin</span>||S.<span class="hljs-title function_">each</span>(&#123;<span class="hljs-attr">focus</span>:<span class="hljs-string">&quot;focusin&quot;</span>,<span class="hljs-attr">blur</span>:<span class="hljs-string">&quot;focusout&quot;</span>&#125;,<span class="hljs-keyword">function</span>(<span class="hljs-params">n,r</span>)&#123;<span class="hljs-keyword">var</span> i=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;S.<span class="hljs-property">event</span>.<span class="hljs-title function_">simulate</span>(r,e.<span class="hljs-property">target</span>,S.<span class="hljs-property">event</span>.<span class="hljs-title function_">fix</span>(e))&#125;;S.<span class="hljs-property">event</span>.<span class="hljs-property">special</span>[r]=&#123;<span class="hljs-attr">setup</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> e=<span class="hljs-variable language_">this</span>.<span class="hljs-property">ownerDocument</span>||<span class="hljs-variable language_">this</span>.<span class="hljs-property">document</span>||<span class="hljs-variable language_">this</span>,t=Y.<span class="hljs-title function_">access</span>(e,r);t||e.<span class="hljs-title function_">addEventListener</span>(n,i,!<span class="hljs-number">0</span>),Y.<span class="hljs-title function_">access</span>(e,r,(t||<span class="hljs-number">0</span>)+<span class="hljs-number">1</span>)&#125;,<span class="hljs-attr">teardown</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> e=<span class="hljs-variable language_">this</span>.<span class="hljs-property">ownerDocument</span>||<span class="hljs-variable language_">this</span>.<span class="hljs-property">document</span>||<span class="hljs-variable language_">this</span>,t=Y.<span class="hljs-title function_">access</span>(e,r)-<span class="hljs-number">1</span>;t?Y.<span class="hljs-title function_">access</span>(e,r,t):(e.<span class="hljs-title function_">removeEventListener</span>(n,i,!<span class="hljs-number">0</span>),Y.<span class="hljs-title function_">remove</span>(e,r))&#125;&#125;&#125;);<span class="hljs-keyword">var</span> bt=C.<span class="hljs-property">location</span>,wt=&#123;<span class="hljs-attr">guid</span>:<span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>()&#125;,<span class="hljs-title class_">Tt</span>=<span class="hljs-regexp">/\?/</span>;S.<span class="hljs-property">parseXML</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t,n;<span class="hljs-keyword">if</span>(!e||<span class="hljs-string">&quot;string&quot;</span>!=<span class="hljs-keyword">typeof</span> e)<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<span class="hljs-keyword">try</span>&#123;t=(<span class="hljs-keyword">new</span> C.<span class="hljs-property">DOMParser</span>).<span class="hljs-title function_">parseFromString</span>(e,<span class="hljs-string">&quot;text/xml&quot;</span>)&#125;<span class="hljs-keyword">catch</span>(e)&#123;&#125;<span class="hljs-keyword">return</span> n=t&amp;&amp;t.<span class="hljs-title function_">getElementsByTagName</span>(<span class="hljs-string">&quot;parsererror&quot;</span>)[<span class="hljs-number">0</span>],t&amp;&amp;!n||S.<span class="hljs-title function_">error</span>(<span class="hljs-string">&quot;Invalid XML: &quot;</span>+(n?S.<span class="hljs-title function_">map</span>(n.<span class="hljs-property">childNodes</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e.<span class="hljs-property">textContent</span>&#125;).<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;\n&quot;</span>):e)),t&#125;;<span class="hljs-keyword">var</span> <span class="hljs-title class_">Ct</span>=<span class="hljs-regexp">/\[\]$/</span>,<span class="hljs-title class_">Et</span>=<span class="hljs-regexp">/\r?\n/g</span>,<span class="hljs-title class_">St</span>=<span class="hljs-regexp">/^(?:submit|button|image|reset|file)$/i</span>,kt=<span class="hljs-regexp">/^(?:input|select|textarea|keygen)/i</span>;<span class="hljs-keyword">function</span> <span class="hljs-title function_">At</span>(<span class="hljs-params">n,e,r,i</span>)&#123;<span class="hljs-keyword">var</span> t;<span class="hljs-keyword">if</span>(<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(e))S.<span class="hljs-title function_">each</span>(e,<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;r||<span class="hljs-title class_">Ct</span>.<span class="hljs-title function_">test</span>(n)?<span class="hljs-title function_">i</span>(n,t):<span class="hljs-title class_">At</span>(n+<span class="hljs-string">&quot;[&quot;</span>+(<span class="hljs-string">&quot;object&quot;</span>==<span class="hljs-keyword">typeof</span> t&amp;&amp;<span class="hljs-literal">null</span>!=t?<span class="hljs-attr">e</span>:<span class="hljs-string">&quot;&quot;</span>)+<span class="hljs-string">&quot;]&quot;</span>,t,r,i)&#125;);<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(r||<span class="hljs-string">&quot;object&quot;</span>!==<span class="hljs-title function_">w</span>(e))<span class="hljs-title function_">i</span>(n,e);<span class="hljs-keyword">else</span> <span class="hljs-keyword">for</span>(t <span class="hljs-keyword">in</span> e)<span class="hljs-title class_">At</span>(n+<span class="hljs-string">&quot;[&quot;</span>+t+<span class="hljs-string">&quot;]&quot;</span>,e[t],r,i)&#125;S.<span class="hljs-property">param</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n,r=[],i=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n=<span class="hljs-title function_">m</span>(t)?<span class="hljs-title function_">t</span>():t;r[r.<span class="hljs-property">length</span>]=<span class="hljs-built_in">encodeURIComponent</span>(e)+<span class="hljs-string">&quot;=&quot;</span>+<span class="hljs-built_in">encodeURIComponent</span>(<span class="hljs-literal">null</span>==n?<span class="hljs-string">&quot;&quot;</span>:n)&#125;;<span class="hljs-keyword">if</span>(<span class="hljs-literal">null</span>==e)<span class="hljs-keyword">return</span><span class="hljs-string">&quot;&quot;</span>;<span class="hljs-keyword">if</span>(<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(e)||e.<span class="hljs-property">jquery</span>&amp;&amp;!S.<span class="hljs-title function_">isPlainObject</span>(e))S.<span class="hljs-title function_">each</span>(e,<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-title function_">i</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span>,<span class="hljs-variable language_">this</span>.<span class="hljs-property">value</span>)&#125;);<span class="hljs-keyword">else</span> <span class="hljs-keyword">for</span>(n <span class="hljs-keyword">in</span> e)<span class="hljs-title class_">At</span>(n,e[n],t,i);<span class="hljs-keyword">return</span> r.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&amp;&quot;</span>)&#125;,S.<span class="hljs-property">fn</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">serialize</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> S.<span class="hljs-title function_">param</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">serializeArray</span>())&#125;,<span class="hljs-attr">serializeArray</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">map</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> e=S.<span class="hljs-title function_">prop</span>(<span class="hljs-variable language_">this</span>,<span class="hljs-string">&quot;elements&quot;</span>);<span class="hljs-keyword">return</span> e?S.<span class="hljs-title function_">makeArray</span>(e):<span class="hljs-variable language_">this</span>&#125;).<span class="hljs-title function_">filter</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> e=<span class="hljs-variable language_">this</span>.<span class="hljs-property">type</span>;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span>&amp;&amp;!<span class="hljs-title function_">S</span>(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">is</span>(<span class="hljs-string">&quot;:disabled&quot;</span>)&amp;&amp;kt.<span class="hljs-title function_">test</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">nodeName</span>)&amp;&amp;!<span class="hljs-title class_">St</span>.<span class="hljs-title function_">test</span>(e)&amp;&amp;(<span class="hljs-variable language_">this</span>.<span class="hljs-property">checked</span>||!pe.<span class="hljs-title function_">test</span>(e))&#125;).<span class="hljs-title function_">map</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n=<span class="hljs-title function_">S</span>(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">val</span>();<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>==n?<span class="hljs-attr">null</span>:<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(n)?S.<span class="hljs-title function_">map</span>(n,<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">name</span>:t.<span class="hljs-property">name</span>,<span class="hljs-attr">value</span>:e.<span class="hljs-title function_">replace</span>(<span class="hljs-title class_">Et</span>,<span class="hljs-string">&quot;\r\n&quot;</span>)&#125;&#125;):&#123;<span class="hljs-attr">name</span>:t.<span class="hljs-property">name</span>,<span class="hljs-attr">value</span>:n.<span class="hljs-title function_">replace</span>(<span class="hljs-title class_">Et</span>,<span class="hljs-string">&quot;\r\n&quot;</span>)&#125;&#125;).<span class="hljs-title function_">get</span>()&#125;&#125;);<span class="hljs-keyword">var</span> <span class="hljs-title class_">Nt</span>=<span class="hljs-regexp">/%20/g</span>,jt=<span class="hljs-regexp">/#.*$/</span>,<span class="hljs-title class_">Dt</span>=<span class="hljs-regexp">/([?&amp;])_=[^&amp;]*/</span>,qt=<span class="hljs-regexp">/^(.*?):[ \t]*([^\r\n]*)$/gm</span>,<span class="hljs-title class_">Lt</span>=<span class="hljs-regexp">/^(?:GET|HEAD)$/</span>,<span class="hljs-title class_">Ht</span>=<span class="hljs-regexp">/^\/\//</span>,<span class="hljs-title class_">Ot</span>=&#123;&#125;,<span class="hljs-title class_">Pt</span>=&#123;&#125;,<span class="hljs-title class_">Rt</span>=<span class="hljs-string">&quot;*/&quot;</span>.<span class="hljs-title function_">concat</span>(<span class="hljs-string">&quot;*&quot;</span>),<span class="hljs-title class_">Mt</span>=E.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;a&quot;</span>);<span class="hljs-keyword">function</span> <span class="hljs-title function_">It</span>(<span class="hljs-params">o</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-string">&quot;string&quot;</span>!=<span class="hljs-keyword">typeof</span> e&amp;&amp;(t=e,e=<span class="hljs-string">&quot;*&quot;</span>);<span class="hljs-keyword">var</span> n,r=<span class="hljs-number">0</span>,i=e.<span class="hljs-title function_">toLowerCase</span>().<span class="hljs-title function_">match</span>(P)||[];<span class="hljs-keyword">if</span>(<span class="hljs-title function_">m</span>(t))<span class="hljs-keyword">while</span>(n=i[r++])<span class="hljs-string">&quot;+&quot;</span>===n[<span class="hljs-number">0</span>]?(n=n.<span class="hljs-title function_">slice</span>(<span class="hljs-number">1</span>)||<span class="hljs-string">&quot;*&quot;</span>,(o[n]=o[n]||[]).<span class="hljs-title function_">unshift</span>(t)):(o[n]=o[n]||[]).<span class="hljs-title function_">push</span>(t)&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">Wt</span>(<span class="hljs-params">t,i,o,a</span>)&#123;<span class="hljs-keyword">var</span> s=&#123;&#125;,u=t===<span class="hljs-title class_">Pt</span>;<span class="hljs-keyword">function</span> <span class="hljs-title function_">l</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> r;<span class="hljs-keyword">return</span> s[e]=!<span class="hljs-number">0</span>,S.<span class="hljs-title function_">each</span>(t[e]||[],<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n=<span class="hljs-title function_">t</span>(i,o,a);<span class="hljs-keyword">return</span><span class="hljs-string">&quot;string&quot;</span>!=<span class="hljs-keyword">typeof</span> n||u||s[n]?u?!(r=n):<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>:(i.<span class="hljs-property">dataTypes</span>.<span class="hljs-title function_">unshift</span>(n),<span class="hljs-title function_">l</span>(n),!<span class="hljs-number">1</span>)&#125;),r&#125;<span class="hljs-keyword">return</span> <span class="hljs-title function_">l</span>(i.<span class="hljs-property">dataTypes</span>[<span class="hljs-number">0</span>])||!s[<span class="hljs-string">&quot;*&quot;</span>]&amp;&amp;<span class="hljs-title function_">l</span>(<span class="hljs-string">&quot;*&quot;</span>)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">Ft</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n,r,i=S.<span class="hljs-property">ajaxSettings</span>.<span class="hljs-property">flatOptions</span>||&#123;&#125;;<span class="hljs-keyword">for</span>(n <span class="hljs-keyword">in</span> t)<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==t[n]&amp;&amp;((i[n]?<span class="hljs-attr">e</span>:r||(r=&#123;&#125;))[n]=t[n]);<span class="hljs-keyword">return</span> r&amp;&amp;S.<span class="hljs-title function_">extend</span>(!<span class="hljs-number">0</span>,e,r),e&#125;<span class="hljs-title class_">Mt</span>.<span class="hljs-property">href</span>=bt.<span class="hljs-property">href</span>,S.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">active</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">lastModified</span>:&#123;&#125;,<span class="hljs-attr">etag</span>:&#123;&#125;,<span class="hljs-attr">ajaxSettings</span>:&#123;<span class="hljs-attr">url</span>:bt.<span class="hljs-property">href</span>,<span class="hljs-attr">type</span>:<span class="hljs-string">&quot;GET&quot;</span>,<span class="hljs-attr">isLocal</span>:<span class="hljs-regexp">/^(?:about|app|app-storage|.+-extension|file|res|widget):$/</span>.<span class="hljs-title function_">test</span>(bt.<span class="hljs-property">protocol</span>),<span class="hljs-attr">global</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">processData</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">async</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">contentType</span>:<span class="hljs-string">&quot;application/x-www-form-urlencoded; charset=UTF-8&quot;</span>,<span class="hljs-attr">accepts</span>:&#123;<span class="hljs-string">&quot;*&quot;</span>:<span class="hljs-title class_">Rt</span>,<span class="hljs-attr">text</span>:<span class="hljs-string">&quot;text/plain&quot;</span>,<span class="hljs-attr">html</span>:<span class="hljs-string">&quot;text/html&quot;</span>,<span class="hljs-attr">xml</span>:<span class="hljs-string">&quot;application/xml, text/xml&quot;</span>,<span class="hljs-attr">json</span>:<span class="hljs-string">&quot;application/json, text/javascript&quot;</span>&#125;,<span class="hljs-attr">contents</span>:&#123;<span class="hljs-attr">xml</span>:<span class="hljs-regexp">/\bxml\b/</span>,<span class="hljs-attr">html</span>:<span class="hljs-regexp">/\bhtml/</span>,<span class="hljs-attr">json</span>:<span class="hljs-regexp">/\bjson\b/</span>&#125;,<span class="hljs-attr">responseFields</span>:&#123;<span class="hljs-attr">xml</span>:<span class="hljs-string">&quot;responseXML&quot;</span>,<span class="hljs-attr">text</span>:<span class="hljs-string">&quot;responseText&quot;</span>,<span class="hljs-attr">json</span>:<span class="hljs-string">&quot;responseJSON&quot;</span>&#125;,<span class="hljs-attr">converters</span>:&#123;<span class="hljs-string">&quot;* text&quot;</span>:<span class="hljs-title class_">String</span>,<span class="hljs-string">&quot;text html&quot;</span>:!<span class="hljs-number">0</span>,<span class="hljs-string">&quot;text json&quot;</span>:<span class="hljs-title class_">JSON</span>.<span class="hljs-property">parse</span>,<span class="hljs-string">&quot;text xml&quot;</span>:S.<span class="hljs-property">parseXML</span>&#125;,<span class="hljs-attr">flatOptions</span>:&#123;<span class="hljs-attr">url</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">context</span>:!<span class="hljs-number">0</span>&#125;&#125;,<span class="hljs-attr">ajaxSetup</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span> t?<span class="hljs-title class_">Ft</span>(<span class="hljs-title class_">Ft</span>(e,S.<span class="hljs-property">ajaxSettings</span>),t):<span class="hljs-title class_">Ft</span>(S.<span class="hljs-property">ajaxSettings</span>,e)&#125;,<span class="hljs-attr">ajaxPrefilter</span>:<span class="hljs-title class_">It</span>(<span class="hljs-title class_">Ot</span>),<span class="hljs-attr">ajaxTransport</span>:<span class="hljs-title class_">It</span>(<span class="hljs-title class_">Pt</span>),<span class="hljs-attr">ajax</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-string">&quot;object&quot;</span>==<span class="hljs-keyword">typeof</span> e&amp;&amp;(t=e,e=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>),t=t||&#123;&#125;;<span class="hljs-keyword">var</span> c,f,p,n,d,r,h,g,i,o,v=S.<span class="hljs-title function_">ajaxSetup</span>(&#123;&#125;,t),y=v.<span class="hljs-property">context</span>||v,m=v.<span class="hljs-property">context</span>&amp;&amp;(y.<span class="hljs-property">nodeType</span>||y.<span class="hljs-property">jquery</span>)?<span class="hljs-title function_">S</span>(y):S.<span class="hljs-property">event</span>,x=S.<span class="hljs-title class_">Deferred</span>(),b=S.<span class="hljs-title class_">Callbacks</span>(<span class="hljs-string">&quot;once memory&quot;</span>),w=v.<span class="hljs-property">statusCode</span>||&#123;&#125;,a=&#123;&#125;,s=&#123;&#125;,u=<span class="hljs-string">&quot;canceled&quot;</span>,T=&#123;<span class="hljs-attr">readyState</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">getResponseHeader</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t;<span class="hljs-keyword">if</span>(h)&#123;<span class="hljs-keyword">if</span>(!n)&#123;n=&#123;&#125;;<span class="hljs-keyword">while</span>(t=qt.<span class="hljs-title function_">exec</span>(p))n[t[<span class="hljs-number">1</span>].<span class="hljs-title function_">toLowerCase</span>()+<span class="hljs-string">&quot; &quot;</span>]=(n[t[<span class="hljs-number">1</span>].<span class="hljs-title function_">toLowerCase</span>()+<span class="hljs-string">&quot; &quot;</span>]||[]).<span class="hljs-title function_">concat</span>(t[<span class="hljs-number">2</span>])&#125;t=n[e.<span class="hljs-title function_">toLowerCase</span>()+<span class="hljs-string">&quot; &quot;</span>]&#125;<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>==t?<span class="hljs-attr">null</span>:t.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;, &quot;</span>)&#125;,<span class="hljs-attr">getAllResponseHeaders</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> h?<span class="hljs-attr">p</span>:<span class="hljs-literal">null</span>&#125;,<span class="hljs-attr">setRequestHeader</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>==h&amp;&amp;(e=s[e.<span class="hljs-title function_">toLowerCase</span>()]=s[e.<span class="hljs-title function_">toLowerCase</span>()]||e,a[e]=t),<span class="hljs-variable language_">this</span>&#125;,<span class="hljs-attr">overrideMimeType</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>==h&amp;&amp;(v.<span class="hljs-property">mimeType</span>=e),<span class="hljs-variable language_">this</span>&#125;,<span class="hljs-attr">statusCode</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t;<span class="hljs-keyword">if</span>(e)<span class="hljs-keyword">if</span>(h)T.<span class="hljs-title function_">always</span>(e[T.<span class="hljs-property">status</span>]);<span class="hljs-keyword">else</span> <span class="hljs-keyword">for</span>(t <span class="hljs-keyword">in</span> e)w[t]=[w[t],e[t]];<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>&#125;,<span class="hljs-attr">abort</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=e||u;<span class="hljs-keyword">return</span> c&amp;&amp;c.<span class="hljs-title function_">abort</span>(t),<span class="hljs-title function_">l</span>(<span class="hljs-number">0</span>,t),<span class="hljs-variable language_">this</span>&#125;&#125;;<span class="hljs-keyword">if</span>(x.<span class="hljs-title function_">promise</span>(T),v.<span class="hljs-property">url</span>=((e||v.<span class="hljs-property">url</span>||bt.<span class="hljs-property">href</span>)+<span class="hljs-string">&quot;&quot;</span>).<span class="hljs-title function_">replace</span>(<span class="hljs-title class_">Ht</span>,bt.<span class="hljs-property">protocol</span>+<span class="hljs-string">&quot;//&quot;</span>),v.<span class="hljs-property">type</span>=t.<span class="hljs-property">method</span>||t.<span class="hljs-property">type</span>||v.<span class="hljs-property">method</span>||v.<span class="hljs-property">type</span>,v.<span class="hljs-property">dataTypes</span>=(v.<span class="hljs-property">dataType</span>||<span class="hljs-string">&quot;*&quot;</span>).<span class="hljs-title function_">toLowerCase</span>().<span class="hljs-title function_">match</span>(P)||[<span class="hljs-string">&quot;&quot;</span>],<span class="hljs-literal">null</span>==v.<span class="hljs-property">crossDomain</span>)&#123;r=E.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;a&quot;</span>);<span class="hljs-keyword">try</span>&#123;r.<span class="hljs-property">href</span>=v.<span class="hljs-property">url</span>,r.<span class="hljs-property">href</span>=r.<span class="hljs-property">href</span>,v.<span class="hljs-property">crossDomain</span>=<span class="hljs-title class_">Mt</span>.<span class="hljs-property">protocol</span>+<span class="hljs-string">&quot;//&quot;</span>+<span class="hljs-title class_">Mt</span>.<span class="hljs-property">host</span>!=r.<span class="hljs-property">protocol</span>+<span class="hljs-string">&quot;//&quot;</span>+r.<span class="hljs-property">host</span>&#125;<span class="hljs-keyword">catch</span>(e)&#123;v.<span class="hljs-property">crossDomain</span>=!<span class="hljs-number">0</span>&#125;&#125;<span class="hljs-keyword">if</span>(v.<span class="hljs-property">data</span>&amp;&amp;v.<span class="hljs-property">processData</span>&amp;&amp;<span class="hljs-string">&quot;string&quot;</span>!=<span class="hljs-keyword">typeof</span> v.<span class="hljs-property">data</span>&amp;&amp;(v.<span class="hljs-property">data</span>=S.<span class="hljs-title function_">param</span>(v.<span class="hljs-property">data</span>,v.<span class="hljs-property">traditional</span>)),<span class="hljs-title class_">Wt</span>(<span class="hljs-title class_">Ot</span>,v,t,T),h)<span class="hljs-keyword">return</span> T;<span class="hljs-keyword">for</span>(i <span class="hljs-title function_">in</span>(g=S.<span class="hljs-property">event</span>&amp;&amp;v.<span class="hljs-property">global</span>)&amp;&amp;<span class="hljs-number">0</span>==S.<span class="hljs-property">active</span>++&amp;&amp;S.<span class="hljs-property">event</span>.<span class="hljs-title function_">trigger</span>(<span class="hljs-string">&quot;ajaxStart&quot;</span>),v.<span class="hljs-property">type</span>=v.<span class="hljs-property">type</span>.<span class="hljs-title function_">toUpperCase</span>(),v.<span class="hljs-property">hasContent</span>=!<span class="hljs-title class_">Lt</span>.<span class="hljs-title function_">test</span>(v.<span class="hljs-property">type</span>),f=v.<span class="hljs-property">url</span>.<span class="hljs-title function_">replace</span>(jt,<span class="hljs-string">&quot;&quot;</span>),v.<span class="hljs-property">hasContent</span>?v.<span class="hljs-property">data</span>&amp;&amp;v.<span class="hljs-property">processData</span>&amp;&amp;<span class="hljs-number">0</span>===(v.<span class="hljs-property">contentType</span>||<span class="hljs-string">&quot;&quot;</span>).<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span>)&amp;&amp;(v.<span class="hljs-property">data</span>=v.<span class="hljs-property">data</span>.<span class="hljs-title function_">replace</span>(<span class="hljs-title class_">Nt</span>,<span class="hljs-string">&quot;+&quot;</span>)):(o=v.<span class="hljs-property">url</span>.<span class="hljs-title function_">slice</span>(f.<span class="hljs-property">length</span>),v.<span class="hljs-property">data</span>&amp;&amp;(v.<span class="hljs-property">processData</span>||<span class="hljs-string">&quot;string&quot;</span>==<span class="hljs-keyword">typeof</span> v.<span class="hljs-property">data</span>)&amp;&amp;(f+=(<span class="hljs-title class_">Tt</span>.<span class="hljs-title function_">test</span>(f)?<span class="hljs-string">&quot;&amp;&quot;</span>:<span class="hljs-string">&quot;?&quot;</span>)+v.<span class="hljs-property">data</span>,<span class="hljs-keyword">delete</span> v.<span class="hljs-property">data</span>),!<span class="hljs-number">1</span>===v.<span class="hljs-property">cache</span>&amp;&amp;(f=f.<span class="hljs-title function_">replace</span>(<span class="hljs-title class_">Dt</span>,<span class="hljs-string">&quot;$1&quot;</span>),o=(<span class="hljs-title class_">Tt</span>.<span class="hljs-title function_">test</span>(f)?<span class="hljs-string">&quot;&amp;&quot;</span>:<span class="hljs-string">&quot;?&quot;</span>)+<span class="hljs-string">&quot;_=&quot;</span>+wt.<span class="hljs-property">guid</span>+++o),v.<span class="hljs-property">url</span>=f+o),v.<span class="hljs-property">ifModified</span>&amp;&amp;(S.<span class="hljs-property">lastModified</span>[f]&amp;&amp;T.<span class="hljs-title function_">setRequestHeader</span>(<span class="hljs-string">&quot;If-Modified-Since&quot;</span>,S.<span class="hljs-property">lastModified</span>[f]),S.<span class="hljs-property">etag</span>[f]&amp;&amp;T.<span class="hljs-title function_">setRequestHeader</span>(<span class="hljs-string">&quot;If-None-Match&quot;</span>,S.<span class="hljs-property">etag</span>[f])),(v.<span class="hljs-property">data</span>&amp;&amp;v.<span class="hljs-property">hasContent</span>&amp;&amp;!<span class="hljs-number">1</span>!==v.<span class="hljs-property">contentType</span>||t.<span class="hljs-property">contentType</span>)&amp;&amp;T.<span class="hljs-title function_">setRequestHeader</span>(<span class="hljs-string">&quot;Content-Type&quot;</span>,v.<span class="hljs-property">contentType</span>),T.<span class="hljs-title function_">setRequestHeader</span>(<span class="hljs-string">&quot;Accept&quot;</span>,v.<span class="hljs-property">dataTypes</span>[<span class="hljs-number">0</span>]&amp;&amp;v.<span class="hljs-property">accepts</span>[v.<span class="hljs-property">dataTypes</span>[<span class="hljs-number">0</span>]]?v.<span class="hljs-property">accepts</span>[v.<span class="hljs-property">dataTypes</span>[<span class="hljs-number">0</span>]]+(<span class="hljs-string">&quot;*&quot;</span>!==v.<span class="hljs-property">dataTypes</span>[<span class="hljs-number">0</span>]?<span class="hljs-string">&quot;, &quot;</span>+<span class="hljs-title class_">Rt</span>+<span class="hljs-string">&quot;; q=0.01&quot;</span>:<span class="hljs-string">&quot;&quot;</span>):v.<span class="hljs-property">accepts</span>[<span class="hljs-string">&quot;*&quot;</span>]),v.<span class="hljs-property">headers</span>)T.<span class="hljs-title function_">setRequestHeader</span>(i,v.<span class="hljs-property">headers</span>[i]);<span class="hljs-keyword">if</span>(v.<span class="hljs-property">beforeSend</span>&amp;&amp;(!<span class="hljs-number">1</span>===v.<span class="hljs-property">beforeSend</span>.<span class="hljs-title function_">call</span>(y,T,v)||h))<span class="hljs-keyword">return</span> T.<span class="hljs-title function_">abort</span>();<span class="hljs-keyword">if</span>(u=<span class="hljs-string">&quot;abort&quot;</span>,b.<span class="hljs-title function_">add</span>(v.<span class="hljs-property">complete</span>),T.<span class="hljs-title function_">done</span>(v.<span class="hljs-property">success</span>),T.<span class="hljs-title function_">fail</span>(v.<span class="hljs-property">error</span>),c=<span class="hljs-title class_">Wt</span>(<span class="hljs-title class_">Pt</span>,v,t,T))&#123;<span class="hljs-keyword">if</span>(T.<span class="hljs-property">readyState</span>=<span class="hljs-number">1</span>,g&amp;&amp;m.<span class="hljs-title function_">trigger</span>(<span class="hljs-string">&quot;ajaxSend&quot;</span>,[T,v]),h)<span class="hljs-keyword">return</span> T;v.<span class="hljs-property">async</span>&amp;&amp;<span class="hljs-number">0</span>&lt;v.<span class="hljs-property">timeout</span>&amp;&amp;(d=C.<span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;T.<span class="hljs-title function_">abort</span>(<span class="hljs-string">&quot;timeout&quot;</span>)&#125;,v.<span class="hljs-property">timeout</span>));<span class="hljs-keyword">try</span>&#123;h=!<span class="hljs-number">1</span>,c.<span class="hljs-title function_">send</span>(a,l)&#125;<span class="hljs-keyword">catch</span>(e)&#123;<span class="hljs-keyword">if</span>(h)<span class="hljs-keyword">throw</span> e;<span class="hljs-title function_">l</span>(-<span class="hljs-number">1</span>,e)&#125;&#125;<span class="hljs-keyword">else</span> <span class="hljs-title function_">l</span>(-<span class="hljs-number">1</span>,<span class="hljs-string">&quot;No Transport&quot;</span>);<span class="hljs-keyword">function</span> <span class="hljs-title function_">l</span>(<span class="hljs-params">e,t,n,r</span>)&#123;<span class="hljs-keyword">var</span> i,o,a,s,u,l=t;h||(h=!<span class="hljs-number">0</span>,d&amp;&amp;C.<span class="hljs-built_in">clearTimeout</span>(d),c=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>,p=r||<span class="hljs-string">&quot;&quot;</span>,T.<span class="hljs-property">readyState</span>=<span class="hljs-number">0</span>&lt;e?<span class="hljs-number">4</span>:<span class="hljs-number">0</span>,i=<span class="hljs-number">200</span>&lt;=e&amp;&amp;e&lt;<span class="hljs-number">300</span>||<span class="hljs-number">304</span>===e,n&amp;&amp;(s=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r,i,o,a,s=e.<span class="hljs-property">contents</span>,u=e.<span class="hljs-property">dataTypes</span>;<span class="hljs-keyword">while</span>(<span class="hljs-string">&quot;*&quot;</span>===u[<span class="hljs-number">0</span>])u.<span class="hljs-title function_">shift</span>(),<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===r&amp;&amp;(r=e.<span class="hljs-property">mimeType</span>||t.<span class="hljs-title function_">getResponseHeader</span>(<span class="hljs-string">&quot;Content-Type&quot;</span>));<span class="hljs-keyword">if</span>(r)<span class="hljs-keyword">for</span>(i <span class="hljs-keyword">in</span> s)<span class="hljs-keyword">if</span>(s[i]&amp;&amp;s[i].<span class="hljs-title function_">test</span>(r))&#123;u.<span class="hljs-title function_">unshift</span>(i);<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">if</span>(u[<span class="hljs-number">0</span>]<span class="hljs-keyword">in</span> n)o=u[<span class="hljs-number">0</span>];<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">for</span>(i <span class="hljs-keyword">in</span> n)&#123;<span class="hljs-keyword">if</span>(!u[<span class="hljs-number">0</span>]||e.<span class="hljs-property">converters</span>[i+<span class="hljs-string">&quot; &quot;</span>+u[<span class="hljs-number">0</span>]])&#123;o=i;<span class="hljs-keyword">break</span>&#125;a||(a=i)&#125;o=o||a&#125;<span class="hljs-keyword">if</span>(o)<span class="hljs-keyword">return</span> o!==u[<span class="hljs-number">0</span>]&amp;&amp;u.<span class="hljs-title function_">unshift</span>(o),n[o]&#125;(v,T,n)),!i&amp;&amp;-<span class="hljs-number">1</span>&lt;S.<span class="hljs-title function_">inArray</span>(<span class="hljs-string">&quot;script&quot;</span>,v.<span class="hljs-property">dataTypes</span>)&amp;&amp;S.<span class="hljs-title function_">inArray</span>(<span class="hljs-string">&quot;json&quot;</span>,v.<span class="hljs-property">dataTypes</span>)&lt;<span class="hljs-number">0</span>&amp;&amp;(v.<span class="hljs-property">converters</span>[<span class="hljs-string">&quot;text script&quot;</span>]=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;&#125;),s=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n,r</span>)&#123;<span class="hljs-keyword">var</span> i,o,a,s,u,l=&#123;&#125;,c=e.<span class="hljs-property">dataTypes</span>.<span class="hljs-title function_">slice</span>();<span class="hljs-keyword">if</span>(c[<span class="hljs-number">1</span>])<span class="hljs-keyword">for</span>(a <span class="hljs-keyword">in</span> e.<span class="hljs-property">converters</span>)l[a.<span class="hljs-title function_">toLowerCase</span>()]=e.<span class="hljs-property">converters</span>[a];o=c.<span class="hljs-title function_">shift</span>();<span class="hljs-keyword">while</span>(o)<span class="hljs-keyword">if</span>(e.<span class="hljs-property">responseFields</span>[o]&amp;&amp;(n[e.<span class="hljs-property">responseFields</span>[o]]=t),!u&amp;&amp;r&amp;&amp;e.<span class="hljs-property">dataFilter</span>&amp;&amp;(t=e.<span class="hljs-title function_">dataFilter</span>(t,e.<span class="hljs-property">dataType</span>)),u=o,o=c.<span class="hljs-title function_">shift</span>())<span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;*&quot;</span>===o)o=u;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;*&quot;</span>!==u&amp;&amp;u!==o)&#123;<span class="hljs-keyword">if</span>(!(a=l[u+<span class="hljs-string">&quot; &quot;</span>+o]||l[<span class="hljs-string">&quot;* &quot;</span>+o]))<span class="hljs-keyword">for</span>(i <span class="hljs-keyword">in</span> l)<span class="hljs-keyword">if</span>((s=i.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot; &quot;</span>))[<span class="hljs-number">1</span>]===o&amp;&amp;(a=l[u+<span class="hljs-string">&quot; &quot;</span>+s[<span class="hljs-number">0</span>]]||l[<span class="hljs-string">&quot;* &quot;</span>+s[<span class="hljs-number">0</span>]]))&#123;!<span class="hljs-number">0</span>===a?a=l[i]:!<span class="hljs-number">0</span>!==l[i]&amp;&amp;(o=s[<span class="hljs-number">0</span>],c.<span class="hljs-title function_">unshift</span>(s[<span class="hljs-number">1</span>]));<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">if</span>(!<span class="hljs-number">0</span>!==a)<span class="hljs-keyword">if</span>(a&amp;&amp;e[<span class="hljs-string">&quot;throws&quot;</span>])t=<span class="hljs-title function_">a</span>(t);<span class="hljs-keyword">else</span> <span class="hljs-keyword">try</span>&#123;t=<span class="hljs-title function_">a</span>(t)&#125;<span class="hljs-keyword">catch</span>(e)&#123;<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">state</span>:<span class="hljs-string">&quot;parsererror&quot;</span>,<span class="hljs-attr">error</span>:a?<span class="hljs-attr">e</span>:<span class="hljs-string">&quot;No conversion from &quot;</span>+u+<span class="hljs-string">&quot; to &quot;</span>+o&#125;&#125;&#125;<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">state</span>:<span class="hljs-string">&quot;success&quot;</span>,<span class="hljs-attr">data</span>:t&#125;&#125;(v,s,T,i),i?(v.<span class="hljs-property">ifModified</span>&amp;&amp;((u=T.<span class="hljs-title function_">getResponseHeader</span>(<span class="hljs-string">&quot;Last-Modified&quot;</span>))&amp;&amp;(S.<span class="hljs-property">lastModified</span>[f]=u),(u=T.<span class="hljs-title function_">getResponseHeader</span>(<span class="hljs-string">&quot;etag&quot;</span>))&amp;&amp;(S.<span class="hljs-property">etag</span>[f]=u)),<span class="hljs-number">204</span>===e||<span class="hljs-string">&quot;HEAD&quot;</span>===v.<span class="hljs-property">type</span>?l=<span class="hljs-string">&quot;nocontent&quot;</span>:<span class="hljs-number">304</span>===e?l=<span class="hljs-string">&quot;notmodified&quot;</span>:(l=s.<span class="hljs-property">state</span>,o=s.<span class="hljs-property">data</span>,i=!(a=s.<span class="hljs-property">error</span>))):(a=l,!e&amp;&amp;l||(l=<span class="hljs-string">&quot;error&quot;</span>,e&lt;<span class="hljs-number">0</span>&amp;&amp;(e=<span class="hljs-number">0</span>))),T.<span class="hljs-property">status</span>=e,T.<span class="hljs-property">statusText</span>=(t||l)+<span class="hljs-string">&quot;&quot;</span>,i?x.<span class="hljs-title function_">resolveWith</span>(y,[o,l,T]):x.<span class="hljs-title function_">rejectWith</span>(y,[T,l,a]),T.<span class="hljs-title function_">statusCode</span>(w),w=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>,g&amp;&amp;m.<span class="hljs-title function_">trigger</span>(i?<span class="hljs-string">&quot;ajaxSuccess&quot;</span>:<span class="hljs-string">&quot;ajaxError&quot;</span>,[T,v,i?<span class="hljs-attr">o</span>:a]),b.<span class="hljs-title function_">fireWith</span>(y,[T,l]),g&amp;&amp;(m.<span class="hljs-title function_">trigger</span>(<span class="hljs-string">&quot;ajaxComplete&quot;</span>,[T,v]),--S.<span class="hljs-property">active</span>||S.<span class="hljs-property">event</span>.<span class="hljs-title function_">trigger</span>(<span class="hljs-string">&quot;ajaxStop&quot;</span>)))&#125;<span class="hljs-keyword">return</span> T&#125;,<span class="hljs-attr">getJSON</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">return</span> S.<span class="hljs-title function_">get</span>(e,t,n,<span class="hljs-string">&quot;json&quot;</span>)&#125;,<span class="hljs-attr">getScript</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span> S.<span class="hljs-title function_">get</span>(e,<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>,t,<span class="hljs-string">&quot;script&quot;</span>)&#125;&#125;),S.<span class="hljs-title function_">each</span>([<span class="hljs-string">&quot;get&quot;</span>,<span class="hljs-string">&quot;post&quot;</span>],<span class="hljs-keyword">function</span>(<span class="hljs-params">e,i</span>)&#123;S[i]=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n,r</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">m</span>(t)&amp;&amp;(r=r||n,n=t,t=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>),S.<span class="hljs-title function_">ajax</span>(S.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">url</span>:e,<span class="hljs-attr">type</span>:i,<span class="hljs-attr">dataType</span>:r,<span class="hljs-attr">data</span>:t,<span class="hljs-attr">success</span>:n&#125;,S.<span class="hljs-title function_">isPlainObject</span>(e)&amp;&amp;e))&#125;&#125;),S.<span class="hljs-title function_">ajaxPrefilter</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t;<span class="hljs-keyword">for</span>(t <span class="hljs-keyword">in</span> e.<span class="hljs-property">headers</span>)<span class="hljs-string">&quot;content-type&quot;</span>===t.<span class="hljs-title function_">toLowerCase</span>()&amp;&amp;(e.<span class="hljs-property">contentType</span>=e.<span class="hljs-property">headers</span>[t]||<span class="hljs-string">&quot;&quot;</span>)&#125;),S.<span class="hljs-property">_evalUrl</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">return</span> S.<span class="hljs-title function_">ajax</span>(&#123;<span class="hljs-attr">url</span>:e,<span class="hljs-attr">type</span>:<span class="hljs-string">&quot;GET&quot;</span>,<span class="hljs-attr">dataType</span>:<span class="hljs-string">&quot;script&quot;</span>,<span class="hljs-attr">cache</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">async</span>:!<span class="hljs-number">1</span>,<span class="hljs-attr">global</span>:!<span class="hljs-number">1</span>,<span class="hljs-attr">converters</span>:&#123;<span class="hljs-string">&quot;text script&quot;</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;&#125;&#125;,<span class="hljs-attr">dataFilter</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;S.<span class="hljs-title function_">globalEval</span>(e,t,n)&#125;&#125;)&#125;,S.<span class="hljs-property">fn</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">wrapAll</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>[<span class="hljs-number">0</span>]&amp;&amp;(<span class="hljs-title function_">m</span>(e)&amp;&amp;(e=e.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>[<span class="hljs-number">0</span>])),t=<span class="hljs-title function_">S</span>(e,<span class="hljs-variable language_">this</span>[<span class="hljs-number">0</span>].<span class="hljs-property">ownerDocument</span>).<span class="hljs-title function_">eq</span>(<span class="hljs-number">0</span>).<span class="hljs-title function_">clone</span>(!<span class="hljs-number">0</span>),<span class="hljs-variable language_">this</span>[<span class="hljs-number">0</span>].<span class="hljs-property">parentNode</span>&amp;&amp;t.<span class="hljs-title function_">insertBefore</span>(<span class="hljs-variable language_">this</span>[<span class="hljs-number">0</span>]),t.<span class="hljs-title function_">map</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> e=<span class="hljs-variable language_">this</span>;<span class="hljs-keyword">while</span>(e.<span class="hljs-property">firstElementChild</span>)e=e.<span class="hljs-property">firstElementChild</span>;<span class="hljs-keyword">return</span> e&#125;).<span class="hljs-title function_">append</span>(<span class="hljs-variable language_">this</span>)),<span class="hljs-variable language_">this</span>&#125;,<span class="hljs-attr">wrapInner</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">m</span>(n)?<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-title function_">S</span>(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">wrapInner</span>(n.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>,e))&#125;):<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> e=<span class="hljs-title function_">S</span>(<span class="hljs-variable language_">this</span>),t=e.<span class="hljs-title function_">contents</span>();t.<span class="hljs-property">length</span>?t.<span class="hljs-title function_">wrapAll</span>(n):e.<span class="hljs-title function_">append</span>(n)&#125;)&#125;,<span class="hljs-attr">wrap</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>)&#123;<span class="hljs-keyword">var</span> n=<span class="hljs-title function_">m</span>(t);<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-title function_">S</span>(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">wrapAll</span>(n?t.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>,e):t)&#125;)&#125;,<span class="hljs-attr">unwrap</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">parent</span>(e).<span class="hljs-title function_">not</span>(<span class="hljs-string">&quot;body&quot;</span>).<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-title function_">S</span>(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">replaceWith</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">childNodes</span>)&#125;),<span class="hljs-variable language_">this</span>&#125;&#125;),S.<span class="hljs-property">expr</span>.<span class="hljs-property">pseudos</span>.<span class="hljs-property">hidden</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span>!S.<span class="hljs-property">expr</span>.<span class="hljs-property">pseudos</span>.<span class="hljs-title function_">visible</span>(e)&#125;,S.<span class="hljs-property">expr</span>.<span class="hljs-property">pseudos</span>.<span class="hljs-property">visible</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span>!!(e.<span class="hljs-property">offsetWidth</span>||e.<span class="hljs-property">offsetHeight</span>||e.<span class="hljs-title function_">getClientRects</span>().<span class="hljs-property">length</span>)&#125;,S.<span class="hljs-property">ajaxSettings</span>.<span class="hljs-property">xhr</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">try</span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> C.<span class="hljs-property">XMLHttpRequest</span>&#125;<span class="hljs-keyword">catch</span>(e)&#123;&#125;&#125;;<span class="hljs-keyword">var</span> <span class="hljs-title class_">Bt</span>=&#123;<span class="hljs-number">0</span>:<span class="hljs-number">200</span>,<span class="hljs-number">1223</span>:<span class="hljs-number">204</span>&#125;,$t=S.<span class="hljs-property">ajaxSettings</span>.<span class="hljs-title function_">xhr</span>();y.<span class="hljs-property">cors</span>=!!$t&amp;&amp;<span class="hljs-string">&quot;withCredentials&quot;</span><span class="hljs-keyword">in</span> $t,y.<span class="hljs-property">ajax</span>=$t=!!$t,S.<span class="hljs-title function_">ajaxTransport</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">i</span>)&#123;<span class="hljs-keyword">var</span> o,a;<span class="hljs-keyword">if</span>(y.<span class="hljs-property">cors</span>||$t&amp;&amp;!i.<span class="hljs-property">crossDomain</span>)<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">send</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n,r=i.<span class="hljs-title function_">xhr</span>();<span class="hljs-keyword">if</span>(r.<span class="hljs-title function_">open</span>(i.<span class="hljs-property">type</span>,i.<span class="hljs-property">url</span>,i.<span class="hljs-property">async</span>,i.<span class="hljs-property">username</span>,i.<span class="hljs-property">password</span>),i.<span class="hljs-property">xhrFields</span>)<span class="hljs-keyword">for</span>(n <span class="hljs-keyword">in</span> i.<span class="hljs-property">xhrFields</span>)r[n]=i.<span class="hljs-property">xhrFields</span>[n];<span class="hljs-keyword">for</span>(n <span class="hljs-keyword">in</span> i.<span class="hljs-property">mimeType</span>&amp;&amp;r.<span class="hljs-property">overrideMimeType</span>&amp;&amp;r.<span class="hljs-title function_">overrideMimeType</span>(i.<span class="hljs-property">mimeType</span>),i.<span class="hljs-property">crossDomain</span>||e[<span class="hljs-string">&quot;X-Requested-With&quot;</span>]||(e[<span class="hljs-string">&quot;X-Requested-With&quot;</span>]=<span class="hljs-string">&quot;XMLHttpRequest&quot;</span>),e)r.<span class="hljs-title function_">setRequestHeader</span>(n,e[n]);o=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;o&amp;&amp;(o=a=r.<span class="hljs-property">onload</span>=r.<span class="hljs-property">onerror</span>=r.<span class="hljs-property">onabort</span>=r.<span class="hljs-property">ontimeout</span>=r.<span class="hljs-property">onreadystatechange</span>=<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;abort&quot;</span>===e?r.<span class="hljs-title function_">abort</span>():<span class="hljs-string">&quot;error&quot;</span>===e?<span class="hljs-string">&quot;number&quot;</span>!=<span class="hljs-keyword">typeof</span> r.<span class="hljs-property">status</span>?<span class="hljs-title function_">t</span>(<span class="hljs-number">0</span>,<span class="hljs-string">&quot;error&quot;</span>):<span class="hljs-title function_">t</span>(r.<span class="hljs-property">status</span>,r.<span class="hljs-property">statusText</span>):<span class="hljs-title function_">t</span>(<span class="hljs-title class_">Bt</span>[r.<span class="hljs-property">status</span>]||r.<span class="hljs-property">status</span>,r.<span class="hljs-property">statusText</span>,<span class="hljs-string">&quot;text&quot;</span>!==(r.<span class="hljs-property">responseType</span>||<span class="hljs-string">&quot;text&quot;</span>)||<span class="hljs-string">&quot;string&quot;</span>!=<span class="hljs-keyword">typeof</span> r.<span class="hljs-property">responseText</span>?&#123;<span class="hljs-attr">binary</span>:r.<span class="hljs-property">response</span>&#125;:&#123;<span class="hljs-attr">text</span>:r.<span class="hljs-property">responseText</span>&#125;,r.<span class="hljs-title function_">getAllResponseHeaders</span>()))&#125;&#125;,r.<span class="hljs-property">onload</span>=<span class="hljs-title function_">o</span>(),a=r.<span class="hljs-property">onerror</span>=r.<span class="hljs-property">ontimeout</span>=<span class="hljs-title function_">o</span>(<span class="hljs-string">&quot;error&quot;</span>),<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>!==r.<span class="hljs-property">onabort</span>?r.<span class="hljs-property">onabort</span>=<span class="hljs-attr">a</span>:r.<span class="hljs-property">onreadystatechange</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-number">4</span>===r.<span class="hljs-property">readyState</span>&amp;&amp;C.<span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;o&amp;&amp;<span class="hljs-title function_">a</span>()&#125;)&#125;,o=<span class="hljs-title function_">o</span>(<span class="hljs-string">&quot;abort&quot;</span>);<span class="hljs-keyword">try</span>&#123;r.<span class="hljs-title function_">send</span>(i.<span class="hljs-property">hasContent</span>&amp;&amp;i.<span class="hljs-property">data</span>||<span class="hljs-literal">null</span>)&#125;<span class="hljs-keyword">catch</span>(e)&#123;<span class="hljs-keyword">if</span>(o)<span class="hljs-keyword">throw</span> e&#125;&#125;,<span class="hljs-attr">abort</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;o&amp;&amp;<span class="hljs-title function_">o</span>()&#125;&#125;&#125;),S.<span class="hljs-title function_">ajaxPrefilter</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;e.<span class="hljs-property">crossDomain</span>&amp;&amp;(e.<span class="hljs-property">contents</span>.<span class="hljs-property">script</span>=!<span class="hljs-number">1</span>)&#125;),S.<span class="hljs-title function_">ajaxSetup</span>(&#123;<span class="hljs-attr">accepts</span>:&#123;<span class="hljs-attr">script</span>:<span class="hljs-string">&quot;text/javascript, application/javascript, application/ecmascript, application/x-ecmascript&quot;</span>&#125;,<span class="hljs-attr">contents</span>:&#123;<span class="hljs-attr">script</span>:<span class="hljs-regexp">/\b(?:java|ecma)script\b/</span>&#125;,<span class="hljs-attr">converters</span>:&#123;<span class="hljs-string">&quot;text script&quot;</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> S.<span class="hljs-title function_">globalEval</span>(e),e&#125;&#125;&#125;),S.<span class="hljs-title function_">ajaxPrefilter</span>(<span class="hljs-string">&quot;script&quot;</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===e.<span class="hljs-property">cache</span>&amp;&amp;(e.<span class="hljs-property">cache</span>=!<span class="hljs-number">1</span>),e.<span class="hljs-property">crossDomain</span>&amp;&amp;(e.<span class="hljs-property">type</span>=<span class="hljs-string">&quot;GET&quot;</span>)&#125;),S.<span class="hljs-title function_">ajaxTransport</span>(<span class="hljs-string">&quot;script&quot;</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>)&#123;<span class="hljs-keyword">var</span> r,i;<span class="hljs-keyword">if</span>(n.<span class="hljs-property">crossDomain</span>||n.<span class="hljs-property">scriptAttrs</span>)<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">send</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;r=<span class="hljs-title function_">S</span>(<span class="hljs-string">&quot;&lt;script&gt;&quot;</span>).<span class="hljs-title function_">attr</span>(n.<span class="hljs-property">scriptAttrs</span>||&#123;&#125;).<span class="hljs-title function_">prop</span>(&#123;<span class="hljs-attr">charset</span>:n.<span class="hljs-property">scriptCharset</span>,<span class="hljs-attr">src</span>:n.<span class="hljs-property">url</span>&#125;).<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;load error&quot;</span>,i=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;r.<span class="hljs-title function_">remove</span>(),i=<span class="hljs-literal">null</span>,e&amp;&amp;<span class="hljs-title function_">t</span>(<span class="hljs-string">&quot;error&quot;</span>===e.<span class="hljs-property">type</span>?<span class="hljs-number">404</span>:<span class="hljs-number">200</span>,e.<span class="hljs-property">type</span>)&#125;),E.<span class="hljs-property">head</span>.<span class="hljs-title function_">appendChild</span>(r[<span class="hljs-number">0</span>])&#125;,<span class="hljs-attr">abort</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;i&amp;&amp;<span class="hljs-title function_">i</span>()&#125;&#125;&#125;);<span class="hljs-keyword">var</span> _t,zt=[],<span class="hljs-title class_">Ut</span>=<span class="hljs-regexp">/(=)\?(?=&amp;|$)|\?\?/</span>;S.<span class="hljs-title function_">ajaxSetup</span>(&#123;<span class="hljs-attr">jsonp</span>:<span class="hljs-string">&quot;callback&quot;</span>,<span class="hljs-attr">jsonpCallback</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> e=zt.<span class="hljs-title function_">pop</span>()||S.<span class="hljs-property">expando</span>+<span class="hljs-string">&quot;_&quot;</span>+wt.<span class="hljs-property">guid</span>++;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>[e]=!<span class="hljs-number">0</span>,e&#125;&#125;),S.<span class="hljs-title function_">ajaxPrefilter</span>(<span class="hljs-string">&quot;json jsonp&quot;</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r,i,o,a=!<span class="hljs-number">1</span>!==e.<span class="hljs-property">jsonp</span>&amp;&amp;(<span class="hljs-title class_">Ut</span>.<span class="hljs-title function_">test</span>(e.<span class="hljs-property">url</span>)?<span class="hljs-string">&quot;url&quot;</span>:<span class="hljs-string">&quot;string&quot;</span>==<span class="hljs-keyword">typeof</span> e.<span class="hljs-property">data</span>&amp;&amp;<span class="hljs-number">0</span>===(e.<span class="hljs-property">contentType</span>||<span class="hljs-string">&quot;&quot;</span>).<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span>)&amp;&amp;<span class="hljs-title class_">Ut</span>.<span class="hljs-title function_">test</span>(e.<span class="hljs-property">data</span>)&amp;&amp;<span class="hljs-string">&quot;data&quot;</span>);<span class="hljs-keyword">if</span>(a||<span class="hljs-string">&quot;jsonp&quot;</span>===e.<span class="hljs-property">dataTypes</span>[<span class="hljs-number">0</span>])<span class="hljs-keyword">return</span> r=e.<span class="hljs-property">jsonpCallback</span>=<span class="hljs-title function_">m</span>(e.<span class="hljs-property">jsonpCallback</span>)?e.<span class="hljs-title function_">jsonpCallback</span>():e.<span class="hljs-property">jsonpCallback</span>,a?e[a]=e[a].<span class="hljs-title function_">replace</span>(<span class="hljs-title class_">Ut</span>,<span class="hljs-string">&quot;$1&quot;</span>+r):!<span class="hljs-number">1</span>!==e.<span class="hljs-property">jsonp</span>&amp;&amp;(e.<span class="hljs-property">url</span>+=(<span class="hljs-title class_">Tt</span>.<span class="hljs-title function_">test</span>(e.<span class="hljs-property">url</span>)?<span class="hljs-string">&quot;&amp;&quot;</span>:<span class="hljs-string">&quot;?&quot;</span>)+e.<span class="hljs-property">jsonp</span>+<span class="hljs-string">&quot;=&quot;</span>+r),e.<span class="hljs-property">converters</span>[<span class="hljs-string">&quot;script json&quot;</span>]=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> o||S.<span class="hljs-title function_">error</span>(r+<span class="hljs-string">&quot; was not called&quot;</span>),o[<span class="hljs-number">0</span>]&#125;,e.<span class="hljs-property">dataTypes</span>[<span class="hljs-number">0</span>]=<span class="hljs-string">&quot;json&quot;</span>,i=C[r],C[r]=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;o=<span class="hljs-variable language_">arguments</span>&#125;,n.<span class="hljs-title function_">always</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===i?<span class="hljs-title function_">S</span>(C).<span class="hljs-title function_">removeProp</span>(r):C[r]=i,e[r]&amp;&amp;(e.<span class="hljs-property">jsonpCallback</span>=t.<span class="hljs-property">jsonpCallback</span>,zt.<span class="hljs-title function_">push</span>(r)),o&amp;&amp;<span class="hljs-title function_">m</span>(i)&amp;&amp;<span class="hljs-title function_">i</span>(o[<span class="hljs-number">0</span>]),o=i=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>&#125;),<span class="hljs-string">&quot;script&quot;</span>&#125;),y.<span class="hljs-property">createHTMLDocument</span>=((_t=E.<span class="hljs-property">implementation</span>.<span class="hljs-title function_">createHTMLDocument</span>(<span class="hljs-string">&quot;&quot;</span>).<span class="hljs-property">body</span>).<span class="hljs-property">innerHTML</span>=<span class="hljs-string">&quot;&lt;form&gt;&lt;/form&gt;&lt;form&gt;&lt;/form&gt;&quot;</span>,<span class="hljs-number">2</span>===_t.<span class="hljs-property">childNodes</span>.<span class="hljs-property">length</span>),S.<span class="hljs-property">parseHTML</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">return</span><span class="hljs-string">&quot;string&quot;</span>!=<span class="hljs-keyword">typeof</span> e?[]:(<span class="hljs-string">&quot;boolean&quot;</span>==<span class="hljs-keyword">typeof</span> t&amp;&amp;(n=t,t=!<span class="hljs-number">1</span>),t||(y.<span class="hljs-property">createHTMLDocument</span>?((r=(t=E.<span class="hljs-property">implementation</span>.<span class="hljs-title function_">createHTMLDocument</span>(<span class="hljs-string">&quot;&quot;</span>)).<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;base&quot;</span>)).<span class="hljs-property">href</span>=E.<span class="hljs-property">location</span>.<span class="hljs-property">href</span>,t.<span class="hljs-property">head</span>.<span class="hljs-title function_">appendChild</span>(r)):t=E),o=!n&amp;&amp;[],(i=N.<span class="hljs-title function_">exec</span>(e))?[t.<span class="hljs-title function_">createElement</span>(i[<span class="hljs-number">1</span>])]:(i=<span class="hljs-title function_">xe</span>([e],t,o),o&amp;&amp;o.<span class="hljs-property">length</span>&amp;&amp;<span class="hljs-title function_">S</span>(o).<span class="hljs-title function_">remove</span>(),S.<span class="hljs-title function_">merge</span>([],i.<span class="hljs-property">childNodes</span>)));<span class="hljs-keyword">var</span> r,i,o&#125;,S.<span class="hljs-property">fn</span>.<span class="hljs-property">load</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r,i,o,a=<span class="hljs-variable language_">this</span>,s=e.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot; &quot;</span>);<span class="hljs-keyword">return</span>-<span class="hljs-number">1</span>&lt;s&amp;&amp;(r=<span class="hljs-title function_">ht</span>(e.<span class="hljs-title function_">slice</span>(s)),e=e.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>,s)),<span class="hljs-title function_">m</span>(t)?(n=t,t=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>):t&amp;&amp;<span class="hljs-string">&quot;object&quot;</span>==<span class="hljs-keyword">typeof</span> t&amp;&amp;(i=<span class="hljs-string">&quot;POST&quot;</span>),<span class="hljs-number">0</span>&lt;a.<span class="hljs-property">length</span>&amp;&amp;S.<span class="hljs-title function_">ajax</span>(&#123;<span class="hljs-attr">url</span>:e,<span class="hljs-attr">type</span>:i||<span class="hljs-string">&quot;GET&quot;</span>,<span class="hljs-attr">dataType</span>:<span class="hljs-string">&quot;html&quot;</span>,<span class="hljs-attr">data</span>:t&#125;).<span class="hljs-title function_">done</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;o=<span class="hljs-variable language_">arguments</span>,a.<span class="hljs-title function_">html</span>(r?<span class="hljs-title function_">S</span>(<span class="hljs-string">&quot;&lt;div&gt;&quot;</span>).<span class="hljs-title function_">append</span>(S.<span class="hljs-title function_">parseHTML</span>(e)).<span class="hljs-title function_">find</span>(r):e)&#125;).<span class="hljs-title function_">always</span>(n&amp;&amp;<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;a.<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;n.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>,o||[e.<span class="hljs-property">responseText</span>,t,e])&#125;)&#125;),<span class="hljs-variable language_">this</span>&#125;,S.<span class="hljs-property">expr</span>.<span class="hljs-property">pseudos</span>.<span class="hljs-property">animated</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>)&#123;<span class="hljs-keyword">return</span> S.<span class="hljs-title function_">grep</span>(S.<span class="hljs-property">timers</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> t===e.<span class="hljs-property">elem</span>&#125;).<span class="hljs-property">length</span>&#125;,S.<span class="hljs-property">offset</span>=&#123;<span class="hljs-attr">setOffset</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r,i,o,a,s,u,l=S.<span class="hljs-title function_">css</span>(e,<span class="hljs-string">&quot;position&quot;</span>),c=<span class="hljs-title function_">S</span>(e),f=&#123;&#125;;<span class="hljs-string">&quot;static&quot;</span>===l&amp;&amp;(e.<span class="hljs-property">style</span>.<span class="hljs-property">position</span>=<span class="hljs-string">&quot;relative&quot;</span>),s=c.<span class="hljs-title function_">offset</span>(),o=S.<span class="hljs-title function_">css</span>(e,<span class="hljs-string">&quot;top&quot;</span>),u=S.<span class="hljs-title function_">css</span>(e,<span class="hljs-string">&quot;left&quot;</span>),(<span class="hljs-string">&quot;absolute&quot;</span>===l||<span class="hljs-string">&quot;fixed&quot;</span>===l)&amp;&amp;-<span class="hljs-number">1</span>&lt;(o+u).<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;auto&quot;</span>)?(a=(r=c.<span class="hljs-title function_">position</span>()).<span class="hljs-property">top</span>,i=r.<span class="hljs-property">left</span>):(a=<span class="hljs-built_in">parseFloat</span>(o)||<span class="hljs-number">0</span>,i=<span class="hljs-built_in">parseFloat</span>(u)||<span class="hljs-number">0</span>),<span class="hljs-title function_">m</span>(t)&amp;&amp;(t=t.<span class="hljs-title function_">call</span>(e,n,S.<span class="hljs-title function_">extend</span>(&#123;&#125;,s))),<span class="hljs-literal">null</span>!=t.<span class="hljs-property">top</span>&amp;&amp;(f.<span class="hljs-property">top</span>=t.<span class="hljs-property">top</span>-s.<span class="hljs-property">top</span>+a),<span class="hljs-literal">null</span>!=t.<span class="hljs-property">left</span>&amp;&amp;(f.<span class="hljs-property">left</span>=t.<span class="hljs-property">left</span>-s.<span class="hljs-property">left</span>+i),<span class="hljs-string">&quot;using&quot;</span><span class="hljs-keyword">in</span> t?t.<span class="hljs-property">using</span>.<span class="hljs-title function_">call</span>(e,f):c.<span class="hljs-title function_">css</span>(f)&#125;&#125;,S.<span class="hljs-property">fn</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">offset</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>)<span class="hljs-keyword">return</span> <span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===t?<span class="hljs-attr">this</span>:<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;S.<span class="hljs-property">offset</span>.<span class="hljs-title function_">setOffset</span>(<span class="hljs-variable language_">this</span>,t,e)&#125;);<span class="hljs-keyword">var</span> e,n,r=<span class="hljs-variable language_">this</span>[<span class="hljs-number">0</span>];<span class="hljs-keyword">return</span> r?r.<span class="hljs-title function_">getClientRects</span>().<span class="hljs-property">length</span>?(e=r.<span class="hljs-title function_">getBoundingClientRect</span>(),n=r.<span class="hljs-property">ownerDocument</span>.<span class="hljs-property">defaultView</span>,&#123;<span class="hljs-attr">top</span>:e.<span class="hljs-property">top</span>+n.<span class="hljs-property">pageYOffset</span>,<span class="hljs-attr">left</span>:e.<span class="hljs-property">left</span>+n.<span class="hljs-property">pageXOffset</span>&#125;):&#123;<span class="hljs-attr">top</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">left</span>:<span class="hljs-number">0</span>&#125;:<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>&#125;,<span class="hljs-attr">position</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-variable language_">this</span>[<span class="hljs-number">0</span>])&#123;<span class="hljs-keyword">var</span> e,t,n,r=<span class="hljs-variable language_">this</span>[<span class="hljs-number">0</span>],i=&#123;<span class="hljs-attr">top</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">left</span>:<span class="hljs-number">0</span>&#125;;<span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;fixed&quot;</span>===S.<span class="hljs-title function_">css</span>(r,<span class="hljs-string">&quot;position&quot;</span>))t=r.<span class="hljs-title function_">getBoundingClientRect</span>();<span class="hljs-keyword">else</span>&#123;t=<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">offset</span>(),n=r.<span class="hljs-property">ownerDocument</span>,e=r.<span class="hljs-property">offsetParent</span>||n.<span class="hljs-property">documentElement</span>;<span class="hljs-keyword">while</span>(e&amp;&amp;(e===n.<span class="hljs-property">body</span>||e===n.<span class="hljs-property">documentElement</span>)&amp;&amp;<span class="hljs-string">&quot;static&quot;</span>===S.<span class="hljs-title function_">css</span>(e,<span class="hljs-string">&quot;position&quot;</span>))e=e.<span class="hljs-property">parentNode</span>;e&amp;&amp;e!==r&amp;&amp;<span class="hljs-number">1</span>===e.<span class="hljs-property">nodeType</span>&amp;&amp;((i=<span class="hljs-title function_">S</span>(e).<span class="hljs-title function_">offset</span>()).<span class="hljs-property">top</span>+=S.<span class="hljs-title function_">css</span>(e,<span class="hljs-string">&quot;borderTopWidth&quot;</span>,!<span class="hljs-number">0</span>),i.<span class="hljs-property">left</span>+=S.<span class="hljs-title function_">css</span>(e,<span class="hljs-string">&quot;borderLeftWidth&quot;</span>,!<span class="hljs-number">0</span>))&#125;<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">top</span>:t.<span class="hljs-property">top</span>-i.<span class="hljs-property">top</span>-S.<span class="hljs-title function_">css</span>(r,<span class="hljs-string">&quot;marginTop&quot;</span>,!<span class="hljs-number">0</span>),<span class="hljs-attr">left</span>:t.<span class="hljs-property">left</span>-i.<span class="hljs-property">left</span>-S.<span class="hljs-title function_">css</span>(r,<span class="hljs-string">&quot;marginLeft&quot;</span>,!<span class="hljs-number">0</span>)&#125;&#125;&#125;,<span class="hljs-attr">offsetParent</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">map</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> e=<span class="hljs-variable language_">this</span>.<span class="hljs-property">offsetParent</span>;<span class="hljs-keyword">while</span>(e&amp;&amp;<span class="hljs-string">&quot;static&quot;</span>===S.<span class="hljs-title function_">css</span>(e,<span class="hljs-string">&quot;position&quot;</span>))e=e.<span class="hljs-property">offsetParent</span>;<span class="hljs-keyword">return</span> e||re&#125;)&#125;&#125;),S.<span class="hljs-title function_">each</span>(&#123;<span class="hljs-attr">scrollLeft</span>:<span class="hljs-string">&quot;pageXOffset&quot;</span>,<span class="hljs-attr">scrollTop</span>:<span class="hljs-string">&quot;pageYOffset&quot;</span>&#125;,<span class="hljs-keyword">function</span>(<span class="hljs-params">t,i</span>)&#123;<span class="hljs-keyword">var</span> o=<span class="hljs-string">&quot;pageYOffset&quot;</span>===i;S.<span class="hljs-property">fn</span>[t]=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> $(<span class="hljs-variable language_">this</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r;<span class="hljs-keyword">if</span>(<span class="hljs-title function_">x</span>(e)?r=<span class="hljs-attr">e</span>:<span class="hljs-number">9</span>===e.<span class="hljs-property">nodeType</span>&amp;&amp;(r=e.<span class="hljs-property">defaultView</span>),<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===n)<span class="hljs-keyword">return</span> r?r[i]:e[t];r?r.<span class="hljs-title function_">scrollTo</span>(o?r.<span class="hljs-property">pageXOffset</span>:n,o?<span class="hljs-attr">n</span>:r.<span class="hljs-property">pageYOffset</span>):e[t]=n&#125;,t,e,<span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>)&#125;&#125;),S.<span class="hljs-title function_">each</span>([<span class="hljs-string">&quot;top&quot;</span>,<span class="hljs-string">&quot;left&quot;</span>],<span class="hljs-keyword">function</span>(<span class="hljs-params">e,n</span>)&#123;S.<span class="hljs-property">cssHooks</span>[n]=<span class="hljs-title class_">Fe</span>(y.<span class="hljs-property">pixelPosition</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">if</span>(t)<span class="hljs-keyword">return</span> t=<span class="hljs-title class_">We</span>(e,n),<span class="hljs-title class_">Pe</span>.<span class="hljs-title function_">test</span>(t)?<span class="hljs-title function_">S</span>(e).<span class="hljs-title function_">position</span>()[n]+<span class="hljs-string">&quot;px&quot;</span>:t&#125;)&#125;),S.<span class="hljs-title function_">each</span>(&#123;<span class="hljs-title class_">Height</span>:<span class="hljs-string">&quot;height&quot;</span>,<span class="hljs-title class_">Width</span>:<span class="hljs-string">&quot;width&quot;</span>&#125;,<span class="hljs-keyword">function</span>(<span class="hljs-params">a,s</span>)&#123;S.<span class="hljs-title function_">each</span>(&#123;<span class="hljs-attr">padding</span>:<span class="hljs-string">&quot;inner&quot;</span>+a,<span class="hljs-attr">content</span>:s,<span class="hljs-string">&quot;&quot;</span>:<span class="hljs-string">&quot;outer&quot;</span>+a&#125;,<span class="hljs-keyword">function</span>(<span class="hljs-params">r,o</span>)&#123;S.<span class="hljs-property">fn</span>[o]=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n=<span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>&amp;&amp;(r||<span class="hljs-string">&quot;boolean&quot;</span>!=<span class="hljs-keyword">typeof</span> e),i=r||(!<span class="hljs-number">0</span>===e||!<span class="hljs-number">0</span>===t?<span class="hljs-string">&quot;margin&quot;</span>:<span class="hljs-string">&quot;border&quot;</span>);<span class="hljs-keyword">return</span> $(<span class="hljs-variable language_">this</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">var</span> r;<span class="hljs-keyword">return</span> <span class="hljs-title function_">x</span>(e)?<span class="hljs-number">0</span>===o.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;outer&quot;</span>)?e[<span class="hljs-string">&quot;inner&quot;</span>+a]:e.<span class="hljs-property">document</span>.<span class="hljs-property">documentElement</span>[<span class="hljs-string">&quot;client&quot;</span>+a]:<span class="hljs-number">9</span>===e.<span class="hljs-property">nodeType</span>?(r=e.<span class="hljs-property">documentElement</span>,<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(e.<span class="hljs-property">body</span>[<span class="hljs-string">&quot;scroll&quot;</span>+a],r[<span class="hljs-string">&quot;scroll&quot;</span>+a],e.<span class="hljs-property">body</span>[<span class="hljs-string">&quot;offset&quot;</span>+a],r[<span class="hljs-string">&quot;offset&quot;</span>+a],r[<span class="hljs-string">&quot;client&quot;</span>+a])):<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===n?S.<span class="hljs-title function_">css</span>(e,t,i):S.<span class="hljs-title function_">style</span>(e,t,n,i)&#125;,s,n?<span class="hljs-attr">e</span>:<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>,n)&#125;&#125;)&#125;),S.<span class="hljs-title function_">each</span>([<span class="hljs-string">&quot;ajaxStart&quot;</span>,<span class="hljs-string">&quot;ajaxStop&quot;</span>,<span class="hljs-string">&quot;ajaxComplete&quot;</span>,<span class="hljs-string">&quot;ajaxError&quot;</span>,<span class="hljs-string">&quot;ajaxSuccess&quot;</span>,<span class="hljs-string">&quot;ajaxSend&quot;</span>],<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;S.<span class="hljs-property">fn</span>[t]=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">on</span>(t,e)&#125;&#125;),S.<span class="hljs-property">fn</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">bind</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">on</span>(e,<span class="hljs-literal">null</span>,t,n)&#125;,<span class="hljs-attr">unbind</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">off</span>(e,<span class="hljs-literal">null</span>,t)&#125;,<span class="hljs-attr">delegate</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n,r</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">on</span>(t,e,n,r)&#125;,<span class="hljs-attr">undelegate</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,n</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>===<span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>?<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">off</span>(e,<span class="hljs-string">&quot;**&quot;</span>):<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">off</span>(t,e||<span class="hljs-string">&quot;**&quot;</span>,n)&#125;,<span class="hljs-attr">hover</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">mouseenter</span>(e).<span class="hljs-title function_">mouseleave</span>(t||e)&#125;&#125;),S.<span class="hljs-title function_">each</span>(<span class="hljs-string">&quot;blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu&quot;</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot; &quot;</span>),<span class="hljs-keyword">function</span>(<span class="hljs-params">e,n</span>)&#123;S.<span class="hljs-property">fn</span>[n]=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>&lt;<span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>?<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">on</span>(n,<span class="hljs-literal">null</span>,e,t):<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">trigger</span>(n)&#125;&#125;);<span class="hljs-keyword">var</span> <span class="hljs-title class_">Xt</span>=<span class="hljs-regexp">/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g</span>;S.<span class="hljs-property">proxy</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> n,r,i;<span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;string&quot;</span>==<span class="hljs-keyword">typeof</span> t&amp;&amp;(n=e[t],t=e,e=n),<span class="hljs-title function_">m</span>(e))<span class="hljs-keyword">return</span> r=s.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">arguments</span>,<span class="hljs-number">2</span>),(i=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> e.<span class="hljs-title function_">apply</span>(t||<span class="hljs-variable language_">this</span>,r.<span class="hljs-title function_">concat</span>(s.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">arguments</span>)))&#125;).<span class="hljs-property">guid</span>=e.<span class="hljs-property">guid</span>=e.<span class="hljs-property">guid</span>||S.<span class="hljs-property">guid</span>++,i&#125;,S.<span class="hljs-property">holdReady</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;e?S.<span class="hljs-property">readyWait</span>++:S.<span class="hljs-title function_">ready</span>(!<span class="hljs-number">0</span>)&#125;,S.<span class="hljs-property">isArray</span>=<span class="hljs-title class_">Array</span>.<span class="hljs-property">isArray</span>,S.<span class="hljs-property">parseJSON</span>=<span class="hljs-title class_">JSON</span>.<span class="hljs-property">parse</span>,S.<span class="hljs-property">nodeName</span>=A,S.<span class="hljs-property">isFunction</span>=m,S.<span class="hljs-property">isWindow</span>=x,S.<span class="hljs-property">camelCase</span>=X,S.<span class="hljs-property">type</span>=w,S.<span class="hljs-property">now</span>=<span class="hljs-title class_">Date</span>.<span class="hljs-property">now</span>,S.<span class="hljs-property">isNumeric</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=S.<span class="hljs-title function_">type</span>(e);<span class="hljs-keyword">return</span>(<span class="hljs-string">&quot;number&quot;</span>===t||<span class="hljs-string">&quot;string&quot;</span>===t)&amp;&amp;!<span class="hljs-built_in">isNaN</span>(e-<span class="hljs-built_in">parseFloat</span>(e))&#125;,S.<span class="hljs-property">trim</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>==e?<span class="hljs-string">&quot;&quot;</span>:(e+<span class="hljs-string">&quot;&quot;</span>).<span class="hljs-title function_">replace</span>(<span class="hljs-title class_">Xt</span>,<span class="hljs-string">&quot;&quot;</span>)&#125;,<span class="hljs-string">&quot;function&quot;</span>==<span class="hljs-keyword">typeof</span> define&amp;&amp;define.<span class="hljs-property">amd</span>&amp;&amp;<span class="hljs-title function_">define</span>(<span class="hljs-string">&quot;jquery&quot;</span>,[],<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> S&#125;);<span class="hljs-keyword">var</span> <span class="hljs-title class_">Vt</span>=C.<span class="hljs-property">jQuery</span>,<span class="hljs-title class_">Gt</span>=C.<span class="hljs-property">$</span>;<span class="hljs-keyword">return</span> S.<span class="hljs-property">noConflict</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> C.<span class="hljs-property">$</span>===S&amp;&amp;(C.<span class="hljs-property">$</span>=<span class="hljs-title class_">Gt</span>),e&amp;&amp;C.<span class="hljs-property">jQuery</span>===S&amp;&amp;(C.<span class="hljs-property">jQuery</span>=<span class="hljs-title class_">Vt</span>),S&#125;,<span class="hljs-string">&quot;undefined&quot;</span>==<span class="hljs-keyword">typeof</span> e&amp;&amp;(C.<span class="hljs-property">jQuery</span>=C.<span class="hljs-property">$</span>=S),S&#125;);<br></code></pre></td></tr></table></figure>
<p>然后添加<code>nav.js</code>，并且按照注释修改配置</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css">//js有一个小问题：就是只要鼠标滚动不论哪里都会响应，即便你滚动的是子元素<br><br>//<span class="hljs-number">2022.9</span>.<span class="hljs-number">11</span> 已修复，需要jq，请自行引入<br>document<span class="hljs-selector-class">.getElementById</span>(&quot;name-container&quot;)<span class="hljs-selector-class">.setAttribute</span>(&quot;style&quot;, &quot;<span class="hljs-attribute">display</span>:none<span class="hljs-string">&quot;);</span><br><span class="hljs-string"></span><br><span class="hljs-string">var position = $(window).scrollTop();</span><br><span class="hljs-string"></span><br><span class="hljs-string">$(window).scroll(function () &#123;</span><br><span class="hljs-string"></span><br><span class="hljs-string">  var scroll = $(window).scrollTop();</span><br><span class="hljs-string"></span><br><span class="hljs-string">  if (scroll &gt; position) &#123;</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">    document.getElementById(&quot;</span>name-container<span class="hljs-string">&quot;).setAttribute(&quot;</span>style<span class="hljs-string">&quot;, &quot;</span><span class="hljs-string">&quot;);</span><br><span class="hljs-string">    document.getElementsByClassName(&quot;</span>menus_items<span class="hljs-string">&quot;)[1].setAttribute(&quot;</span>style<span class="hljs-string">&quot;, &quot;</span>display:none<span class="hljs-meta">!important</span><span class="hljs-string">&quot;);</span><br><span class="hljs-string"></span><br><span class="hljs-string">  &#125; else &#123;</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">    document.getElementsByClassName(&quot;</span>menus_items<span class="hljs-string">&quot;)[1].setAttribute(&quot;</span>style<span class="hljs-string">&quot;, &quot;</span><span class="hljs-string">&quot;);</span><br><span class="hljs-string">    document.getElementById(&quot;</span>name-container<span class="hljs-string">&quot;).setAttribute(&quot;</span>style<span class="hljs-string">&quot;, &quot;</span>display:none<span class="hljs-string">&quot;);</span><br><span class="hljs-string"></span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">  position = scroll;</span><br><span class="hljs-string"></span><br><span class="hljs-string">&#125;);</span><br><span class="hljs-string">function scrollToTop()&#123;</span><br><span class="hljs-string">    document.getElementsByClassName(&quot;</span>menus_items<span class="hljs-string">&quot;)[1].setAttribute(&quot;</span>style<span class="hljs-string">&quot;,&quot;</span><span class="hljs-string">&quot;);</span><br><span class="hljs-string">    document.getElementById(&quot;</span>name-container<span class="hljs-string">&quot;).setAttribute(&quot;</span>style<span class="hljs-string">&quot;,&quot;</span>display:none<span class="hljs-string">&quot;);</span><br><span class="hljs-string">    btf.scrollToDest(0, 500);</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">//修复没有弄右键菜单的童鞋无法回顶部的问题</span><br><span class="hljs-string">document.getElementById(&quot;</span>page-name<span class="hljs-string">&quot;).innerText = document.title.split(&quot;</span> | Ariasakaの小窝<span class="hljs-string">&quot;)[0];</span><br><span class="hljs-string">/*这里是去掉你的网站全局名称的设置，如果你不需要去掉，你可以写成：</span><br><span class="hljs-string">document.getElementById(&quot;</span>page-name<span class="hljs-string">&quot;).innerText=document.title</span><br><span class="hljs-string"></span><br><span class="hljs-string">或者把你的网站的分隔符和全局网站名称加上去*/</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure>
<p>最后添加如下<code>css</code>，按照注释修改参数：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/*</span><br><span class="hljs-comment">2022.10.4更新：</span><br><span class="hljs-comment">根据我发现的没有自适应，间距不合理问题进行调整，如果用了这个的朋友们建议改一改</span><br><span class="hljs-comment">*/</span><br><span class="hljs-selector-id">#page-name</span><span class="hljs-selector-pseudo">::before</span>&#123;<br>    <span class="hljs-attribute">font-size</span>:<span class="hljs-number">18px</span>;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">width</span>:<span class="hljs-number">100%</span>;<br>    <span class="hljs-attribute">height</span>:<span class="hljs-number">100%</span>;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">8px</span>;<br>    <span class="hljs-attribute">color</span>:white<span class="hljs-meta">!important</span>;<br>    <span class="hljs-attribute">top</span>:<span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">left</span>:<span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">content</span>:<span class="hljs-string">&#x27;回到顶部&#x27;</span>;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">var</span>(--lyx-theme);<br>    <span class="hljs-attribute">transition</span>: all .<span class="hljs-number">3s</span>;<br>    -webkit-<span class="hljs-attribute">transition</span>: all .<span class="hljs-number">3s</span>;<br>    -moz-<span class="hljs-attribute">transition</span>: all .<span class="hljs-number">3s</span>;<br>    -ms-<span class="hljs-attribute">transition</span>: all .<span class="hljs-number">3s</span>;<br>    -o-<span class="hljs-attribute">transition</span>: all .<span class="hljs-number">3s</span>;<br>    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">3px</span> <span class="hljs-built_in">var</span>(--lyx-theme);<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">45px</span>; <span class="hljs-comment">/*如果垂直位置不居中可以微调此值，也可以删了*/</span><br>&#125;<br><span class="hljs-selector-id">#page-name</span><span class="hljs-selector-pseudo">:hover</span><span class="hljs-selector-pseudo">:before</span>&#123;<br>    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">max-width</span>:<span class="hljs-number">900px</span>)&#123;<br>    <span class="hljs-selector-id">#page-name</span>,<span class="hljs-selector-id">#menus</span>&#123;<br>      <span class="hljs-attribute">display</span>:none<span class="hljs-meta">!important</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-selector-id">#name-container</span>&#123;<br>    <span class="hljs-attribute">transition</span>: all .<span class="hljs-number">3s</span>;<br>    -webkit-<span class="hljs-attribute">transition</span>: all .<span class="hljs-number">3s</span>;<br>    -moz-<span class="hljs-attribute">transition</span>: all .<span class="hljs-number">3s</span>;<br>    -ms-<span class="hljs-attribute">transition</span>: all .<span class="hljs-number">3s</span>;<br>    -o-<span class="hljs-attribute">transition</span>: all .<span class="hljs-number">3s</span>;<br>&#125;<br><span class="hljs-selector-id">#name-container</span><span class="hljs-selector-pseudo">:hover</span>&#123;<br>    scale:<span class="hljs-number">1.03</span><br>&#125;<br><span class="hljs-selector-id">#page-name</span>&#123;<br>    <span class="hljs-attribute">position</span>: relative;<br>    <span class="hljs-attribute">padding</span>:<span class="hljs-number">10px</span> <span class="hljs-number">30px</span><span class="hljs-comment">/*如果文字间隔不合理可以微调修改，第二个是水平方向的padding，第一个是垂直的*/</span><br>&#125;<br><span class="hljs-selector-id">#nav</span>&#123;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">20px</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>
<h2 id="导航栏显示haver颜色"><a href="#导航栏显示haver颜色" class="headerlink" title="导航栏显示haver颜色"></a>导航栏显示haver颜色</h2><p>在自定义<code>[blogRoot]/self/css/meihua.css</code>里面添加</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* ----------修改导航栏的haver---------- */</span><br><br><span class="hljs-selector-class">.site-page</span> &#123;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">5px</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">3px</span>;<br>    <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">10px</span>;<br>    <span class="hljs-attribute">padding-right</span>: <span class="hljs-number">10px</span>;<br>    <span class="hljs-attribute">white-space</span>: nowrap;<br>&#125;<br><span class="hljs-selector-class">.site-page</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">var</span>(--gglss-theme);<br>    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">3px</span> <span class="hljs-built_in">var</span>(--gglss-theme)<span class="hljs-meta">!important</span>;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">5px</span>;<br>&#125;<br><span class="hljs-selector-class">.site-page</span><span class="hljs-selector-class">.child</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">var</span>(--gglss-theme)<span class="hljs-meta">!important</span>;<br>    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">3px</span> <span class="hljs-built_in">var</span>(--gglss-theme)<span class="hljs-meta">!important</span>;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">4px</span>;<br>&#125;<br><br><span class="hljs-comment">/* ----------网站标题部分的增强版---------- */</span><br><span class="hljs-selector-id">#site-name</span><span class="hljs-selector-pseudo">::before</span>&#123;<br>    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">var</span>(--gglss-theme)<span class="hljs-meta">!important</span>;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">8px</span>;<br>    -webkit-<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">8px</span>;<br>    -moz-<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">8px</span>;<br>    -ms-<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">8px</span>;<br>    -o-<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">8px</span>;<br>    <span class="hljs-attribute">transition</span>: .<span class="hljs-number">3s</span>;<br>    -webkit-<span class="hljs-attribute">transition</span>: .<span class="hljs-number">3s</span>;<br>    -moz-<span class="hljs-attribute">transition</span>: .<span class="hljs-number">3s</span>;<br>    -ms-<span class="hljs-attribute">transition</span>: .<span class="hljs-number">3s</span>;<br>    -o-<span class="hljs-attribute">transition</span>: .<span class="hljs-number">3s</span>;<br>    <span class="hljs-attribute">position</span>:absolute;<br>    <span class="hljs-attribute">top</span>:<span class="hljs-number">0</span><span class="hljs-meta">!important</span>;<br>    <span class="hljs-attribute">right</span>:<span class="hljs-number">0</span><span class="hljs-meta">!important</span>;<br>    <span class="hljs-attribute">width</span>:<span class="hljs-number">100%</span>;<br>    <span class="hljs-attribute">height</span>:<span class="hljs-number">100%</span>;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;\f015&quot;</span>;<br>    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-built_in">var</span>(--gglss-theme);<br>    <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&quot;Font Awesome 6 Free&quot;</span>;<br>    <span class="hljs-attribute">text-align</span>: center;<br>    <span class="hljs-attribute">color</span>:white;<br>    <span class="hljs-attribute">line-height</span>:<span class="hljs-number">34px</span>;<span class="hljs-comment">/*如果有溢出或者垂直不居中的现象微调一下这个参数*/</span><br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">18px</span>;<span class="hljs-comment">/*根据个人喜好*/</span><br>&#125;<br><span class="hljs-selector-id">#site-name</span><span class="hljs-selector-pseudo">:hover</span><span class="hljs-selector-pseudo">::before</span>&#123;<br>    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;<br>    scale:<span class="hljs-number">1.03</span>;<br>&#125;<br><span class="hljs-selector-id">#site-name</span>&#123;<br>    <span class="hljs-attribute">position</span>: relative;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">24px</span>; <span class="hljs-comment">/*一定要把字体调大点，否则效果惨不忍睹！*/</span><br>&#125;<br><span class="hljs-selector-pseudo">:root</span>&#123;<br>    <span class="hljs-attr">--gglss-theme</span>:<span class="hljs-number">#49B1F5</span> <span class="hljs-comment">/*我的主题色*/</span><br>&#125;<br><br></code></pre></td></tr></table></figure>
<h1 id="侧边栏分类归档美化"><a href="#侧边栏分类归档美化" class="headerlink" title="侧边栏分类归档美化"></a>侧边栏分类归档美化</h1><h2 id="修改-aside-archives文件"><a href="#修改-aside-archives文件" class="headerlink" title="修改 aside_archives文件"></a>修改 aside_archives文件</h2><p>打开 <code>[you_blog]\themes\butterfly\scripts\helpers\aside_archives.js</code> 修改第 92 行左右。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js">result += transform ? <span class="hljs-title function_">transform</span>(item.<span class="hljs-property">name</span>) : item.<span class="hljs-property">name</span><br>result += <span class="hljs-string">&#x27;&lt;/span&gt;&#x27;</span><br><br><span class="hljs-keyword">if</span> (showCount) &#123;<br>- result += <span class="hljs-string">`&lt;span class=&quot;card-archive-list-count&quot;&gt;<span class="hljs-subst">$&#123;item.count&#125;</span>&lt;/span&gt;`</span><br>+ result += <span class="hljs-string">`&lt;div class=&quot;card-archive-list-count-group&quot;&gt;&lt;span class=&quot;card-archive-list-count&quot;&gt;<span class="hljs-subst">$&#123;item.count&#125;</span>&lt;/span&gt;&lt;span&gt;篇&lt;/span&gt;&lt;/div&gt;`</span><br>&#125;<br>result += <span class="hljs-string">&#x27;&lt;/a&gt;&#x27;</span><br>result += <span class="hljs-string">&#x27;&lt;/li&gt;&#x27;</span><br><br></code></pre></td></tr></table></figure>
<h2 id="增加css"><a href="#增加css" class="headerlink" title="增加css"></a>增加css</h2><p>在自定义<code>[blogRoot]/self/css/meihua.css</code>文件中添加如下代码：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 侧栏归档样式start */</span><br><span class="hljs-selector-tag">span</span><span class="hljs-selector-class">.card-archive-list-count</span> &#123;<br>  <span class="hljs-attribute">width</span>: auto;<br>  <span class="hljs-attribute">text-align</span>: left;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">1.5rem</span>;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">0.9</span>;<br>  <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">700</span>;<br>&#125;<br><span class="hljs-selector-class">.card-archive-list-count-group</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-direction</span>: row;<br>  <span class="hljs-attribute">align-items</span>: baseline;<br>&#125;<br><span class="hljs-selector-id">#aside-content</span> <span class="hljs-selector-class">.card-archives</span> <span class="hljs-selector-tag">ul</span><span class="hljs-selector-class">.card-archive-list</span> &gt; <span class="hljs-selector-class">.card-archive-list-item</span> <span class="hljs-selector-tag">a</span> <span class="hljs-selector-tag">span</span><span class="hljs-selector-pseudo">:last-child</span>,<br><span class="hljs-selector-id">#aside-content</span> <span class="hljs-selector-class">.card-categories</span> <span class="hljs-selector-tag">ul</span><span class="hljs-selector-class">.card-category-list</span> &gt; <span class="hljs-selector-class">.card-category-list-item</span> <span class="hljs-selector-tag">a</span> <span class="hljs-selector-tag">span</span><span class="hljs-selector-pseudo">:last-child</span> &#123;<br>  <span class="hljs-attribute">width</span>: fit-content;<br>  <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">4px</span>;<br>&#125;<br><span class="hljs-selector-tag">span</span><span class="hljs-selector-class">.card-archive-list-count</span> &#123;<br>  <span class="hljs-attribute">width</span>: auto;<br>  <span class="hljs-attribute">text-align</span>: left;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">1.1rem</span>;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">0.9</span>;<br>  <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">700</span>;<br>&#125;<br><span class="hljs-selector-class">.card-archive-list-date</span> &#123;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">14px</span>;<br>  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0.6</span>;<br>&#125;<br><span class="hljs-selector-tag">li</span><span class="hljs-selector-class">.card-category-list-item</span> &#123;<br>  <span class="hljs-attribute">flex</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">31%</span>;<br>&#125;<br><span class="hljs-selector-tag">li</span><span class="hljs-selector-class">.card-archive-list-item</span> &#123;<br>  <span class="hljs-attribute">flex</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">48%</span>;<br>&#125;<br><span class="hljs-selector-id">#aside-content</span> <span class="hljs-selector-class">.card-archives</span> <span class="hljs-selector-tag">ul</span><span class="hljs-selector-class">.card-archive-list</span> &gt; <span class="hljs-selector-class">.card-archive-list-item</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span>,<br><span class="hljs-selector-id">#aside-content</span> <span class="hljs-selector-class">.card-categories</span> <span class="hljs-selector-tag">ul</span><span class="hljs-selector-class">.card-category-list</span> &gt; <span class="hljs-selector-class">.card-category-list-item</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>  <span class="hljs-comment">/* background-color: #3b70fc; */</span><br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#49B1F5</span>;  <span class="hljs-comment">/*侧边栏的鼠标悬浮颜色*/</span><br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">8px</span> <span class="hljs-number">12px</span> -<span class="hljs-number">3px</span> <span class="hljs-number">#4259ef23</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">8px</span>;<br>  <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">0.5rem</span>;<br>  <span class="hljs-attribute">padding-right</span>: <span class="hljs-number">0.5rem</span>;<br>&#125;<br><span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">1300px</span>) &#123;<br>  <span class="hljs-selector-id">#aside-content</span> <span class="hljs-selector-class">.card-archives</span> <span class="hljs-selector-tag">ul</span><span class="hljs-selector-class">.card-archive-list</span> &gt; <span class="hljs-selector-class">.card-archive-list-item</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span>,<br>  <span class="hljs-selector-id">#aside-content</span> <span class="hljs-selector-class">.card-categories</span> <span class="hljs-selector-tag">ul</span><span class="hljs-selector-class">.card-category-list</span> &gt; <span class="hljs-selector-class">.card-category-list-item</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scale</span>(<span class="hljs-number">1.03</span>);<br>  &#125;<br>  <span class="hljs-selector-id">#aside-content</span> <span class="hljs-selector-class">.card-archives</span> <span class="hljs-selector-tag">ul</span><span class="hljs-selector-class">.card-archive-list</span> &gt; <span class="hljs-selector-class">.card-archive-list-item</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:active</span>,<br>  <span class="hljs-selector-id">#aside-content</span> <span class="hljs-selector-class">.card-categories</span> <span class="hljs-selector-tag">ul</span><span class="hljs-selector-class">.card-category-list</span> &gt; <span class="hljs-selector-class">.card-category-list-item</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:active</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scale</span>(<span class="hljs-number">0.97</span>);<br>  &#125;<br>&#125;<br><span class="hljs-selector-id">#aside-content</span> <span class="hljs-selector-class">.card-archives</span> <span class="hljs-selector-tag">ul</span><span class="hljs-selector-class">.card-archive-list</span> &gt; <span class="hljs-selector-class">.card-archive-list-item</span> <span class="hljs-selector-tag">a</span>,<br><span class="hljs-selector-id">#aside-content</span> <span class="hljs-selector-class">.card-categories</span> <span class="hljs-selector-tag">ul</span><span class="hljs-selector-class">.card-category-list</span> &gt; <span class="hljs-selector-class">.card-category-list-item</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">8px</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">4px</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-direction</span>: column;<br>  <span class="hljs-attribute">align-content</span>: space-between;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#e3e8f7</span>;<br>&#125;<br><span class="hljs-selector-id">#aside-content</span> <span class="hljs-selector-class">.card-archives</span> <span class="hljs-selector-tag">ul</span><span class="hljs-selector-class">.card-archive-list</span> &gt; <span class="hljs-selector-class">.card-archive-list-item</span> <span class="hljs-selector-tag">a</span> <span class="hljs-selector-tag">span</span><span class="hljs-selector-pseudo">:first</span>-child,<br><span class="hljs-selector-id">#aside-content</span> <span class="hljs-selector-class">.card-categories</span> <span class="hljs-selector-tag">ul</span><span class="hljs-selector-class">.card-category-list</span> &gt; <span class="hljs-selector-class">.card-category-list-item</span> <span class="hljs-selector-tag">a</span> <span class="hljs-selector-tag">span</span><span class="hljs-selector-pseudo">:first</span>-child &#123;<br>  <span class="hljs-attribute">width</span>: auto;<br>  <span class="hljs-attribute">flex</span>: inherit;<br>&#125;<br><span class="hljs-selector-id">#aside-content</span> <span class="hljs-selector-class">.card-archives</span> <span class="hljs-selector-tag">ul</span><span class="hljs-selector-class">.card-archive-list</span>,<br><span class="hljs-selector-id">#aside-content</span> <span class="hljs-selector-class">.card-categories</span> <span class="hljs-selector-tag">ul</span><span class="hljs-selector-class">.card-category-list</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-direction</span>: row;<br>  <span class="hljs-attribute">justify-content</span>: space-between;<br>  <span class="hljs-attribute">flex-wrap</span>: wrap;<br>&#125;<br><span class="hljs-comment">/* 侧栏归档样式end */</span><br><br></code></pre></td></tr></table></figure>
<h1 id="添加夜间模式的转换动画"><a href="#添加夜间模式的转换动画" class="headerlink" title="添加夜间模式的转换动画"></a>添加夜间模式的转换动画</h1><blockquote>
<p>转自<a href="https://ll.sc.cn/posts/bc28/">雷雷屋头</a></p>
</blockquote>
<h2 id="新建-sun-moon-pug"><a href="#新建-sun-moon-pug" class="headerlink" title="新建 sun_moon.pug"></a>新建 sun_moon.pug</h2><p>在 <code>[you_blog]\themes\butterfly\layout\includes\custom\</code> 文件夹下，新建 <code>sun_moon.pug</code> 文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs pug">svg(aria-hidden=&#x27;true&#x27;, style=&#x27;position:absolute; overflow:hidden; width:0; height:0&#x27;)<br>  symbol#icon-sun(viewBox=&#x27;0 0 1024 1024&#x27;)<br>    path(d=&#x27;M960 512l-128 128v192h-192l-128 128-128-128H192v-192l-128-128 128-128V192h192l128-128 128 128h192v192z&#x27;, fill=&#x27;#FFD878&#x27;, p-id=&#x27;8420&#x27;)<br>    path(d=&#x27;M736 512a224 224 0 1 0-448 0 224 224 0 1 0 448 0z&#x27;, fill=&#x27;#FFE4A9&#x27;, p-id=&#x27;8421&#x27;)<br>    path(d=&#x27;M512 109.248L626.752 224H800v173.248L914.752 512 800 626.752V800h-173.248L512 914.752 397.248 800H224v-173.248L109.248 512 224 397.248V224h173.248L512 109.248M512 64l-128 128H192v192l-128 128 128 128v192h192l128 128 128-128h192v-192l128-128-128-128V192h-192l-128-128z&#x27;, fill=&#x27;#4D5152&#x27;, p-id=&#x27;8422&#x27;)<br>    path(d=&#x27;M512 320c105.888 0 192 86.112 192 192s-86.112 192-192 192-192-86.112-192-192 86.112-192 192-192m0-32a224 224 0 1 0 0 448 224 224 0 0 0 0-448z&#x27;, fill=&#x27;#4D5152&#x27;, p-id=&#x27;8423&#x27;)<br>  symbol#icon-moon(viewBox=&#x27;0 0 1024 1024&#x27;)<br>    path(d=&#x27;M611.370667 167.082667a445.013333 445.013333 0 0 1-38.4 161.834666 477.824 477.824 0 0 1-244.736 244.394667 445.141333 445.141333 0 0 1-161.109334 38.058667 85.077333 85.077333 0 0 0-65.066666 135.722666A462.08 462.08 0 1 0 747.093333 102.058667a85.077333 85.077333 0 0 0-135.722666 65.024z&#x27;, fill=&#x27;#FFB531&#x27;, p-id=&#x27;11345&#x27;)<br>    path(d=&#x27;M329.728 274.133333l35.157333-35.157333a21.333333 21.333333 0 1 0-30.165333-30.165333l-35.157333 35.157333-35.114667-35.157333a21.333333 21.333333 0 0 0-30.165333 30.165333l35.114666 35.157333-35.114666 35.157334a21.333333 21.333333 0 1 0 30.165333 30.165333l35.114667-35.157333 35.157333 35.157333a21.333333 21.333333 0 1 0 30.165333-30.165333z&#x27;, fill=&#x27;#030835&#x27;, p-id=&#x27;11346&#x27;)<br><br><br></code></pre></td></tr></table></figure>
<h2 id="新建css"><a href="#新建css" class="headerlink" title="新建css"></a>新建css</h2><p>在<code>[blogRoot]/self/css/</code>新建<code>sun_moon.css</code>，增加下面的代码</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 白天夜晚切换动画start */</span><br><span class="hljs-selector-class">.Cuteen_DarkSky</span>, <span class="hljs-selector-class">.Cuteen_DarkSky</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;&#x27;</span>;<br>  <span class="hljs-attribute">position</span>: fixed;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">z-index</span>: <span class="hljs-number">88888888</span>;<br>&#125;<br><span class="hljs-selector-class">.Cuteen_DarkSky</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">#feb8b0</span>, <span class="hljs-number">#fef9db</span>);<br>&#125;<br><span class="hljs-selector-class">.Cuteen_DarkSky</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>  <span class="hljs-attribute">transition</span>: <span class="hljs-number">2s</span> ease all;<br>  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">#4c3f6d</span>, <span class="hljs-number">#6c62bb</span>, <span class="hljs-number">#93b1ed</span>);<br>&#125;<br><span class="hljs-selector-class">.DarkMode</span> <span class="hljs-selector-class">.Cuteen_DarkSky</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-selector-class">.Cuteen_DarkPlanet</span> &#123;<br>  <span class="hljs-attribute">z-index</span>: <span class="hljs-number">99999999</span>;<br>  <span class="hljs-attribute">position</span>: fixed;<br>  <span class="hljs-attribute">left</span>: -<span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">top</span>: -<span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">200%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">200%</span>;<br>  -webkit-<span class="hljs-attribute">animation</span>: CuteenPlanetMove <span class="hljs-number">2s</span> <span class="hljs-built_in">cubic-bezier</span>(<span class="hljs-number">0.7</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>);<br>  <span class="hljs-attribute">animation</span>: CuteenPlanetMove <span class="hljs-number">2s</span> <span class="hljs-built_in">cubic-bezier</span>(<span class="hljs-number">0.7</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>);<br>  <span class="hljs-attribute">transform-origin</span>: center bottom;<br>&#125;<br><span class="hljs-keyword">@-webkit-keyframes</span> CuteenPlanetMove &#123;<br>  <span class="hljs-number">0%</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">0</span>);<br> &#125;<br>  <span class="hljs-selector-tag">to</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">360deg</span>);<br> &#125;<br>&#125;<br><span class="hljs-selector-class">.Cuteen_DarkPlanet</span><span class="hljs-selector-pseudo">:after</span> &#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">35%</span>;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">40%</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">9.375rem</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">9.375rem</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;&#x27;</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">#fefefe</span>, <span class="hljs-number">#fffbe8</span>);<br>&#125;<br><span class="hljs-selector-class">.search</span> <span class="hljs-selector-tag">span</span> &#123;<br>  <span class="hljs-attribute">display</span>: none;<br>&#125;<br><span class="hljs-selector-class">.menus_item</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">text-decoration</span>: none <span class="hljs-meta">!important</span>;<br>&#125;<br><span class="hljs-selector-class">.icon-V</span> &#123;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">5px</span>;<br>&#125;<br><span class="hljs-keyword">@-moz-keyframes</span> CuteenPlanetMove &#123;<br>  <span class="hljs-number">0%</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">0</span>);<br> &#125;<br>  <span class="hljs-selector-tag">to</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">360deg</span>);<br> &#125;<br>&#125;<br><span class="hljs-keyword">@-webkit-keyframes</span> CuteenPlanetMove &#123;<br>  <span class="hljs-number">0%</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">0</span>);<br> &#125;<br>  <span class="hljs-selector-tag">to</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">360deg</span>);<br> &#125;<br>&#125;<br><span class="hljs-keyword">@-o-keyframes</span> CuteenPlanetMove &#123;<br>  <span class="hljs-number">0%</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">0</span>);<br> &#125;<br>  <span class="hljs-selector-tag">to</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">360deg</span>);<br> &#125;<br>&#125;<br><span class="hljs-keyword">@keyframes</span> CuteenPlanetMove &#123;<br>  <span class="hljs-number">0%</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">0</span>);<br> &#125;<br>  <span class="hljs-selector-tag">to</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">360deg</span>);<br> &#125;<br>&#125;<br><span class="hljs-comment">/* 白天夜晚切换动画end */</span><br><br><br></code></pre></td></tr></table></figure>
<h2 id="新建js"><a href="#新建js" class="headerlink" title="新建js"></a>新建js</h2><p>在<code>[blogRoot]/self/js/</code>新建`sun_moon.js，增加下面的代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 白天夜晚切换动画start</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">switchNightMode</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;body&#x27;</span>).<span class="hljs-title function_">insertAdjacentHTML</span>(<span class="hljs-string">&#x27;beforeend&#x27;</span>, <span class="hljs-string">&#x27;&lt;div class=&quot;Cuteen_DarkSky&quot;&gt;&lt;div class=&quot;Cuteen_DarkPlanet&quot;&gt;&lt;/div&gt;&lt;/div&gt;&#x27;</span>),<br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;body&#x27;</span>).<span class="hljs-property">classList</span>.<span class="hljs-title function_">contains</span>(<span class="hljs-string">&#x27;DarkMode&#x27;</span>) ? (<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;body&#x27;</span>).<span class="hljs-property">classList</span>.<span class="hljs-title function_">remove</span>(<span class="hljs-string">&#x27;DarkMode&#x27;</span>), <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&#x27;isDark&#x27;</span>, <span class="hljs-string">&#x27;0&#x27;</span>), <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;modeicon&#x27;</span>).<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&#x27;xlink:href&#x27;</span>, <span class="hljs-string">&#x27;#icon-moon&#x27;</span>)) : (<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;body&#x27;</span>).<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&#x27;DarkMode&#x27;</span>), <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&#x27;isDark&#x27;</span>, <span class="hljs-string">&#x27;1&#x27;</span>), <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;modeicon&#x27;</span>).<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&#x27;xlink:href&#x27;</span>, <span class="hljs-string">&#x27;#icon-sun&#x27;</span>)),<br>            <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByClassName</span>(<span class="hljs-string">&#x27;Cuteen_DarkSky&#x27;</span>)[<span class="hljs-number">0</span>].<span class="hljs-property">style</span>.<span class="hljs-property">transition</span> = <span class="hljs-string">&#x27;opacity 3s&#x27;</span>;<br>            <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByClassName</span>(<span class="hljs-string">&#x27;Cuteen_DarkSky&#x27;</span>)[<span class="hljs-number">0</span>].<span class="hljs-property">style</span>.<span class="hljs-property">opacity</span> = <span class="hljs-string">&#x27;0&#x27;</span>;<br>            <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByClassName</span>(<span class="hljs-string">&#x27;Cuteen_DarkSky&#x27;</span>)[<span class="hljs-number">0</span>].<span class="hljs-title function_">remove</span>();<br>            &#125;, <span class="hljs-number">1e3</span>);<br>            &#125;, <span class="hljs-number">2e3</span>)<br>        &#125;)<br>    <span class="hljs-keyword">const</span> nowMode = <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&#x27;data-theme&#x27;</span>) === <span class="hljs-string">&#x27;dark&#x27;</span> ? <span class="hljs-string">&#x27;dark&#x27;</span> : <span class="hljs-string">&#x27;light&#x27;</span><br>    <span class="hljs-keyword">if</span> (nowMode === <span class="hljs-string">&#x27;light&#x27;</span>) &#123;<br>        <span class="hljs-title function_">activateDarkMode</span>()<br>        saveToLocal.<span class="hljs-title function_">set</span>(<span class="hljs-string">&#x27;theme&#x27;</span>, <span class="hljs-string">&#x27;dark&#x27;</span>, <span class="hljs-number">2</span>)<br>        <span class="hljs-variable constant_">GLOBAL_CONFIG</span>.<span class="hljs-property">Snackbar</span> !== <span class="hljs-literal">undefined</span> &amp;&amp; btf.<span class="hljs-title function_">snackbarShow</span>(<span class="hljs-variable constant_">GLOBAL_CONFIG</span>.<span class="hljs-property">Snackbar</span>.<span class="hljs-property">day_to_night</span>)<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;modeicon&#x27;</span>).<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&#x27;xlink:href&#x27;</span>, <span class="hljs-string">&#x27;#icon-sun&#x27;</span>)<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-title function_">activateLightMode</span>()<br>        saveToLocal.<span class="hljs-title function_">set</span>(<span class="hljs-string">&#x27;theme&#x27;</span>, <span class="hljs-string">&#x27;light&#x27;</span>, <span class="hljs-number">2</span>)<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;body&#x27;</span>).<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&#x27;DarkMode&#x27;</span>), <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;modeicon&#x27;</span>).<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&#x27;xlink:href&#x27;</span>, <span class="hljs-string">&#x27;#icon-moon&#x27;</span>)<br>    &#125;<br>    <span class="hljs-comment">// handle some cases</span><br>    <span class="hljs-keyword">typeof</span> utterancesTheme === <span class="hljs-string">&#x27;function&#x27;</span> &amp;&amp; <span class="hljs-title function_">utterancesTheme</span>()<br>    <span class="hljs-keyword">typeof</span> <span class="hljs-variable constant_">FB</span> === <span class="hljs-string">&#x27;object&#x27;</span> &amp;&amp; <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">loadFBComment</span>()<br>    <span class="hljs-variable language_">window</span>.<span class="hljs-property">DISQUS</span> &amp;&amp; <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;disqus_thread&#x27;</span>).<span class="hljs-property">children</span>.<span class="hljs-property">length</span> &amp;&amp; <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">disqusReset</span>(), <span class="hljs-number">200</span>)<br>&#125;<br><span class="hljs-comment">// 白天夜晚切换动画end</span><br><br><br></code></pre></td></tr></table></figure>
<h2 id="引用-sun-moon-pug"><a href="#引用-sun-moon-pug" class="headerlink" title="引用 sun_moon.pug"></a>引用 sun_moon.pug</h2><p>修改 <code>[you_blog]\themes\butterfly\layout\includes\head.pug</code>, 在文件末位增加以下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs pug">  //- global config<br>  !=partial(&#x27;includes/head/config&#x27;, &#123;&#125;, &#123;cache: true&#125;)<br><br>  include ./head/config_site.pug<br>  include ./head/noscript.pug<br><br>  !=fragment_cache(&#x27;injectHeadJs&#x27;, function()&#123;return inject_head_js()&#125;)<br><br>  !=fragment_cache(&#x27;injectHead&#x27;, function()&#123;return injectHtml(theme.inject.head)&#125;)<br>+ include ./custom/sun_moon.pug<br><br></code></pre></td></tr></table></figure>
<h2 id="替换昼夜切换按钮"><a href="#替换昼夜切换按钮" class="headerlink" title="替换昼夜切换按钮"></a>替换昼夜切换按钮</h2><p>修改<code>[you_blog]\themes\butterfly\layout\includes\rightside.pug</code>, 替换原本的昼夜切换按钮</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs pug">  when &#x27;translate&#x27;<br>    if translate.enable<br>      button#translateLink(type=&quot;button&quot; title=_p(&#x27;rightside.translate_title&#x27;))= translate.default<br>  when &#x27;darkmode&#x27;<br>    if darkmode.enable &amp;&amp; darkmode.button<br>-     button#darkmode(type=&quot;button&quot; title=_p(&#x27;rightside.night_mode_title&#x27;))<br>-       i.fas.fa-adjust<br>+     a.icon-V.hidden(onclick=&#x27;switchNightMode()&#x27;,  title=_p(&#x27;rightside.night_mode_title&#x27;))<br>+       svg(width=&#x27;25&#x27;, height=&#x27;25&#x27;, viewBox=&#x27;0 0 1024 1024&#x27;)<br>+         use#modeicon(xlink:href=&#x27;#icon-moon&#x27;)<br><br></code></pre></td></tr></table></figure>
<h1 id="为博客添加波浪效果"><a href="#为博客添加波浪效果" class="headerlink" title="为博客添加波浪效果"></a>为博客添加波浪效果</h1><h2 id="修改index-pug文件"><a href="#修改index-pug文件" class="headerlink" title="修改index.pug文件"></a>修改index.pug文件</h2><p>修改<code>themes/butterfly/layout/includes/header/index.pug</code>，在第 38 行左右</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs pug">if top_img !== false<br>  if is_post()<br>    include ./post-info.pug<br>+   section.main-hero-waves-area.waves-area<br>+     svg.waves-svg(xmlns=&#x27;http://www.w3.org/2000/svg&#x27;, xlink=&#x27;http://www.w3.org/1999/xlink&#x27;, viewBox=&#x27;0 24 150 28&#x27;, preserveAspectRatio=&#x27;none&#x27;, shape-rendering=&#x27;auto&#x27;)<br>+       defs<br>+         path#gentle-wave(d=&#x27;M -160 44 c 30 0 58 -18 88 -18 s 58 18 88 18 s 58 -18 88 -18 s 58 18 88 18 v 44 h -352 Z&#x27;)<br>+       g.parallax<br>+         use(href=&#x27;#gentle-wave&#x27;, x=&#x27;48&#x27;, y=&#x27;0&#x27;)<br>+         use(href=&#x27;#gentle-wave&#x27;, x=&#x27;48&#x27;, y=&#x27;3&#x27;)<br>+         use(href=&#x27;#gentle-wave&#x27;, x=&#x27;48&#x27;, y=&#x27;5&#x27;)<br>+         use(href=&#x27;#gentle-wave&#x27;, x=&#x27;48&#x27;, y=&#x27;7&#x27;)<br>    #post-top-cover<br>      img#post-top-bg(class=&#x27;nolazyload&#x27; src=bg_img)<br>  else if is_home()<br>    #site-info<br>      h1#site-title=site_title<br>      if theme.subtitle.enable<br><br></code></pre></td></tr></table></figure>
<h2 id="添加css"><a href="#添加css" class="headerlink" title="添加css"></a>添加css</h2><p>在<code>[blogRoot]/self/css/meihua.css</code>，增加下面的代码</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 波浪css */</span><br><span class="hljs-selector-class">.main-hero-waves-area</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">bottom</span>: -<span class="hljs-number">11px</span>;<br>  <span class="hljs-attribute">z-index</span>: <span class="hljs-number">5</span>;<br>&#125;<br><span class="hljs-selector-class">.waves-area</span> <span class="hljs-selector-class">.waves-svg</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">5rem</span>;<br>&#125;<br><span class="hljs-comment">/* Animation */</span><br><br><span class="hljs-selector-class">.parallax</span> &gt; use &#123;<br>  <span class="hljs-attribute">animation</span>: move-forever <span class="hljs-number">25s</span> <span class="hljs-built_in">cubic-bezier</span>(<span class="hljs-number">0.55</span>, <span class="hljs-number">0.5</span>, <span class="hljs-number">0.45</span>, <span class="hljs-number">0.5</span>) infinite;<br>&#125;<br><span class="hljs-selector-class">.parallax</span> &gt; use<span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">1</span>) &#123;<br>  <span class="hljs-attribute">animation-delay</span>: -<span class="hljs-number">2s</span>;<br>  <span class="hljs-attribute">animation-duration</span>: <span class="hljs-number">7s</span>;<br>  fill: <span class="hljs-number">#f7f9febd</span>;<br>&#125;<br><span class="hljs-selector-class">.parallax</span> &gt; use<span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>) &#123;<br>  <span class="hljs-attribute">animation-delay</span>: -<span class="hljs-number">3s</span>;<br>  <span class="hljs-attribute">animation-duration</span>: <span class="hljs-number">10s</span>;<br>  fill: <span class="hljs-number">#f7f9fe82</span>;<br>&#125;<br><span class="hljs-selector-class">.parallax</span> &gt; use<span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">3</span>) &#123;<br>  <span class="hljs-attribute">animation-delay</span>: -<span class="hljs-number">4s</span>;<br>  <span class="hljs-attribute">animation-duration</span>: <span class="hljs-number">13s</span>;<br>  fill: <span class="hljs-number">#f7f9fe36</span>;<br>&#125;<br><span class="hljs-selector-class">.parallax</span> &gt; use<span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">4</span>) &#123;<br>  <span class="hljs-attribute">animation-delay</span>: -<span class="hljs-number">5s</span>;<br>  <span class="hljs-attribute">animation-duration</span>: <span class="hljs-number">20s</span>;<br>  fill: <span class="hljs-number">#f7f9fe</span>;<br>&#125;<br><span class="hljs-comment">/* 黑色模式背景 */</span><br><span class="hljs-selector-attr">[data-theme=<span class="hljs-string">&quot;dark&quot;</span>]</span> <span class="hljs-selector-class">.parallax</span> &gt; use<span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">1</span>) &#123;<br>  <span class="hljs-attribute">animation-delay</span>: -<span class="hljs-number">2s</span>;<br>  <span class="hljs-attribute">animation-duration</span>: <span class="hljs-number">7s</span>;<br>  fill: <span class="hljs-number">#18171dc8</span>;<br>&#125;<br><span class="hljs-selector-attr">[data-theme=<span class="hljs-string">&quot;dark&quot;</span>]</span> <span class="hljs-selector-class">.parallax</span> &gt; use<span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>) &#123;<br>  <span class="hljs-attribute">animation-delay</span>: -<span class="hljs-number">3s</span>;<br>  <span class="hljs-attribute">animation-duration</span>: <span class="hljs-number">10s</span>;<br>  fill: <span class="hljs-number">#18171d80</span>;<br>&#125;<br><span class="hljs-selector-attr">[data-theme=<span class="hljs-string">&quot;dark&quot;</span>]</span> <span class="hljs-selector-class">.parallax</span> &gt; use<span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">3</span>) &#123;<br>  <span class="hljs-attribute">animation-delay</span>: -<span class="hljs-number">4s</span>;<br>  <span class="hljs-attribute">animation-duration</span>: <span class="hljs-number">13s</span>;<br>  fill: <span class="hljs-number">#18171d3e</span>;<br>&#125;<br><span class="hljs-selector-attr">[data-theme=<span class="hljs-string">&quot;dark&quot;</span>]</span> <span class="hljs-selector-class">.parallax</span> &gt; use<span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">4</span>) &#123;<br>  <span class="hljs-attribute">animation-delay</span>: -<span class="hljs-number">5s</span>;<br>  <span class="hljs-attribute">animation-duration</span>: <span class="hljs-number">20s</span>;<br>  fill: <span class="hljs-number">#18171d</span>;<br>&#125;<br><br><span class="hljs-keyword">@keyframes</span> move-forever &#123;<br>  <span class="hljs-number">0%</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate3d</span>(-<span class="hljs-number">90px</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>  &#125;<br>  <span class="hljs-number">100%</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate3d</span>(<span class="hljs-number">85px</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>  &#125;<br>&#125;<br><span class="hljs-comment">/*Shrinking for mobile*/</span><br><span class="hljs-keyword">@media</span> (<span class="hljs-attribute">max-width</span>: <span class="hljs-number">768px</span>) &#123;<br>  <span class="hljs-selector-class">.waves-area</span> <span class="hljs-selector-class">.waves-svg</span> &#123;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">40px</span>;<br>    <span class="hljs-attribute">min-height</span>: <span class="hljs-number">40px</span>;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>
<p><strong>注意</strong>: 的是 css 中<code>fill属性</code>可以控制波浪颜色</p>
<h1 id="页脚透明"><a href="#页脚透明" class="headerlink" title="页脚透明"></a>页脚透明</h1><p>在<code>[blogRoot]/self/css/meihua.css</code>，增加下面的代码</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 页脚透明start */</span><br><span class="hljs-selector-id">#footer</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">var</span>(--icat-footer-background);<br>&#125;<br><br><span class="hljs-selector-id">#footer</span> <span class="hljs-selector-id">#footer-wrap</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-built_in">var</span>(--font-color)<br>&#125;<br><br><span class="hljs-selector-id">#footer</span> <span class="hljs-selector-id">#footer-wrap</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-built_in">var</span>(--font-color)<br>&#125;<br><br><span class="hljs-comment">/* 页脚透明end */</span><br></code></pre></td></tr></table></figure>
<h1 id="文章页版权样式美化"><a href="#文章页版权样式美化" class="headerlink" title="文章页版权样式美化"></a>文章页版权样式美化</h1><p>在<code>[blogRoot]/self/css/meihua.css</code>，增加下面的代码</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 版权样式调整start */</span><br><span class="hljs-selector-id">#post</span> <span class="hljs-selector-class">.post-copyright</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">var</span>(--icat-card-bg);<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">1rem</span> <span class="hljs-number">1.3rem</span>;<br>  <span class="hljs-attribute">overflow</span>: hidden;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-built_in">var</span>(--style-border);<br>  <span class="hljs-attribute">border-width</span>: <span class="hljs-number">1px</span>;<br>  <span class="hljs-attribute">transition</span>: <span class="hljs-number">0.3s</span>;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">1.5rem</span> <span class="hljs-number">0px</span> <span class="hljs-number">0.5rem</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">8px</span>;<br>&#125;<br><span class="hljs-selector-id">#post</span> <span class="hljs-selector-class">.post-copyright</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">right</span>: <span class="hljs-number">22px</span>;<br>  <span class="hljs-attribute">top</span>: -<span class="hljs-number">77px</span>;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;\e039&quot;</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">180px</span>;<br>  <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&quot;iconfont&quot;</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-built_in">var</span>(--icat-fontcolor);<br>  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0.1</span>;<br>  <span class="hljs-attribute">filter</span>: <span class="hljs-built_in">blur</span>(<span class="hljs-number">7px</span>);<br>&#125;<br><span class="hljs-comment">/* 版权样式调整end */</span><br></code></pre></td></tr></table></figure>
<h1 id="分类页和标签页面添加Bar条"><a href="#分类页和标签页面添加Bar条" class="headerlink" title="分类页和标签页面添加Bar条"></a>分类页和标签页面添加Bar条</h1><blockquote>
<p>使用<a href="https://blog.justlovesmile.top/posts/2bfb1caa.html?time=1697259572852">justlovesmile</a></p>
</blockquote>
<h2 id="新增pug文件"><a href="#新增pug文件" class="headerlink" title="新增pug文件"></a>新增pug文件</h2><h2 id="新增categoryBar-pug文件"><a href="#新增categoryBar-pug文件" class="headerlink" title="新增categoryBar.pug文件"></a>新增categoryBar.pug文件</h2><p>首先是分类条，在<code>themes/butterfly/layout/includes/</code>处新建文件<code>categoryBar.pug</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs pug">#category-bar<br>  .category-bar-items#category-bar-items<br>    !=getarray_bar(&quot;category&quot;)<br>  a.category-bar-more(href=&quot;/categories/&quot;) 更多<br></code></pre></td></tr></table></figure>
<h2 id="新增tarsBar-pug文件"><a href="#新增tarsBar-pug文件" class="headerlink" title="新增tarsBar.pug文件"></a>新增tarsBar.pug文件</h2><p>其次是标签条，在<code>themes/butterfly/layout/includes/</code>处新建文件<code>tagBar.pug</code>，因为样式一样，所以没有更改id和class名称。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs pug">#category-bar<br>  .category-bar-items#category-bar-items<br>    !=getarray_bar(&quot;tag&quot;)<br>  a.category-bar-more(href=&quot;/tags/&quot;) 更多<br></code></pre></td></tr></table></figure>
<h2 id="新建Hexo辅助函数"><a href="#新建Hexo辅助函数" class="headerlink" title="新建Hexo辅助函数"></a>新建Hexo辅助函数</h2><p>在<code>theme/butterfly/scripts/helpers/</code>中创建<code>get_arrays.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js">hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">helper</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">&#x27;getarray_bar&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">types</span>) &#123;<br>  <span class="hljs-keyword">if</span> (!types) &#123;<br>    types = <span class="hljs-string">&quot;category&quot;</span><br>  &#125;<br>  <span class="hljs-keyword">const</span> categoriesBar = <span class="hljs-keyword">function</span> (<span class="hljs-params">categories</span>) &#123;<br>    <span class="hljs-keyword">if</span> (!categories || !categories.<span class="hljs-property">length</span>) <span class="hljs-keyword">return</span> <span class="hljs-string">``</span><br>    <span class="hljs-keyword">const</span> categoryArr = []<br>    hexo.<span class="hljs-property">locals</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;categories&#x27;</span>).<span class="hljs-title function_">map</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">category</span>) &#123;<br>      categoryArr.<span class="hljs-title function_">push</span>(&#123; <span class="hljs-attr">name</span>: category.<span class="hljs-property">name</span>, <span class="hljs-attr">value</span>: category.<span class="hljs-property">length</span> &#125;)<br>    &#125;)<br>    categoryArr.<span class="hljs-title function_">sort</span>(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> &#123; <span class="hljs-keyword">return</span> b.<span class="hljs-property">value</span> - a.<span class="hljs-property">value</span> &#125;)<br>    <span class="hljs-keyword">let</span> strCategoriesBar = <span class="hljs-string">``</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; categories.<span class="hljs-property">length</span>; i++) &#123;<br>      strTemp=<span class="hljs-string">`</span><br><span class="hljs-string">      &lt;div class=&quot;category-bar-item&quot; id=&quot;<span class="hljs-subst">$&#123;categoryArr[i].name&#125;</span>&quot;&gt;</span><br><span class="hljs-string">      &lt;a href=&quot;/categories/<span class="hljs-subst">$&#123;categoryArr[i].name&#125;</span>/&quot;&gt;<span class="hljs-subst">$&#123;categoryArr[i].name&#125;</span>&lt;/a&gt;</span><br><span class="hljs-string">      &lt;/div&gt;`</span><br>      strCategoriesBar+=strTemp<br>    &#125;<br>    <span class="hljs-keyword">return</span> strCategoriesBar<br>  &#125;<br>  <span class="hljs-keyword">const</span> tagsBar = <span class="hljs-keyword">function</span>(<span class="hljs-params">tags</span>) &#123;<br>    <span class="hljs-keyword">if</span> (!tags || !tags.<span class="hljs-property">length</span>) <span class="hljs-keyword">return</span> <span class="hljs-string">``</span><br>    <span class="hljs-keyword">const</span> tagArr = []<br>    hexo.<span class="hljs-property">locals</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;tags&#x27;</span>).<span class="hljs-title function_">map</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">tag</span>) &#123;<br>      tagArr.<span class="hljs-title function_">push</span>(&#123; <span class="hljs-attr">name</span>: tag.<span class="hljs-property">name</span>, <span class="hljs-attr">value</span>: tag.<span class="hljs-property">length</span> &#125;)<br>    &#125;)<br>    tagArr.<span class="hljs-title function_">sort</span>(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> &#123; <span class="hljs-keyword">return</span> b.<span class="hljs-property">value</span> - a.<span class="hljs-property">value</span> &#125;)<br>    <span class="hljs-keyword">let</span> strTagsBar = <span class="hljs-string">``</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; tags.<span class="hljs-property">length</span>; i++) &#123;<br>      strTemp=<span class="hljs-string">`</span><br><span class="hljs-string">      &lt;div class=&quot;category-bar-item&quot; id=&quot;<span class="hljs-subst">$&#123;tagArr[i].name&#125;</span>&quot;&gt;</span><br><span class="hljs-string">      &lt;a href=&quot;/tags/<span class="hljs-subst">$&#123;tagArr[i].name&#125;</span>/&quot;&gt;<span class="hljs-subst">$&#123;tagArr[i].name&#125;</span>&lt;/a&gt;</span><br><span class="hljs-string">      &lt;/div&gt;`</span><br>      strTagsBar+=strTemp<br>    &#125;<br>    <span class="hljs-keyword">return</span> strTagsBar<br>  &#125;<br>  <span class="hljs-keyword">if</span> (types == <span class="hljs-string">&quot;category&quot;</span>)&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">categoriesBar</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">site</span>.<span class="hljs-property">categories</span>)<br>  &#125;<br>  <span class="hljs-keyword">if</span> (types == <span class="hljs-string">&quot;tag&quot;</span>)&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">tagsBar</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">site</span>.<span class="hljs-property">tags</span>)<br>  &#125;<br>&#125;)<br></code></pre></td></tr></table></figure>
<h2 id="在页面引用模块"><a href="#在页面引用模块" class="headerlink" title="在页面引用模块"></a>在页面引用模块</h2><p>在分类页面引用：找到<code>theme/butterfly/layout/category.pug</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs pug">extends includes/layout.pug<br><br>block content<br>  if theme.category_ui == &#x27;index&#x27;<br>    include ./includes/mixins/post-ui.pug<br>    #recent-posts.recent-posts.category_ui   <br>      +postUI<br>      include includes/pagination.pug    <br>  else<br>    include ./includes/mixins/article-sort.pug<br>    #category<br>+      .category-in-bar<br>+        .category-in-bar-tips<br>+          i.fa-fw.fas.fa-folder-open<br>+        include includes/categoryBar.pug<br>      .article-sort-title= _p(&#x27;page.category&#x27;) + &#x27; - &#x27; + page.category<br>      +articleSort(page.posts)<br>      include includes/pagination.pug<br></code></pre></td></tr></table></figure>
<p>在标签页引用：找到<code>theme/butterfly/layout/tag.pug</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs pug">extends includes/layout.pug<br><br>block content<br>  if theme.tag_ui == &#x27;index&#x27;<br>    include ./includes/mixins/post-ui.pug<br>    #recent-posts.recent-posts<br>      +postUI<br>      include includes/pagination.pug<br>  else<br>    include ./includes/mixins/article-sort.pug<br>    #tag<br>+      .category-in-bar<br>+        .category-in-bar-tips<br>+          i.fa-fw.fas.fa-tags<br>+        include includes/tagBar.pug<br>      .article-sort-title= _p(&#x27;page.tag&#x27;) + &#x27; - &#x27; + page.tag<br>      +articleSort(page.posts)<br>      include includes/pagination.pug<br></code></pre></td></tr></table></figure>
<h2 id="引入js和css文件"><a href="#引入js和css文件" class="headerlink" title="引入js和css文件"></a>引入js和css文件</h2><p>在自定义的js里面添加</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// -----------分类条的js-----------</span><br><span class="hljs-title function_">categoriesBarActive</span>()<br><span class="hljs-title function_">topCategoriesBarScroll</span>()<br><span class="hljs-title function_">tagsBarActive</span>()<br><br><span class="hljs-comment">//分类条</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">categoriesBarActive</span>(<span class="hljs-params"></span>)&#123;<br>  <span class="hljs-keyword">var</span> urlinfo = <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">pathname</span>;<br>  urlinfo = <span class="hljs-built_in">decodeURIComponent</span>(urlinfo)<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(urlinfo);<br>  <span class="hljs-comment">//判断是否是首页</span><br>  <span class="hljs-keyword">if</span> (urlinfo == <span class="hljs-string">&#x27;/&#x27;</span>)&#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;#category-bar&#x27;</span>))&#123;<br>      <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;首页&#x27;</span>).<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&quot;select&quot;</span>)<br>    &#125;<br>  &#125;<span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-comment">// 验证是否是分类链接</span><br>    <span class="hljs-keyword">var</span> pattern = <span class="hljs-regexp">/\/categories\/.*?\//</span>;<br>    <span class="hljs-keyword">var</span> patbool = pattern.<span class="hljs-title function_">test</span>(urlinfo);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(patbool);<br>    <span class="hljs-comment">// 获取当前的分类</span><br>    <span class="hljs-keyword">if</span> (patbool) &#123;<br>      <span class="hljs-keyword">var</span> valuegroup = urlinfo.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;/&quot;</span>);<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(valuegroup[<span class="hljs-number">2</span>]);<br>      <span class="hljs-comment">// 获取当前分类</span><br>      <span class="hljs-keyword">var</span> nowCategorie = valuegroup[<span class="hljs-number">2</span>];<br>      <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;#category-bar&#x27;</span>))&#123;<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(nowCategorie).<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&quot;select&quot;</span>);<br>      &#125;<br>    &#125;<br>  &#125;<br>  <br>&#125;<br><br><span class="hljs-comment">//鼠标控制横向滚动</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">topCategoriesBarScroll</span>(<span class="hljs-params"></span>)&#123;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;category-bar-items&quot;</span>))&#123;<br>    <span class="hljs-keyword">let</span> xscroll = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;category-bar-items&quot;</span>);<br>  xscroll.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;mousewheel&quot;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>    <span class="hljs-comment">//计算鼠标滚轮滚动的距离</span><br>    <span class="hljs-keyword">let</span> v = -e.<span class="hljs-property">wheelDelta</span> / <span class="hljs-number">2</span>;<br>    xscroll.<span class="hljs-property">scrollLeft</span> += v;<br>    <span class="hljs-comment">//阻止浏览器默认方法</span><br>    e.<span class="hljs-title function_">preventDefault</span>();<br>&#125;, <span class="hljs-literal">false</span>);<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">// -----------标签条的js-----------</span><br><span class="hljs-comment">//标签条</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">tagsBarActive</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">var</span> urlinfo = <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">pathname</span>;<br>    urlinfo = <span class="hljs-built_in">decodeURIComponent</span>(urlinfo)<br>    <span class="hljs-comment">//console.log(urlinfo);</span><br>    <span class="hljs-comment">//判断是否是首页</span><br>    <span class="hljs-keyword">if</span> (urlinfo == <span class="hljs-string">&#x27;/&#x27;</span>)&#123;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;#tags-bar&#x27;</span>))&#123;<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;首页&#x27;</span>).<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&quot;select&quot;</span>)<br>      &#125;<br>    &#125;<span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-comment">// 验证是否是分类链接</span><br>      <span class="hljs-keyword">var</span> pattern = <span class="hljs-regexp">/\/tags\/.*?\//</span>;<br>      <span class="hljs-keyword">var</span> patbool = pattern.<span class="hljs-title function_">test</span>(urlinfo);<br>      <span class="hljs-comment">//console.log(patbool);</span><br>      <span class="hljs-comment">// 获取当前的标签</span><br>      <span class="hljs-keyword">if</span> (patbool) &#123;<br>        <span class="hljs-keyword">var</span> valuegroup = urlinfo.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;/&quot;</span>);<br>        <span class="hljs-comment">//console.log(valuegroup[2]);</span><br>        <span class="hljs-comment">// 获取当前分类</span><br>        <span class="hljs-keyword">var</span> nowTag = valuegroup[<span class="hljs-number">2</span>];<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;#category-bar&#x27;</span>))&#123;<br>          <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(nowTag).<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&quot;select&quot;</span>);<br>        &#125;<br>      &#125;<br>    &#125; <br>  &#125;<br></code></pre></td></tr></table></figure>
<h1 id="修改导航栏一闪的问题"><a href="#修改导航栏一闪的问题" class="headerlink" title="修改导航栏一闪的问题"></a>修改导航栏一闪的问题</h1><blockquote>
<p>使用的<a href="https://blog.anheyu.com/posts/8e53.html">安知鱼</a></p>
</blockquote>
<h2 id="修改main-js"><a href="#修改main-js" class="headerlink" title="修改main.js"></a>修改main.js</h2><p>修改顶栏一闪而过的 bug 修改本地<code>themes/butterfly/source/js/main.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js">  <span class="hljs-variable language_">window</span>.<span class="hljs-property">scrollCollect</span> = <span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-keyword">return</span> btf.<span class="hljs-title function_">throttle</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>          <span class="hljs-keyword">const</span> currentTop = <span class="hljs-variable language_">window</span>.<span class="hljs-property">scrollY</span> || <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">scrollTop</span><br>          <span class="hljs-keyword">const</span> isDown = <span class="hljs-title function_">scrollDirection</span>(currentTop)<br>          <span class="hljs-keyword">if</span> (currentTop &gt; <span class="hljs-number">56</span>) &#123;<br>+           $header.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&#x27;is-top-bar&#x27;</span>)<br>            <span class="hljs-keyword">if</span> (isDown) &#123;<br>              <span class="hljs-keyword">if</span> ($header.<span class="hljs-property">classList</span>.<span class="hljs-title function_">contains</span>(<span class="hljs-string">&#x27;nav-visible&#x27;</span>)) $header.<span class="hljs-property">classList</span>.<span class="hljs-title function_">remove</span>(<span class="hljs-string">&#x27;nav-visible&#x27;</span>)<br>              <span class="hljs-keyword">if</span> (isChatBtnShow &amp;&amp; isChatShow === <span class="hljs-literal">true</span>) &#123;<br>                <span class="hljs-title function_">chatBtnHide</span>()<br>                isChatShow = <span class="hljs-literal">false</span><br>              &#125;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>              <span class="hljs-keyword">if</span> (!$header.<span class="hljs-property">classList</span>.<span class="hljs-title function_">contains</span>(<span class="hljs-string">&#x27;nav-visible&#x27;</span>)) $header.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&#x27;nav-visible&#x27;</span>)<br>              <span class="hljs-keyword">if</span> (isChatBtnHide &amp;&amp; isChatShow === <span class="hljs-literal">false</span>) &#123;<br>                <span class="hljs-title function_">chatBtnShow</span>()<br>                isChatShow = <span class="hljs-literal">true</span><br>              &#125;<br>            &#125;<br>            $header.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&#x27;nav-fixed&#x27;</span>)<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">window</span>.<span class="hljs-title function_">getComputedStyle</span>($rightside).<span class="hljs-title function_">getPropertyValue</span>(<span class="hljs-string">&#x27;opacity&#x27;</span>) === <span class="hljs-string">&#x27;0&#x27;</span>) &#123;<br>              $rightside.<span class="hljs-property">style</span>.<span class="hljs-property">cssText</span> = <span class="hljs-string">&#x27;opacity: 0.8; transform: translateX(-58px)&#x27;</span><br>            &#125;<br>          &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">if</span> (currentTop === <span class="hljs-number">0</span>) &#123;<br>-             $header.<span class="hljs-property">classList</span>.<span class="hljs-title function_">remove</span>(<span class="hljs-string">&#x27;nav-fixed&#x27;</span>, <span class="hljs-string">&#x27;nav-visible&#x27;</span>)<br>+             $header.<span class="hljs-property">classList</span>.<span class="hljs-title function_">remove</span>(<span class="hljs-string">&#x27;is-top-bar&#x27;</span>)<br>            &#125;<br>            $rightside.<span class="hljs-property">style</span>.<span class="hljs-property">cssText</span> = <span class="hljs-string">&quot;opacity: &#x27;&#x27;; transform: &#x27;&#x27;&quot;</span><br>          &#125;<br><br>          <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">scrollHeight</span> &lt;= innerHeight) &#123;<br>            $rightside.<span class="hljs-property">style</span>.<span class="hljs-property">cssText</span> = <span class="hljs-string">&#x27;opacity: 0.8; transform: translateX(-58px)&#x27;</span><br>          &#125;<br>        &#125;, <span class="hljs-number">200</span>)()<br>      &#125;<br></code></pre></td></tr></table></figure>
<h1 id="侧边栏最近文章梅花"><a href="#侧边栏最近文章梅花" class="headerlink" title="侧边栏最近文章梅花"></a>侧边栏最近文章梅花</h1><h2 id="修改index-pug布局"><a href="#修改index-pug布局" class="headerlink" title="修改index.pug布局"></a>修改index.pug布局</h2><p>去除首页最近文章显示，改为文章页显示，修改<code>themes/butterfly/layout/includes/widget/index.pug</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs pug">else<br>//- page<br>!=partial(&#x27;includes/widget/card_author&#x27;, &#123;&#125;, &#123;cache: true&#125;)<br>!=partial(&#x27;includes/widget/card_announcement&#x27;, &#123;&#125;, &#123;cache: true&#125;)<br>!=partial(&#x27;includes/widget/card_top_self&#x27;, &#123;&#125;, &#123;cache: true&#125;)<br><br>.sticky_layout<br>  if showToc<br>    include ./card_post_toc.pug<br>  <br>  //- !=partial(&#x27;includes/widget/card_recent_post&#x27;, &#123;&#125;, &#123;cache: true&#125;)   //- 注释掉最近文章<br>  <br>  !=partial(&#x27;includes/widget/card_ad&#x27;, &#123;&#125;, &#123;cache: true&#125;)<br>  !=partial(&#x27;includes/widget/card_newest_comment&#x27;, &#123;&#125;, &#123;cache: true&#125;)<br>  !=partial(&#x27;includes/widget/card_categories&#x27;, &#123;&#125;, &#123;cache: true&#125;)<br>  !=partial(&#x27;includes/widget/card_tags&#x27;, &#123;&#125;, &#123;cache: true&#125;)<br></code></pre></td></tr></table></figure>
<h2 id="添加css美化"><a href="#添加css美化" class="headerlink" title="添加css美化"></a>添加css美化</h2><figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#aside-content</span> <span class="hljs-selector-class">.aside-list</span> &gt; <span class="hljs-selector-class">.aside-list-item</span> <span class="hljs-selector-class">.content</span> &gt; <span class="hljs-selector-tag">time</span> &#123;<br>  <span class="hljs-attribute">display</span>: none;<br>&#125;<br><span class="hljs-selector-id">#aside-content</span> <span class="hljs-selector-class">.aside-list</span> &gt; <span class="hljs-selector-class">.aside-list-item</span> <span class="hljs-selector-class">.content</span> &gt; <span class="hljs-selector-class">.title</span> &#123;<br>  -webkit-line-clamp: <span class="hljs-number">3</span>;<br>  <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">700</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">2px</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-selector-id">#aside-content</span> <span class="hljs-selector-class">.aside-list</span> &gt; <span class="hljs-selector-class">.aside-list-item</span> &#123;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">8px</span>;<br>  <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">6px</span> <span class="hljs-meta">!important</span>;<br>  <span class="hljs-attribute">padding-bottom</span>: <span class="hljs-number">6px</span> <span class="hljs-meta">!important</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">12px</span>;<br>  <span class="hljs-attribute">transition</span>: <span class="hljs-number">0.3s</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">4px</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">cursor</span>: pointer;<br>&#125;<br><span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">1300px</span>) &#123;<br>  <span class="hljs-selector-id">#aside-content</span> <span class="hljs-selector-class">.aside-list</span> &gt; <span class="hljs-selector-class">.aside-list-item</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scale</span>(<span class="hljs-number">1.03</span>);<br>  &#125;<br>  <span class="hljs-selector-id">#aside-content</span> <span class="hljs-selector-class">.aside-list</span> &gt; <span class="hljs-selector-class">.aside-list-item</span><span class="hljs-selector-pseudo">:active</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scale</span>(<span class="hljs-number">0.97</span>);<br>  &#125;<br>&#125;<br><span class="hljs-selector-id">#aside-content</span> <span class="hljs-selector-class">.aside-list</span> &gt; <span class="hljs-selector-class">.aside-list-item</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-class">.thumbnail</span> &gt; <span class="hljs-selector-tag">img</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scale</span>(<span class="hljs-number">1</span>);<br>&#125;<br><span class="hljs-selector-id">#aside-content</span> <span class="hljs-selector-class">.aside-list</span> &gt; <span class="hljs-selector-class">.aside-list-item</span><span class="hljs-selector-pseudo">:not</span>(<span class="hljs-selector-pseudo">:last-child</span>) &#123;<br>  <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">0</span> dashed <span class="hljs-built_in">var</span>(--anzhiyu-background) <span class="hljs-meta">!important</span>;<br>&#125;<br><span class="hljs-selector-id">#aside-content</span> <span class="hljs-selector-class">.aside-list</span> &gt; <span class="hljs-selector-class">.aside-list-item</span> <span class="hljs-selector-class">.thumbnail</span> &#123;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">8px</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-built_in">var</span>(--style-border);<br>&#125;<br><span class="hljs-selector-id">#aside-content</span> <span class="hljs-selector-class">.aside-list</span> &gt; <span class="hljs-selector-class">.aside-list-item</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">var</span>(--anzhiyu-blue-main);<br>  <span class="hljs-attribute">color</span>: <span class="hljs-built_in">var</span>(--anzhiyu-white);<br>  <span class="hljs-attribute">transition</span>: <span class="hljs-number">0.3s</span>;<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-built_in">var</span>(--anzhiyu-shadow-main);<br>&#125;<br><span class="hljs-selector-id">#aside-content</span> <span class="hljs-selector-class">.aside-list</span> &gt; <span class="hljs-selector-class">.aside-list-item</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-built_in">var</span>(--anzhiyu-white) <span class="hljs-meta">!important</span>;<br>&#125;<br><span class="hljs-selector-class">.card-widget</span><span class="hljs-selector-class">.card-recent-post</span> &#123;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0.4rem</span> <span class="hljs-number">0.6rem</span> <span class="hljs-meta">!important</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h1 id="文章页H1-H6添加小风车"><a href="#文章页H1-H6添加小风车" class="headerlink" title="文章页H1-H6添加小风车"></a>文章页H1-H6添加小风车</h1><blockquote>
<p>使用的<a href="https://blog.anheyu.com/posts/sdxhu.html#%E6%96%87%E7%AB%A0%E9%A1%B5%E5%B1%80%E9%83%A8-html-%E4%BB%A3%E7%A0%81%E4%B8%8D%E6%B8%B2%E6%9F%93">安知鱼</a></p>
</blockquote>
<h2 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h2><figure class="highlight yml"><table><tr><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">beautify:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">field:</span> <span class="hljs-string">post</span> <span class="hljs-comment"># site/post</span><br>  <span class="hljs-comment"># title-prefix-icon: &#x27;\f0c1&#x27; 原内容</span><br>  <span class="hljs-attr">title-prefix-icon:</span> <span class="hljs-string">&#x27;\f863&#x27;</span><br>  <span class="hljs-attr">title-prefix-icon-color:</span> <span class="hljs-string">&quot;#F47466&quot;</span><br></code></pre></td></tr></table></figure>
<h2 id="让小风车转起来"><a href="#让小风车转起来" class="headerlink" title="让小风车转起来"></a>让小风车转起来</h2><p>在自定义 <code>[blog]/source/self/css/custom.css</code> 文件中，加入以下代码即可</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 文章页H1-H6图标样式效果 */</span><br><span class="hljs-selector-tag">h1</span><span class="hljs-selector-pseudo">::before</span>,<br><span class="hljs-selector-tag">h2</span><span class="hljs-selector-pseudo">::before</span>,<br><span class="hljs-selector-tag">h3</span><span class="hljs-selector-pseudo">::before</span>,<br><span class="hljs-selector-tag">h4</span><span class="hljs-selector-pseudo">::before</span>,<br><span class="hljs-selector-tag">h5</span><span class="hljs-selector-pseudo">::before</span>,<br><span class="hljs-selector-tag">h6</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>  -webkit-<span class="hljs-attribute">animation</span>: ccc <span class="hljs-number">1.6s</span> linear infinite;<br>  <span class="hljs-attribute">animation</span>: ccc <span class="hljs-number">1.6s</span> linear infinite;<br>&#125;<br><span class="hljs-keyword">@-webkit-keyframes</span> ccc &#123;<br>  <span class="hljs-number">0%</span> &#123;<br>    -webkit-<span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">0deg</span>);<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">0deg</span>);<br>  &#125;<br>  <span class="hljs-selector-tag">to</span> &#123;<br>    -webkit-<span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(-<span class="hljs-number">1turn</span>);<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(-<span class="hljs-number">1turn</span>);<br>  &#125;<br>&#125;<br><span class="hljs-keyword">@keyframes</span> ccc &#123;<br>  <span class="hljs-number">0%</span> &#123;<br>    -webkit-<span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">0deg</span>);<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">0deg</span>);<br>  &#125;<br>  <span class="hljs-selector-tag">to</span> &#123;<br>    -webkit-<span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(-<span class="hljs-number">1turn</span>);<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(-<span class="hljs-number">1turn</span>);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="小风车的颜色和大小"><a href="#小风车的颜色和大小" class="headerlink" title="小风车的颜色和大小"></a>小风车的颜色和大小</h2><p>修改小风车的颜色和大小，加入下面的代码</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#content-inner</span><span class="hljs-selector-class">.layout</span> <span class="hljs-selector-tag">h1</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#ef50a8</span>;<br>  <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">1.55rem</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">1.3rem</span>;<br>  <span class="hljs-attribute">margin-top</span>: -<span class="hljs-number">0.23rem</span>;<br>&#125;<br><span class="hljs-selector-id">#content-inner</span><span class="hljs-selector-class">.layout</span> <span class="hljs-selector-tag">h2</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fb7061</span>;<br>  <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">1.35rem</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">1.1rem</span>;<br>  <span class="hljs-attribute">margin-top</span>: -<span class="hljs-number">0.12rem</span>;<br>&#125;<br><span class="hljs-selector-id">#content-inner</span><span class="hljs-selector-class">.layout</span> <span class="hljs-selector-tag">h3</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#ffbf00</span>;<br>  <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">1.22rem</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0.95rem</span>;<br>  <span class="hljs-attribute">margin-top</span>: -<span class="hljs-number">0.09rem</span>;<br>&#125;<br><span class="hljs-selector-id">#content-inner</span><span class="hljs-selector-class">.layout</span> <span class="hljs-selector-tag">h4</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#a9e000</span>;<br>  <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">1.05rem</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0.8rem</span>;<br>  <span class="hljs-attribute">margin-top</span>: -<span class="hljs-number">0.09rem</span>;<br>&#125;<br><span class="hljs-selector-id">#content-inner</span><span class="hljs-selector-class">.layout</span> <span class="hljs-selector-tag">h5</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#57c850</span>;<br>  <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">0.9rem</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0.7rem</span>;<br>  <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">0rem</span>;<br>&#125;<br><span class="hljs-selector-id">#content-inner</span><span class="hljs-selector-class">.layout</span> <span class="hljs-selector-tag">h6</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#5ec1e0</span>;<br>  <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">0.9rem</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0.66rem</span>;<br>  <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">0rem</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="小风车hover效果"><a href="#小风车hover效果" class="headerlink" title="小风车hover效果"></a>小风车hover效果</h2><p>设置鼠标碰到标题时，小风车跟随标题变色，且像是被光标阻碍了，转速变慢。鼠标离开恢复转速。也可以设置为 none 鼠标碰到停止转动。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#content-inner</span><span class="hljs-selector-class">.layout</span> <span class="hljs-selector-tag">h1</span><span class="hljs-selector-pseudo">:hover</span>,<br><span class="hljs-selector-id">#content-inner</span><span class="hljs-selector-class">.layout</span> <span class="hljs-selector-tag">h2</span><span class="hljs-selector-pseudo">:hover</span>,<br><span class="hljs-selector-id">#content-inner</span><span class="hljs-selector-class">.layout</span> <span class="hljs-selector-tag">h3</span><span class="hljs-selector-pseudo">:hover</span>,<br><span class="hljs-selector-id">#content-inner</span><span class="hljs-selector-class">.layout</span> <span class="hljs-selector-tag">h4</span><span class="hljs-selector-pseudo">:hover</span>,<br><span class="hljs-selector-id">#content-inner</span><span class="hljs-selector-class">.layout</span> <span class="hljs-selector-tag">h5</span><span class="hljs-selector-pseudo">:hover</span>,<br><span class="hljs-selector-id">#content-inner</span><span class="hljs-selector-class">.layout</span> <span class="hljs-selector-tag">h6</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#3b70fc</span>;<br>&#125;<br><span class="hljs-selector-id">#content-inner</span><span class="hljs-selector-class">.layout</span> <span class="hljs-selector-tag">h1</span><span class="hljs-selector-pseudo">:hover</span><span class="hljs-selector-pseudo">::before</span>,<br><span class="hljs-selector-id">#content-inner</span><span class="hljs-selector-class">.layout</span> <span class="hljs-selector-tag">h2</span><span class="hljs-selector-pseudo">:hover</span><span class="hljs-selector-pseudo">::before</span>,<br><span class="hljs-selector-id">#content-inner</span><span class="hljs-selector-class">.layout</span> <span class="hljs-selector-tag">h3</span><span class="hljs-selector-pseudo">:hover</span><span class="hljs-selector-pseudo">::before</span>,<br><span class="hljs-selector-id">#content-inner</span><span class="hljs-selector-class">.layout</span> <span class="hljs-selector-tag">h4</span><span class="hljs-selector-pseudo">:hover</span><span class="hljs-selector-pseudo">::before</span>,<br><span class="hljs-selector-id">#content-inner</span><span class="hljs-selector-class">.layout</span> <span class="hljs-selector-tag">h5</span><span class="hljs-selector-pseudo">:hover</span><span class="hljs-selector-pseudo">::before</span>,<br><span class="hljs-selector-id">#content-inner</span><span class="hljs-selector-class">.layout</span> <span class="hljs-selector-tag">h6</span><span class="hljs-selector-pseudo">:hover</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#3b70fc</span>;<br>  -webkit-<span class="hljs-attribute">animation</span>: ccc <span class="hljs-number">3.2s</span> linear infinite;<br>  <span class="hljs-attribute">animation</span>: ccc <span class="hljs-number">3.2s</span> linear infinite;<br>&#125;<br></code></pre></td></tr></table></figure>
<p>右下角设置 icon 转的太快了，让它慢一点吧。继续添加：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 页面设置icon转动速度调整 */</span><br><span class="hljs-selector-id">#rightside_config</span> <span class="hljs-selector-tag">i</span><span class="hljs-selector-class">.fas</span><span class="hljs-selector-class">.fa-cog</span><span class="hljs-selector-class">.fa-spin</span> &#123;<br>  <span class="hljs-attribute">animation</span>: fa-spin <span class="hljs-number">5s</span> linear infinite;<br>&#125;<br></code></pre></td></tr></table></figure>
<h1 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a>文章加密</h1><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>通过插件，实现文章输入密码才能浏览</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">npm install hexo-blog-encrypt --save<br></code></pre></td></tr></table></figure>
<h2 id="修改文章"><a href="#修改文章" class="headerlink" title="修改文章"></a>修改文章</h2><p>在文章头部加入</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><code class="hljs markdown">---<br>title: 加密文章测试，输入test即可查看<br>password: test<br><span class="hljs-section">message: 测试加密，这里的密码是：test</span><br><span class="hljs-section">---</span><br></code></pre></td></tr></table></figure>
<h1 id="文章增加最新文章标识"><a href="#文章增加最新文章标识" class="headerlink" title="文章增加最新文章标识"></a>文章增加最新文章标识</h1><blockquote>
<p>转载于<a href="https://starryif.github.io/2022/10/16/butterfly/newpost/index.html">云端</a></p>
</blockquote>
<h2 id="修改page-js"><a href="#修改page-js" class="headerlink" title="修改page.js"></a>修改page.js</h2><p>在js文件里面添加一段js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 最新文章</span><br>hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">helper</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">&#x27;newPost&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">let</span> name, time;<br>    hexo.<span class="hljs-property">locals</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;posts&#x27;</span>).<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item, index</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (index == <span class="hljs-number">0</span>) name = item.<span class="hljs-property">title</span>, time = item.<span class="hljs-property">date</span><br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (item.<span class="hljs-property">date</span> &gt; time) &#123; name = item.<span class="hljs-property">title</span>, time = item.<span class="hljs-property">date</span> &#125;<br>    &#125;);<br>    <span class="hljs-keyword">return</span> name<br>&#125;)<br></code></pre></td></tr></table></figure>
<h2 id="修改post-ui-pug"><a href="#修改post-ui-pug" class="headerlink" title="修改post-ui.pug"></a>修改post-ui.pug</h2><p>在 <code>themes\butterfly\layout\includes\mixins\post-ui.pug</code> 添加代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs pug">mixin postUI(posts)<br>+  - let newTitle= newPost()<br>  each article , index in page.posts.data<br>    .recent-post-item<br>      -<br>        let link = article.link || article.path<br>        let title = article.title || _p(&#x27;no_title&#x27;)<br>        const position = theme.cover.position<br>        let leftOrRight = position === &#x27;both&#x27;<br>          ? index%2 == 0 ? &#x27;left&#x27; : &#x27;right&#x27;<br>          : position === &#x27;left&#x27; ? &#x27;left&#x27; : &#x27;right&#x27;<br>        let post_cover = article.cover<br>        let no_cover = article.cover === false || !theme.cover.index_enable ? &#x27;no-cover&#x27; : &#x27;&#x27;<br>      -<br>      if post_cover &amp;&amp; theme.cover.index_enable<br>        .post_cover(class=leftOrRight)<br>          a(href=url_for(link) title=title)<br>            img.post_bg(src=url_for(post_cover) onerror=`this.onerror=null;this.src=&#x27;`+ url_for(theme.error_img.post_page) + `&#x27;` alt=title)<br>      .recent-post-info(class=no_cover)<br>+        if newTitle == title<br>+          span(class=`newPost-$&#123;leftOrRight==&#x27;left&#x27;?&#x27;right&#x27;:&#x27;left&#x27;&#125;`) 最新<br></code></pre></td></tr></table></figure>
<h2 id="添加自定义CSS"><a href="#添加自定义CSS" class="headerlink" title="添加自定义CSS"></a>添加自定义CSS</h2><figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#recent-posts</span>&gt;<span class="hljs-selector-class">.recent-post-item</span> &#123;<br>    <span class="hljs-attribute">position</span>: relative;<br>&#125;<br><br><span class="hljs-comment">/* 最新文章图标 */</span><br><span class="hljs-selector-class">.newPost-left</span>,<br><span class="hljs-selector-class">.newPost-right</span> &#123;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">color</span>: white;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">15px</span>;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#49b1f5</span>;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">10px</span> <span class="hljs-number">10px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.newPost-left</span> &#123;<br>    <span class="hljs-attribute">left</span>: <span class="hljs-number">15px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.newPost-right</span> &#123;<br>    <span class="hljs-attribute">right</span>: <span class="hljs-number">15px</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h1 id="hexo加速"><a href="#hexo加速" class="headerlink" title="hexo加速"></a>hexo加速</h1><blockquote>
<p>使用<a href="[使用gulp压缩博客静态资源 | Akilarの糖果屋](https://akilar.top/posts/49b73b87/">akilar</a>)教程</p>
</blockquote>
<h2 id="安装Gulp插件"><a href="#安装Gulp插件" class="headerlink" title="安装Gulp插件"></a>安装Gulp插件</h2><p>在博客根目录<code>[Blogroot]</code>打开终端，输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">npm install --global gulp-cli <span class="hljs-comment">#全局安装gulp指令集</span><br>npm install gulp --save <span class="hljs-comment">#安装gulp插件</span><br></code></pre></td></tr></table></figure>
<h2 id="安装各个下属插件以实现对各类静态资源的压缩"><a href="#安装各个下属插件以实现对各类静态资源的压缩" class="headerlink" title="安装各个下属插件以实现对各类静态资源的压缩"></a>安装各个下属插件以实现对各类静态资源的压缩</h2><ul>
<li>压缩HTML:</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">npm install gulp-htmlclean --save-dev<br>npm install gulp-html-minifier-terser --save-dev<br><span class="hljs-comment"># 用gulp-html-minifier-terser可以压缩HTML中的ES6语法</span><br></code></pre></td></tr></table></figure>
<ul>
<li>压缩CSS:</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">npm install gulp-clean-css --save-dev<br></code></pre></td></tr></table></figure>
<ul>
<li>压缩JS:</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">npm install gulp-terser --save-dev<br></code></pre></td></tr></table></figure>
<ul>
<li>压缩字体包:</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">npm install gulp-fontmin --save-dev<br></code></pre></td></tr></table></figure>
<h2 id="为Gulp创建gulpfile-js任务脚本"><a href="#为Gulp创建gulpfile-js任务脚本" class="headerlink" title="为Gulp创建gulpfile.js任务脚本"></a>为Gulp创建<code>gulpfile.js</code>任务脚本</h2><p>在博客根目录<code>[Blogroot]</code>下新建<code>gulpfile.js</code>,打开<code>[Blogroot]\gulpfile.js</code>,输入以下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">//用到的各个插件<br>var gulp = require(<span class="hljs-string">&#x27;gulp&#x27;</span>);<br>var cleanCSS = require(<span class="hljs-string">&#x27;gulp-clean-css&#x27;</span>);<br>var htmlmin = require(<span class="hljs-string">&#x27;gulp-html-minifier-terser&#x27;</span>);<br>var htmlclean = require(<span class="hljs-string">&#x27;gulp-htmlclean&#x27;</span>);<br>var fontmin = require(<span class="hljs-string">&#x27;gulp-fontmin&#x27;</span>);<br>// gulp-tester<br>var terser = require(<span class="hljs-string">&#x27;gulp-terser&#x27;</span>);<br>// 压缩js<br>gulp.task(<span class="hljs-string">&#x27;compress&#x27;</span>, async() =&gt;&#123;<br>  gulp.src([<span class="hljs-string">&#x27;./public/**/*.js&#x27;</span>, <span class="hljs-string">&#x27;!./public/**/*.min.js&#x27;</span>])<br>    .pipe(terser())<br>    .pipe(gulp.dest(<span class="hljs-string">&#x27;./public&#x27;</span>))<br>&#125;);<br>//压缩css<br>gulp.task(<span class="hljs-string">&#x27;minify-css&#x27;</span>, () =&gt; &#123;<br>    <span class="hljs-built_in">return</span> gulp.src([<span class="hljs-string">&#x27;./public/**/*.css&#x27;</span>])<br>        .pipe(cleanCSS(&#123;<br>            compatibility: <span class="hljs-string">&#x27;ie11&#x27;</span><br>        &#125;))<br>        .pipe(gulp.dest(<span class="hljs-string">&#x27;./public&#x27;</span>));<br>&#125;);<br>//压缩html<br>gulp.task(<span class="hljs-string">&#x27;minify-html&#x27;</span>, () =&gt; &#123;<br>    <span class="hljs-built_in">return</span> gulp.src(<span class="hljs-string">&#x27;./public/**/*.html&#x27;</span>)<br>        .pipe(htmlclean())<br>        .pipe(htmlmin(&#123;<br>            removeComments: <span class="hljs-literal">true</span>, //清除html注释<br>            collapseWhitespace: <span class="hljs-literal">true</span>, //压缩html<br>            collapseBooleanAttributes: <span class="hljs-literal">true</span>,<br>            //省略布尔属性的值，例如：&lt;input checked=<span class="hljs-string">&quot;true&quot;</span>/&gt; ==&gt; &lt;input /&gt;<br>            removeEmptyAttributes: <span class="hljs-literal">true</span>,<br>            //删除所有空格作属性值，例如：&lt;input <span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;&quot;</span> /&gt; ==&gt; &lt;input /&gt;<br>            removeScriptTypeAttributes: <span class="hljs-literal">true</span>,<br>            //删除&lt;script&gt;的<span class="hljs-built_in">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span><br>            removeStyleLinkTypeAttributes: <span class="hljs-literal">true</span>,<br>            //删除&lt;style&gt;和&lt;<span class="hljs-built_in">link</span>&gt;的 <span class="hljs-built_in">type</span>=<span class="hljs-string">&quot;text/css&quot;</span><br>            minifyJS: <span class="hljs-literal">true</span>, //压缩页面 JS<br>            minifyCSS: <span class="hljs-literal">true</span>, //压缩页面 CSS<br>            minifyURLs: <span class="hljs-literal">true</span>  //压缩页面URL<br>        &#125;))<br>        .pipe(gulp.dest(<span class="hljs-string">&#x27;./public&#x27;</span>))<br>&#125;);<br>//压缩字体<br><span class="hljs-keyword">function</span> minifyFont(text, cb) &#123;<br>  gulp<br>    .src(<span class="hljs-string">&#x27;./public/fonts/*.ttf&#x27;</span>) //原字体所在目录<br>    .pipe(fontmin(&#123;<br>      text: text<br>    &#125;))<br>    .pipe(gulp.dest(<span class="hljs-string">&#x27;./public/fontsdest/&#x27;</span>)) //压缩后的输出目录<br>    .on(<span class="hljs-string">&#x27;end&#x27;</span>, cb);<br>&#125;<br><br>gulp.task(<span class="hljs-string">&#x27;mini-font&#x27;</span>, (cb) =&gt; &#123;<br>  var buffers = [];<br>  gulp<br>    .src([<span class="hljs-string">&#x27;./public/**/*.html&#x27;</span>]) //HTML文件所在目录请根据自身情况修改<br>    .on(<span class="hljs-string">&#x27;data&#x27;</span>, <span class="hljs-keyword">function</span>(file) &#123;<br>      buffers.push(file.contents);<br>    &#125;)<br>    .on(<span class="hljs-string">&#x27;end&#x27;</span>, <span class="hljs-function"><span class="hljs-title">function</span></span>() &#123;<br>      var text = Buffer.concat(buffers).toString(<span class="hljs-string">&#x27;utf-8&#x27;</span>);<br>      minifyFont(text, cb);<br>    &#125;);<br>&#125;);<br>// 运行gulp命令时依次执行以下任务<br>gulp.task(<span class="hljs-string">&#x27;default&#x27;</span>, gulp.parallel(<br>  <span class="hljs-string">&#x27;compress&#x27;</span>, <span class="hljs-string">&#x27;minify-css&#x27;</span>, <span class="hljs-string">&#x27;minify-html&#x27;</span>,<span class="hljs-string">&#x27;mini-font&#x27;</span><br><span class="hljs-comment">#))</span><br></code></pre></td></tr></table></figure>
<blockquote>
<p>在每次运行完<code>hexo generate</code>生成静态页面后，运行<code>gulp</code>对其进行压缩。指令流程如下：</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">hexo clean<br>hexo generate<br>gulp<br>hexo server 或 hexo deploy<br></code></pre></td></tr></table></figure>
<h1 id="手机端悬浮窗"><a href="#手机端悬浮窗" class="headerlink" title="手机端悬浮窗"></a>手机端悬浮窗</h1><blockquote>
<p>使用<a href="https://akilar.top/posts/451ac5f8/">akilar</a>教程</p>
</blockquote>
<p>新建<code>[Blogroot]\themes\butterfly\source\js\custom\fixed_card_widget.js</code>,用来控制显隐逻辑</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 固定卡片点击动作</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">FixedCardWidget</span>(<span class="hljs-params">type,name,index</span>)&#123;<br>  <span class="hljs-comment">// 根据id或class选择元素</span><br>  <span class="hljs-keyword">if</span> (type === <span class="hljs-string">&quot;id&quot;</span>)&#123;<br>    <span class="hljs-keyword">var</span> tempcard = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(name);<br>  &#125;<br>  <span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">var</span> tempcard = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByClassName</span>(name)[index];<br>  &#125;<br>  <span class="hljs-comment">// 若元素存在</span><br>  <span class="hljs-keyword">if</span> (tempcard) &#123;<br>      <span class="hljs-comment">// 首先判断是否存在fixed-card-widget类</span><br>      <span class="hljs-keyword">if</span> (tempcard.<span class="hljs-property">className</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&#x27;fixed-card-widget&#x27;</span>) &gt; -<span class="hljs-number">1</span>)&#123;<br>        <span class="hljs-comment">// 存在则移除</span><br>        <span class="hljs-title class_">RemoveFixedCardWidget</span>();<br>      &#125;<br>      <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-comment">// 不存在则先初始化防止卡片叠加</span><br>        <span class="hljs-title class_">RemoveFixedCardWidget</span>();<br>        <span class="hljs-comment">//新建退出蒙版</span><br>        <span class="hljs-title class_">CreateQuitBox</span>();<br>        <span class="hljs-comment">// 再添加固定卡片样式</span><br>        tempcard.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&#x27;fixed-card-widget&#x27;</span>);<br>      &#125;<br>  &#125;<br>&#125;<br><span class="hljs-comment">//创建一个蒙版，作为退出键使用</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">CreateQuitBox</span>(<span class="hljs-params"></span>)&#123;<br>  <span class="hljs-keyword">var</span> quitBox = <span class="hljs-string">`&lt;div id=&quot;quit-box&quot; onclick=&quot;RemoveFixedCardWidget()&quot;&gt;&lt;/div&gt;`</span><br>  <span class="hljs-keyword">var</span> asideContent = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;aside-content&#x27;</span>);<br>  asideContent.<span class="hljs-title function_">insertAdjacentHTML</span>(<span class="hljs-string">&quot;beforebegin&quot;</span>,quitBox)<br>&#125;<br><span class="hljs-comment">// 移除卡片方法</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">RemoveFixedCardWidget</span>(<span class="hljs-params"></span>)&#123;<br>  <span class="hljs-keyword">var</span> activedItems = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;.fixed-card-widget&#x27;</span>);<br>  <span class="hljs-keyword">if</span> (activedItems) &#123;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; activedItems.<span class="hljs-property">length</span>; i++) &#123;<br>      activedItems[i].<span class="hljs-property">classList</span>.<span class="hljs-title function_">remove</span>(<span class="hljs-string">&#x27;fixed-card-widget&#x27;</span>);<br>    &#125;<br>  &#125;<br>  <span class="hljs-comment">//移除退出蒙版</span><br>  <span class="hljs-keyword">var</span> quitBox = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;quit-box&#x27;</span>);<br>  <span class="hljs-keyword">if</span> (quitBox) quitBox.<span class="hljs-title function_">remove</span>();<br>&#125;<br><span class="hljs-comment">// 常规先初始化，确保切换页面后不会有固定卡片留存</span><br><span class="hljs-title class_">RemoveFixedCardWidget</span>()<br><br></code></pre></td></tr></table></figure>
<p>新建<code>[Blogroot]\themes\butterfly\source\css\_layout\fixed_card_widget.styl</code>,此处使用stylus交给插件编译，能够更快捷的适配多种内核样式</p>
<figure class="highlight styl"><table><tr><td class="code"><pre><code class="hljs styl"><span class="hljs-comment">// 垂直居中卡片样式（排除toc目录卡片）</span><br><span class="hljs-selector-class">.fixed-card-widget</span><br>  <span class="hljs-selector-pseudo">&amp;:not</span>(#card-toc)<br>    <span class="hljs-attribute">visibility</span> visible<span class="hljs-meta">!important</span><br>    <span class="hljs-attribute">display</span> block<span class="hljs-meta">!important</span><br>    <span class="hljs-attribute">position</span> fixed<span class="hljs-meta">!important</span><br>    <span class="hljs-attribute">bottom</span> <span class="hljs-number">0</span><br>    <span class="hljs-attribute">left</span> <span class="hljs-number">0</span><br>    <span class="hljs-attribute">top</span> <span class="hljs-number">0</span><br>    <span class="hljs-attribute">right</span> <span class="hljs-number">0</span><br>    <span class="hljs-attribute">margin</span> auto<br>    <span class="hljs-attribute">margin-bottom</span> auto<span class="hljs-meta">!important</span><br>    <span class="hljs-attribute">margin-top</span> auto<span class="hljs-meta">!important</span><br>    <span class="hljs-attribute">max-width</span> <span class="hljs-number">300px</span><br>    <span class="hljs-attribute">max-height</span> <span class="hljs-number">500px</span><br>    <span class="hljs-attribute">width</span> auto<br>    <span class="hljs-attribute">height</span> auto<br>    <span class="hljs-attribute">overflow-y</span>: scroll<br>    <span class="hljs-attribute">z-index</span> <span class="hljs-number">999</span><br>    <span class="hljs-attribute">animation</span> rotateX <span class="hljs-number">0.5s</span> ease<br>    <span class="hljs-attribute">animation-fill-mode</span> forwards<br>    &amp;::-webkit-scrollbar<br>      <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span><br><span class="hljs-comment">// 针对说说卡片做样式兼容适配</span><br><span class="hljs-selector-class">.card-shuo</span><br>  &amp;<span class="hljs-selector-class">.fixed-card-widget</span><br>    <span class="hljs-selector-id">#artitalk_main</span><br>      <span class="hljs-attribute">max-height</span> <span class="hljs-number">460px</span><br>      <span class="hljs-attribute">overflow</span> scroll<br>      &amp;::-webkit-scrollbar<br>        <span class="hljs-attribute">display</span>: none<br>    <span class="hljs-selector-id">#operare_artitalk</span><br>      <span class="hljs-selector-class">.c2</span><br>        <span class="hljs-attribute">z-index</span> <span class="hljs-number">1000</span><br><span class="hljs-comment">// 针对标签卡片做样式兼容适配</span><br><span class="hljs-selector-class">.card-tags</span><br>  &amp;<span class="hljs-selector-class">.fixed-card-widget</span><br>    <span class="hljs-selector-class">.card-tag-cloud</span><br>      <span class="hljs-attribute">max-height</span> <span class="hljs-number">460px</span><br>      <span class="hljs-attribute">overflow</span> scroll<br>      &amp;::-webkit-scrollbar<br>        <span class="hljs-attribute">display</span>: none<br><span class="hljs-comment">// 控制手机端可见</span><br><span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">max-width</span>: <span class="hljs-number">768px</span>)<br>  div#fixedcard-dashboard<br>    display flex!important<br>// 侧栏悬浮按钮样式<br>div#fixedcard-dashboard<br>  position fixed<br>  top <span class="hljs-number">150px</span><br>  <span class="hljs-attribute">width</span> fit-content<br>  <span class="hljs-attribute">height</span> <span class="hljs-number">40px</span><br>  opacity <span class="hljs-number">0.3</span><br>  transition all <span class="hljs-number">0.5s</span><br>  display none<br>  background rgba(<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">0.9</span>)<br>  padding <span class="hljs-number">5px</span> <span class="hljs-number">10px</span><br>  border-top-right-radius <span class="hljs-number">20px</span><br>  border-bottom-right-radius <span class="hljs-number">20px</span><br>  z-index <span class="hljs-number">1000</span><br>  &amp;:<span class="hljs-attribute">hover</span><br>    opacity <span class="hljs-number">1</span><br>    button<br>      &amp;.fixedcard-activebtn<br>        <span class="hljs-attribute">width</span> <span class="hljs-number">30px</span><br>        opacity <span class="hljs-number">1</span><br>        pointer-events all<br>// 按钮样式<br>button<br>  &amp;.fixedcard-activebtn<br>    <span class="hljs-attribute">width</span> <span class="hljs-number">0px</span><br>    <span class="hljs-attribute">height</span> <span class="hljs-number">30px</span><br>    transition all .<span class="hljs-number">5s</span><br>    display flex<br>    opacity <span class="hljs-number">0</span><br>    align-items center<br>    justify-content space-around<br>    pointer-events none<br>    <span class="hljs-attribute">color</span> #<span class="hljs-number">757273</span><br>// 悬浮按钮头像<br>.fixedcard-user-avatar<br>  display inline-block<br>  img<br>    &amp;.fixedcard-user-avatar-img<br>      <span class="hljs-attribute">width</span> <span class="hljs-number">30px</span><br>      <span class="hljs-attribute">height</span> <span class="hljs-number">30px</span><br>      border-radius <span class="hljs-number">50%</span><br>// 悬浮按钮夜间模式适配<br>[data-theme=&quot;dark&quot;]<br>  div#fixedcard-dashboard<br>    background rgba(<span class="hljs-number">55</span>,<span class="hljs-number">55</span>,<span class="hljs-number">55</span>,<span class="hljs-number">0.9</span>)<br>  button<br>    &amp;.fixedcard-activebtn<br>      <span class="hljs-attribute">color</span> #bcbdbd<br><br>// 卡片开启动画效果<br>@keyframes rotateX<br>  from<br>    transform rotateX(<span class="hljs-number">90deg</span>)<br>  to<br>    transform rotateX(<span class="hljs-number">0deg</span>)<br>// 退出蒙版效果<br>div#quit-box<br>  position fixed<br>  display block<br>  left <span class="hljs-number">0</span><br>  top <span class="hljs-number">0</span><br>  <span class="hljs-attribute">width</span> <span class="hljs-number">100vh</span><br>  <span class="hljs-attribute">height</span> <span class="hljs-number">100vh</span><br>  z-index <span class="hljs-number">99</span><br>  background rgba(<span class="hljs-number">25</span>,<span class="hljs-number">25</span>,<span class="hljs-number">25</span>,<span class="hljs-number">0.3</span>)<br><br><br>[data-theme=&quot;dark&quot;]<br>  div#quit-box<br>    background rgba(<span class="hljs-number">147</span>, <span class="hljs-number">146</span>, <span class="hljs-number">128</span>, <span class="hljs-number">0.3</span>)<br><br></code></pre></td></tr></table></figure>
<p>新建<code>[Blogroot]\themes\butterfly\layout\includes\custom\fixed_card_widget.pug</code>,以后的源码魔改教程都会尽量将改动文件归纳到带custom字样的文件夹里，便于管理魔改文件。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs pug">#fixedcard-dashboard<br>  if is_post()<br>    each poitem in theme.fixed_card_widget.post<br>      button.fixedcard-activebtn(type=&quot;button&quot; title=poitem.title onclick=`FixedCardWidget(&quot;` + poitem.type + `&quot;,&quot;` + poitem.name + `&quot;,&quot;` + poitem.index + `&quot;)`)<br>        i(class=poitem.icon)<br>  else<br>    each paitem in theme.fixed_card_widget.page<br>      button.fixedcard-activebtn(type=&quot;button&quot; title=paitem.title onclick=`FixedCardWidget(&quot;` + paitem.type + `&quot;,&quot;` + paitem.name + `&quot;,&quot;` + paitem.index + `&quot;)`)<br>        i(class=paitem.icon)<br>  .fixedcard-user-avatar.fixedcard-activebtn(onclick=&quot;RemoveFixedCardWidget()&quot;)<br>    img.fixedcard-user-avatar-img(src=url_for(theme.avatar.img) title=config.author)<br><br></code></pre></td></tr></table></figure>
<p>修改<code>[Blogroot]\themes\butterfly\layout\includes\additional-js.pug</code>,直接加在文件末尾即可，但是注意缩进！</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs pug">  if theme.busuanzi.site_uv || theme.busuanzi.site_pv || theme.busuanzi.page_pv<br>    script(async data-pjax src=url_for(theme.CDN.busuanzi))<br>+ if !theme.aside.mobile &amp;&amp; theme.fixed_card_widget.enable<br>+   include ./custom/fixed_card_widget.pug<br></code></pre></td></tr></table></figure>
<p>因为还做了page和post页面不同悬浮按钮的配置，为了让它能够自动切换而不是惰性加载，需要修改<code>[Blogroot]\themes\butterfly\layout\includes\third-party\pjax.pug</code>大约第十四行的位置，在pjax选择器中加入悬浮按钮的id。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs pug">  script.<br>    let pjaxSelectors = [<br>      &#x27;title&#x27;,<br>      &#x27;#config-diff&#x27;,<br>      &#x27;#body-wrap&#x27;,<br>      &#x27;#rightside-config-hide&#x27;,<br>      &#x27;#rightside-config-show&#x27;,<br>+     &quot;#fixedcard-dashboard&quot;,<br>      &#x27;.js-pjax&#x27;<br>    ]<br></code></pre></td></tr></table></figure>
<p>修改<code>[Blogroot]\_config.butterfly.yml</code>，新增配置项，此处的选择器其实就是提取了<code>document.getElementsByClassName(&quot;name&quot;)[index]</code>和<code>document.getElementById(&quot;name&quot;)</code>这两个方法中的参数来确保能够找到侧栏卡片。原本其实是可以做成自动根据侧栏生成的，但是考虑到还有插件挂载和自定义卡片，以及还有部分用户会刻意隐藏一些侧栏卡片，所以干脆还是让用户自己去配置想要加到菜单的卡片好了。<br>找id或者class的办法很简单，用F12开启控制台，用左上角的元素选择器点选想要的侧栏卡片，在源码栏找到对应的class或者id。因为class是可以重名的，所以还存在一个序列问题，从0开始计数。此处为了避免语意混乱，建议还是用特征明显的class或者id来选择对应卡片。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">#侧栏悬浮卡片控制按钮<br>#https://akilar.top/posts/451ac5f8/<br>fixed_card_widget:<br>  enable: true<br>  page:  #页面显示按钮<br>    - type: class #侧栏卡片选择器类型<br>      name: card-info #侧栏卡片选择器名称<br>      index: 0 #侧栏卡片选择器序列<br>      icon: fas fa-address-book #图标<br>      title: 用户信息 #悬停显示提示<br>    - type: class<br>      name: card-clock<br>      index: 0<br>      icon: fas fa-cloud-sun<br>      title: 电子钟<br>    - type: class<br>      name: card-shuo<br>      index: 0<br>      icon: fas fa-comments<br>      title: 碎碎念<br>    - type: class<br>      name: card-recent-post<br>      index: 0<br>      icon: fas fa-history<br>      title: 最新文章<br>    - type: id<br>      name: card-newest-comments<br>      index: 0<br>      icon: fas fa-comment-dots<br>      title: 最新评论<br>    - type: class<br>      name: card-tags<br>      index: 0<br>      icon: fas fa-tags<br>      title: 标签<br>    - type: class<br>      name: card-webinfo<br>      index: 0<br>      icon: fas fa-chart-line<br>      title: 网站咨询<br>  post: #文章页显示按钮<br>    - type: class<br>      name: card-info<br>      index: 0<br>      icon: fas fa-address-book<br>      title: 用户信息<br>    - type: class<br>      name: card-clock<br>      index: 0<br>      icon: fas fa-cloud-sun<br>      title: 电子钟<br>    - type: class<br>      name: card-recent-post<br>      index: 0<br>      icon: fas fa-history<br>      title: 最新文章<br></code></pre></td></tr></table></figure>
<p>修改<code>[Blogroot]_config.butterfly.yml</code>的inject配置项</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><code class="hljs yml"> <span class="hljs-attr">inject:</span><br>    <span class="hljs-attr">head:</span><br><br>    <span class="hljs-attr">bottom:</span><br><span class="hljs-string">+</span>     <span class="hljs-bullet">-</span> <span class="hljs-string">&lt;script</span> <span class="hljs-string">data-pjax</span> <span class="hljs-string">defer</span> <span class="hljs-string">src=&quot;/js/custom/fixed_card_widget.js&quot;&gt;&lt;/script&gt;</span><br></code></pre></td></tr></table></figure>
<p>注意要关闭手机端显示侧栏卡片才能启用fixed卡片样式。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">  aside:<br>    enable: true<br>    hide: false<br>    button: true<br>-   mobile: true # display on mobile<br>+   mobile: false # display on mobile<br>    position: right # left or right<br></code></pre></td></tr></table></figure>
<h1 id="设置弹窗"><a href="#设置弹窗" class="headerlink" title="设置弹窗"></a>设置弹窗</h1><blockquote>
<p>这个功能使用的注：这个魔改使用了<a href="https://yisous.xyz/posts/670e47f/">Ariasakaの小窝</a>和 <a href="https://blog.leonus.cn/2022/bg2.html">Leonus</a>的教程</p>
</blockquote>
<p>新建<code>setting.pug</code>文件</p>
<p><code>[blogRoot]/themes\acryple\layout\includes\setting.pug</code>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs pug">html<br>body<br>    #settingWindow.js-pjax<br>        span.setting-title <br>            span#stt 控制面板<br>            a(id=&quot;close-console&quot; onclick=&quot;toggleWinbox();&quot;) ×<br>        button#backer(onclick=&#x27;$(\&#x27;.asetting\&#x27;).hide();$(\&#x27;.settingx\&#x27;).show();$(\&#x27;#backer\&#x27;).hide()&#x27;)<br>            i.fa.fa-chevron-left<br>            span 返回<br>        .settings<br>            #setting-buttons<br>                button.settingx(onclick=&#x27;$(\&#x27;#theme-settings\&#x27;).show();$(\&#x27;.settingx\&#x27;).hide();$(\&#x27;#backer\&#x27;).show();&#x27;)<br>                    i.fas.fa-layer-group<br>                    span 外观<br>                button.settingx(onclick=&#x27;$(\&#x27;#font-settings\&#x27;).show();$(\&#x27;.settingx\&#x27;).hide();$(\&#x27;#backer\&#x27;).show();&#x27;)<br>                    i.fa.fa-font<br>                    span 字体<br>                button.settingx(onclick=&#x27;$(\&#x27;#background-settings\&#x27;).show();$(\&#x27;.settingx\&#x27;).hide();$(\&#x27;#backer\&#x27;).show();&#x27;)<br>                    i.far.fa-image<br>                    span 背景<br>                button.settingx(onclick=&#x27;$(\&#x27;#con-echarts\&#x27;).show();$(\&#x27;.settingx\&#x27;).hide();$(\&#x27;#backer\&#x27;).show();var evt = document.createEvent(&quot;HTMLEvents&quot;);evt.initEvent(&quot;resize&quot;, false, false);window.dispatchEvent(evt);&#x27;)<br>                    i.fas.fa-chart-pie<br>                    span 统计<br>                button.settingx(onclick=&#x27;$(\&#x27;#con-abouts\&#x27;).show();$(\&#x27;.settingx\&#x27;).hide();$(\&#x27;#backer\&#x27;).show();&#x27;)<br>                    i.fa.fa-cloud-download<br>                    span 关于<br>            #setting-hides<br>                #theme-settings.asetting<br>                    h2.content-head 性能设置<br>                    p<br>                        .content(style=&#x27;display:flex&#x27;)<br>                            input#blur(type=&#x27;checkbox&#x27;, onclick=&#x27;setBlur()&#x27;)<br>                            .content-text 禁用模糊效果<br>                        //- .content(style=&#x27;display:flex&#x27;)<br>                        //-     input#yjjs(type=&#x27;checkbox&#x27;, onclick=&#x27;yjjs1()&#x27;)<br>                        //-     .content-text 硬件加速<br>                        .content(style=&#x27;display:flex&#x27;)<br>                            input#fpson(type=&#x27;checkbox&#x27;, onclick=&#x27;fpssw()&#x27; style=&quot;flex-shrink: 0&quot;)<br>                            .content-text<br>                                span 开启帧率检测（<br>                                a(href=&#x27;javascript:window.location.reload()&#x27;) 刷新<br>                                span 后生效）<br>                    p<br>                        h2.content-head 主题设置<br>                        //- .content(style=&#x27;display:flex&#x27;)<br>                        //-     input#hideAside(type=&#x27;checkbox&#x27;, onclick=&#x27;toggleRightside()&#x27;)<br>                        //-     .content-text 隐藏侧边栏<br>                        .content(style=&#x27;display:flex&#x27;)<br>                            input#hideAplayer(type=&#x27;checkbox&#x27;, onclick=&#x27;toggleAplayer()&#x27;)<br>                            .content-text 显示aplayer<br>                        .content(style=&#x27;display:flex&#x27;)<br>                            input#hideSakura(type=&#x27;checkbox&#x27;, onclick=&#x27;toggleSakuras()&#x27;)<br>                            .content-text 落樱特效<br>                        .content(style=&#x27;display:flex&#x27;)<br>                            input#autoTheme(type=&#x27;checkbox&#x27;, onclick=&#x27;toggleAutoTheme()&#x27;)<br>                            .content-text 明暗模式自动切换<br>                        .content(style=&#x27;display:flex&#x27;)<br>                            input#autoColor(type=&#x27;checkbox&#x27;, onclick=&#x27;autoColor()&#x27;)<br>                            .content-text 自动主题色（跟随文章封面）<br>                        | 未完工<br>                        .content(style=&#x27;display:flex&#x27;)<br>                            input#hideAplayer(type=&#x27;checkbox&#x27;, onclick=&#x27;toggleNav()&#x27;)<br>                            .content-text 固定导航栏<br>                        | ###<br>                        .content(style=&#x27;display:flex&#x27;)<br>                            button.content-button(onclick=&#x27;switchTheme()&#x27;) 切换主题<br>                          <br>                    p<br>                        h3.content-head 主题色<br>                        #themeColorSettings.content(style=&#x27;display:flex&#x27;)<br>                            input#red(type=&#x27;radio&#x27;, name=&#x27;colors&#x27;, onclick=&#x27;setColor(\&#x27;red\&#x27;)&#x27;)<br>                            input#orange(type=&#x27;radio&#x27;, name=&#x27;colors&#x27;, onclick=&#x27;setColor(\&#x27;orange\&#x27;)&#x27;)<br>                            input#yellow(type=&#x27;radio&#x27;, name=&#x27;colors&#x27;, onclick=&#x27;setColor(\&#x27;yellow\&#x27;)&#x27;)<br>                            input#green(type=&#x27;radio&#x27;, name=&#x27;colors&#x27;, onclick=&#x27;setColor(\&#x27;green\&#x27;)&#x27;)<br>                            input#blue(type=&#x27;radio&#x27;, name=&#x27;colors&#x27;, onclick=&#x27;setColor(\&#x27;blue\&#x27;)&#x27;)<br>                            input#heoblue(type=&#x27;radio&#x27;, name=&#x27;colors&#x27;, onclick=&#x27;setColor(\&#x27;heoblue\&#x27;)&#x27;)<br>                            input#darkblue(type=&#x27;radio&#x27;, name=&#x27;colors&#x27;, onclick=&#x27;setColor(\&#x27;darkblue\&#x27;)&#x27;)<br>                            input#purple(type=&#x27;radio&#x27;, name=&#x27;colors&#x27;, onclick=&#x27;setColor(\&#x27;purple\&#x27;)&#x27;)<br>                            input#pink(type=&#x27;radio&#x27;, name=&#x27;colors&#x27;, onclick=&#x27;setColor(\&#x27;pink\&#x27;)&#x27;, checked)<br>                            input#black(type=&#x27;radio&#x27;, name=&#x27;colors&#x27;, onclick=&#x27;setColor(\&#x27;black\&#x27;)&#x27;)<br>                            input#blackgray(type=&#x27;radio&#x27;, name=&#x27;colors&#x27;, onclick=&#x27;setColor(\&#x27;blackgray\&#x27;)&#x27;)<br>                #font-settings.asetting<br>                    h2.content-head 字体设置<br>                    p#swfs<br>                        a.swf(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;font-family:\&#x27;HYTMR\&#x27;!important;color:black&#x27;, onclick=&#x27;setFont(\&#x27;HYTMR\&#x27;)&#x27;) 汉仪唐美人<br>                        br<br>                        a.swf(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;font-family:\&#x27;HYPailou\&#x27;!important;color:black&#x27;, onclick=&#x27;setFont(\&#x27;HYPailou\&#x27;)&#x27;) 汉仪新蒂牌楼<br>                        br<br>                        a.swf(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;font-family:\&#x27;FZXJLJ\&#x27;!important;color:black&#x27;, onclick=&#x27;setFont(\&#x27;FZXJLJ\&#x27;)&#x27;) 方正金陵体<br>                        br<br>                        a.swf(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;font-family:\&#x27;FZXS\&#x27;!important;color:black&#x27;, onclick=&#x27;setFont(\&#x27;FZXS\&#x27;)&#x27;) 方正像素体<br>                        br<br>                        a.swf(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;font-family:\&#x27;ZhuZiAWan\&#x27;!important;color:black&#x27;, onclick=&#x27;setFont(\&#x27;ZhuZiAWan\&#x27;)&#x27;) 筑紫A丸ゴシック<br>                        br<br>                        a.swf(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;font-family:\&#x27;FZODZK\&#x27;!important;color:black&#x27;, onclick=&#x27;setFont(\&#x27;FZODZK\&#x27;)&#x27;) 方正欧蝶正楷<br>                        br<br>                        a.swf(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;font-family:\&#x27;Source Serif\&#x27;!important;color:black&#x27;, onclick=&#x27;setFont(\&#x27;Source Serif\&#x27;)&#x27;) 思源宋体<br>                        br<br>                        a.swf(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;font-family:\&#x27;Source Sans\&#x27;!important;color:black&#x27;, onclick=&#x27;setFont(\&#x27;Source Sans\&#x27;)&#x27;) 思源黑体<br>                        br<br>                        a.swf(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;font-family:-apple-system, IBM Plex Mono ,monosapce,\&#x27;微软雅黑\&#x27;, sans-serif;&#x27;, onclick=&#x27;setFont(\&#x27;main\&#x27;)&#x27;) 系统默认<br>                        br<br>                #background-settings.asetting<br>                    h2(style=&#x27;margin-left:10px&#x27;) 背景设置<br>                    div<br>                    span 注意:切换背景功能仅在Acrylic主题中生效，在Simple主题中无效<br>                    button.content-button(onclick=&#x27;localStorage.removeItem(\&#x27;blogbg\&#x27;);location.reload();&#x27;)<br>                        i.fa-solid.fa-arrows-rotate<br>                        span  点我恢复默认背景<br>                    button.content-button(onclick=&#x27;switchTheme()&#x27;) 切换主题<br>                    h3 图片（手机）<br>                    .bgbox<br>                        a.pimgbox(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background-image:url(https://bu.dusays.com/2022/08/30/630d6d4d539a5.webp)&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://bu.dusays.com/2022/08/30/630d6d4d539a5.webp)\&#x27;)&#x27;)<br>                        a.pimgbox(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background-image:url(https://bu.dusays.com/2022/08/30/630d6d4e15c9d.webp)&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://bu.dusays.com/2022/08/30/630d6d4e15c9d.webp)\&#x27;)&#x27;)<br>                        a.pimgbox(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background-image:url(https://bu.dusays.com/2022/08/30/630d6f22c03c6.webp)&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://bu.dusays.com/2022/08/30/630d6f22c03c6.webp)\&#x27;)&#x27;)<br>                        a.pimgbox(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background-image:url(https://bu.dusays.com/2022/08/30/630d6d56c83eb.webp)&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://bu.dusays.com/2022/08/30/630d6d56c83eb.webp)\&#x27;)&#x27;)<br>                        a.pimgbox(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background-image:url(https://bu.dusays.com/2022/08/30/630d6d50b439b.webp)&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://bu.dusays.com/2022/08/30/630d6d50b439b.webp)\&#x27;)&#x27;)<br>                    h3 图片（电脑）<br>                    .bgbox<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background-image:url(https://bu.dusays.com/2022/08/30/630d6d5574d0e.webp)&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://bu.dusays.com/2022/08/30/630d6d5574d0e.webp)\&#x27;)&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background-image:url(https://bu.dusays.com/2022/08/30/630d6d529adf9.webp)&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://bu.dusays.com/2022/08/30/630d6d529adf9.webp)\&#x27;)&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background-image:url(https://bu.dusays.com/2022/08/30/630d6d5159b31.webp)&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://bu.dusays.com/2022/08/30/630d6d5159b31.webp)\&#x27;)&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background-image:url(https://bu.dusays.com/2022/08/30/630d718bbeef6.webp)&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://bu.dusays.com/2022/08/30/630d718bbeef6.webp)\&#x27;)&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background-image:url(https://bu.dusays.com/2022/08/30/630d72f237d19.jpg)&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://bu.dusays.com/2022/08/30/630d72f237d19.jpg)\&#x27;)&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background-image:url(https://bu.dusays.com/2022/08/30/630d72f2032c8.jpg)&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://bu.dusays.com/2022/08/30/630d72f2032c8.jpg)\&#x27;)&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background-image:url(https://bu.dusays.com/2021/12/01/7792ff0082ec4.jpg)&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://bu.dusays.com/2021/12/01/7792ff0082ec4.jpg)\&#x27;)&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background-image:url(https://bu.dusays.com/2022/08/30/630d72ee6d4f3.png)&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://bu.dusays.com/2022/08/30/630d72ee6d4f3.png)\&#x27;)&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background-image:url(https://bu.dusays.com/2022/08/30/630d72ed76532.jpg)&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://bu.dusays.com/2022/08/30/630d72ed76532.jpg)\&#x27;)&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://bu.dusays.com/2022/09/17/6324aea549be6.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://bu.dusays.com/2022/09/17/6324aea549be6.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://bu.dusays.com/2022/09/17/6324aec701a68.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://bu.dusays.com/2022/09/17/6324aec701a68.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://bu.dusays.com/2022/09/17/6324aef4a5543.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://bu.dusays.com/2022/09/17/6324aef4a5543.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://bu.dusays.com/2022/09/17/6324af3622884.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://bu.dusays.com/2022/09/17/6324af3622884.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/5.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/5.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/6.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/6.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/7.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/7.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://bu.dusays.com/2022/12/08/6391b77ed767c.png)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://bu.dusays.com/2022/12/08/6391b77ed767c.png&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/9.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/9.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/10.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/10.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/11.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/11.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/12.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/12.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/13.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/13.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/14.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/14.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/15.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/15.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/16.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/16.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/17.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/17.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/18.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/18.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/19.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/19.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/20.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/20.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/21.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/21.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/22.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/22.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/23.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/23.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/24.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/24.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/25.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/25.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/26.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/26.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/27.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/27.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/28.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/28.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/29.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/29.webp&#x27;)<br>                        a.imgbox(href=&#x27;javascript:;&#x27;, onclick=&#x27;changeBg(\&#x27;url(https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/30.webp)\&#x27;)&#x27;)<br>                            img(src=&#x27;https://cdn.afdelivr.top/npm/saiodgm-api@1.0.1/randomimg-my/30.webp&#x27;)<br>                    h3 渐变色<br>                    .bgbox<br>                        a.box(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background: linear-gradient(to right, #eecda3, #ef629f)&#x27;, onclick=&#x27;changeBg(\&#x27;linear-gradient(to right, #eecda3, #ef629f)\&#x27;)&#x27;)<br>                        a.box(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background: linear-gradient(to right, #B7D31E, #42CE1E)&#x27;, onclick=&#x27;changeBg(\&#x27;linear-gradient(to right, #B7D31E, #42CE1E)\&#x27;)&#x27;)<br>                        a.box(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background: linear-gradient(to right, #06DE86, #06A5DE)&#x27;, onclick=&#x27;changeBg(\&#x27;linear-gradient(to right, #06DE86, #06A5DE)\&#x27;)&#x27;)<br>                        a.box(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background: linear-gradient(to right, #189BC4, #183DC4)&#x27;, onclick=&#x27;changeBg(\&#x27;linear-gradient(to right, #189BC4, #183DC4)\&#x27;)&#x27;)<br>                        a.box(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background: linear-gradient(to right, #C018C4, #C41818)&#x27;, onclick=&#x27;changeBg(\&#x27;linear-gradient(to right, #C018C4, #C41818)\&#x27;)&#x27;)<br>                        a.box(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background: linear-gradient(to right, #8B00BB, #030094)&#x27;, onclick=&#x27;changeBg(\&#x27;linear-gradient(to right, #8B00BB, #030094)\&#x27;)&#x27;)<br>                        a.box(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background: linear-gradient(to right, #eecda3, #ef629f)&#x27;, onclick=&#x27;changeBg(\&#x27;linear-gradient(to right, #eecda3, #ef629f)\&#x27;)&#x27;)<br>                        a.box(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background: linear-gradient(90deg, #ffd7e4 0%, #c8f1ff 100%)&#x27;, onclick=&#x27;changeBg(\&#x27;linear-gradient(90deg, #ffd7e4 0%, #c8f1ff 100%)\&#x27;)&#x27;)<br>                        a.box(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background: linear-gradient(45deg, #e5737b, #c6999e, #96b9c2, #00d6e8)&#x27;, onclick=&#x27;changeBg(\&#x27;linear-gradient(45deg, #e5737b, #c6999e, #96b9c2, #00d6e8)\&#x27;)&#x27;)<br>                    h3 纯色<br>                    .bgbox<br>                        a.box(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background: #7D9D9C&#x27;, onclick=&#x27;changeBg(\&#x27;#7D9D9C\&#x27;)&#x27;)<br>                        a.box(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background: #fff&#x27;, onclick=&#x27;changeBg(\&#x27;#fff\&#x27;)&#x27;)<br>                        a.box(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background: #49A6E9&#x27;, onclick=&#x27;changeBg(\&#x27;#49A6E9\&#x27;)&#x27;)<br>                        a.box(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background: #F7CEFF&#x27;, onclick=&#x27;changeBg(\&#x27;#F7CEFF\&#x27;)&#x27;)<br>                        a.box(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background: #FFFFCE&#x27;, onclick=&#x27;changeBg(\&#x27;#FFFFCE\&#x27;)&#x27;)<br>                        a.box(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background: #CFFFCE&#x27;, onclick=&#x27;changeBg(\&#x27;#CFFFCE\&#x27;)&#x27;)<br>                        a.box(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background: #17EFE9&#x27;, onclick=&#x27;changeBg(\&#x27;#17EFE9\&#x27;)&#x27;)<br>                        a.box(href=&#x27;javascript:;&#x27;, rel=&#x27;noopener external nofollow&#x27;, style=&#x27;background: #9F17EF&#x27;, onclick=&#x27;changeBg(\&#x27;#9F17EF\&#x27;)&#x27;)<br>                #con-echarts.asetting<br>                    h1 文章统计<br>                    h2 监控<br>                    iframe(src=&quot;https://status.yisous.xyz&quot; width=&quot;100%&quot; height=&quot;500px&quot; frameborder=&quot;no&quot;)<br>                    if !is_page()<br>                        h2 文章统计<br>                        script(src=&quot;https://npm.elemecdn.com/echarts@4.9.0/dist/echarts.min.js&quot;)<br>                        div(id=&quot;posts-chart&quot; data-start=&quot;2021-01&quot; style=&quot;border-radius: 8px; height: 300px; padding: 10px;&quot;)<br>                        div(id=&quot;tags-chart&quot; data-length=&quot;10&quot; style=&quot;border-radius: 8px; height: 300px; padding: 10px;&quot;)<br>                        div(id=&quot;categories-chart&quot; data-parent=&quot;true&quot; style=&quot;border-radius: 8px; height: 300px; padding: 10px;&quot;)<br>                    h2 访问统计<br>                        | 显示不出来请刷新页面<br>                        //-下面换成自己的51la统计<br>                <br>                #con-abouts.asetting<br>                    h1 关于<br>                    | Hexo-theme-Acryple v1.0.100<br>                    br<br>                    | Ariasaka Console v0.01<br>                    br<br>                    | 欢迎<br>                    a(href=&quot;/messageboard&quot;)<br>                        | 反馈！<br>        #setting-sidesl<br>            button(title=&quot;恢复默认设置&quot; class=&quot;reSettings con-rightside&quot;)<br>                i.fa.fa-repeat<br>            #setting-sides<br>                button(title=&quot;繁简转换&quot; class=&quot;con-rightside&quot; id=&quot;con-translate&quot;  onclick=&quot;javascript:rmf.translate();&quot;)<br>                    i.iconfont.icon-fanti<br>                button(title=&quot;昼夜切换&quot; class=&quot;con-rightside&quot; id=&quot;con-mode&quot; onclick=&quot;switchDarkMode();&quot;)<br>                    i.fa.fa-adjust<br>                if is_post()||is_page()<br>                    button(title=&quot;阅读模式&quot; class=&quot;con-rightside&quot; id=&quot;con-reading&quot; onclick=&quot;rmf.switchReadMode();&quot;)<br>                        i.fa.fa-book-open<br>                if !is_page()<br>                    button(title=&quot;单双栏切换&quot; class=&quot;con-rightside&quot; id=&quot;con-toggleaside&quot; onclick=&quot;toggleAside();&quot;)<br>                        i.fas.fa-arrows-alt-h<br>                if !is_page()<br>                    button(title=&quot;左右栏切换&quot; class=&quot;con-rightside&quot; id=&quot;con-toggleleftaside&quot; onclick=&quot;switchAside();&quot;)<br>                        i.fas.fa-binoculars<br>                if is_post()||is_page()<br>                    button(title=&quot;开关弹幕&quot; class=&quot;con-rightside&quot; id=&quot;con-barrage&quot; onclick=&quot;switchCommentBarrage();&quot;)<br>                        i.iconfont.icon-danmu<br>                button(title=&quot;全屏&quot; class=&quot;con-rightside&quot; id=&quot;con-fullscreen&quot; onclick=&quot;fullScreen();&quot;)<br>                    i.fas.fa-expand<br>            <br></code></pre></td></tr></table></figure>
<p>js部分</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;pjax:complete&#x27;</span>, tosetting);<br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;DOMContentLoaded&#x27;</span>, tosetting);<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">tosetting</span>(<span class="hljs-params"></span>)&#123;<br>$(<span class="hljs-string">&quot;#settingWindow&quot;</span>).<span class="hljs-title function_">hide</span>();<br><span class="hljs-keyword">if</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;blur&quot;</span>)==<span class="hljs-string">&quot;false&quot;</span>)&#123;<br>    blur=<span class="hljs-number">0</span>;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        blur=<span class="hljs-number">1</span>;<br>    <br>    &#125;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;yjjs&quot;</span>)==<span class="hljs-string">&quot;true&quot;</span>)&#123;<br>        yjjs=<span class="hljs-number">1</span>;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        yjjs=<span class="hljs-number">0</span>;<br>        <br>    &#125;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;fpson&quot;</span>)==<span class="hljs-literal">undefined</span>)&#123;<br>        <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;fpson&quot;</span>,<span class="hljs-string">&quot;1&quot;</span>);<br>    &#125;<br><span class="hljs-keyword">if</span>(!blur)&#123;<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;settingStyle&quot;</span>).<span class="hljs-property">innerText</span>=<span class="hljs-string">`</span><br><span class="hljs-string">    *,*:not(.card-info)::before,*::after&#123;</span><br><span class="hljs-string">        -webkit-backdrop-filter: none!important;</span><br><span class="hljs-string">        backdrop-filter: none!important;</span><br><span class="hljs-string">        -webkit-filter: none!important;</span><br><span class="hljs-string">        filter: none!important;</span><br><span class="hljs-string">    &#125;`</span>&#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;settingStyle&quot;</span>).<span class="hljs-property">innerText</span>=<span class="hljs-string">&#x27;&#x27;</span><br>    &#125;<br>setBlur=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>    blur=!blur;<br>    <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;blur&quot;</span>,blur);<br>    <span class="hljs-keyword">if</span>(!blur)&#123;<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;settingStyle&quot;</span>).<span class="hljs-property">innerText</span>=<span class="hljs-string">`</span><br><span class="hljs-string">    *&#123;</span><br><span class="hljs-string">        -webkit-backdrop-filter: none!important;</span><br><span class="hljs-string">        backdrop-filter: none!important;</span><br><span class="hljs-string">        -webkit-filter: none!important;</span><br><span class="hljs-string">        filter: none!important;</span><br><span class="hljs-string">    &#125;`</span>&#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;settingStyle&quot;</span>).<span class="hljs-property">innerText</span>=<span class="hljs-string">&#x27;&#x27;</span><br>    &#125;<br>&#125;<br><span class="hljs-comment">// if(yjjs)&#123;</span><br><span class="hljs-comment">//     document.getElementById(&quot;yjjs&quot;).innerText=`</span><br><span class="hljs-comment">//     *:not(#web_bg)&#123;</span><br><span class="hljs-comment">//         transform:translateZ(0);</span><br><span class="hljs-comment">//         backface-visibility: hidden</span><br><span class="hljs-comment">//     &#125;`&#125;</span><br><span class="hljs-comment">//     else&#123;</span><br><span class="hljs-comment">//         document.getElementById(&quot;yjjs&quot;).innerText=``</span><br><span class="hljs-comment">//     &#125;</span><br>yjjs1=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>    yjjs=!yjjs;<br>    <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;yjjs&quot;</span>,yjjs)<br>    <span class="hljs-comment">// if(yjjs)&#123;</span><br>    <span class="hljs-comment">// document.getElementById(&quot;yjjs&quot;).innerText=`</span><br>    <span class="hljs-comment">// *:not(#web_bg)&#123;</span><br>    <span class="hljs-comment">//     transform:translateZ(0);</span><br>    <span class="hljs-comment">//     backface-visibility: hidden</span><br>    <span class="hljs-comment">// &#125;`&#125;</span><br>    <span class="hljs-comment">// else&#123;</span><br>    <span class="hljs-comment">//     document.getElementById(&quot;yjjs&quot;).innerText=``</span><br>    <span class="hljs-comment">// &#125;</span><br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;blogTheme&quot;</span>)==<span class="hljs-string">&quot;acrylic&quot;</span>)&#123;<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;css&quot;</span>).<span class="hljs-property">href</span>=<span class="hljs-string">&quot;&quot;</span>;<br>&#125;<br>switchTheme=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;css&quot;</span>).<span class="hljs-property">href</span>==<span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">protocol</span>+<span class="hljs-string">&quot;//&quot;</span>+<span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">host</span>+<span class="hljs-string">&quot;/css/stylessimple.css&quot;</span>)&#123;<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;css&quot;</span>).<span class="hljs-property">href</span>=<span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;blogTheme&quot;</span>,<span class="hljs-string">&quot;acrylic&quot;</span>);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;css&quot;</span>).<span class="hljs-property">href</span>=<span class="hljs-string">&quot;/css/stylessimple.css&quot;</span><br>        <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;blogTheme&quot;</span>,<span class="hljs-string">&quot;simple&quot;</span>);<br>    &#125;<br>&#125;<br>setColor=<span class="hljs-keyword">function</span>(<span class="hljs-params">c</span>)&#123;<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;themeColor&quot;</span>).<span class="hljs-property">innerText</span>=<span class="hljs-string">`:root&#123;--lyx-theme:var(--lyx-<span class="hljs-subst">$&#123;c&#125;</span>)!important&#125;`</span>;<br>    <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;themeColor&quot;</span>,c);<br><br>&#125;<br>setFont=<span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>)&#123;<br>    <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;font&quot;</span>,n);<br>    <span class="hljs-keyword">if</span>(n==<span class="hljs-string">&quot;main&quot;</span>)&#123;<br>        <span class="hljs-keyword">var</span> s=<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&quot;body,.aplayer&quot;</span>)<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt;s.<span class="hljs-property">length</span>; i++) &#123;<br>            s[i].<span class="hljs-property">style</span>.<span class="hljs-property">fontFamily</span>=<span class="hljs-string">&quot;-apple-system, IBM Plex Mono ,monospace,&#x27;微软雅黑&#x27;, sans-serif&quot;</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n==<span class="hljs-string">&quot;HYPailou&quot;</span>)&#123;<br>        <span class="hljs-keyword">var</span> s=<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&quot;body,.aplayer&quot;</span>)<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt;s.<span class="hljs-property">length</span>; i++) &#123;<br>            s[i].<span class="hljs-property">style</span>.<span class="hljs-property">fontFamily</span>=<span class="hljs-string">&quot;Fredoka,HYPailou,KyoukashoProL,-apple-system, IBM Plex Mono ,monospace,&#x27;微软雅黑&#x27;, sans-serif&quot;</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">var</span> s=<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&quot;body,.aplayer&quot;</span>)<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt;s.<span class="hljs-property">length</span>; i++) &#123;<br>            s[i].<span class="hljs-property">style</span>.<span class="hljs-property">fontFamily</span>=<span class="hljs-string">&quot;var(--global-font),KyoukashoProL,-apple-system, IBM Plex Mono ,monosapce,\&quot;微软雅黑\&quot;, sans-serif&quot;</span><br>        &#125;<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">style</span>.<span class="hljs-property">fontFamily</span>=<span class="hljs-string">&quot;var(--global-font),KyoukashoProL,-apple-system, IBM Plex Mono ,monosapce,&#x27;微软雅黑&#x27;, sans-serif&quot;</span><br>        <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">style</span>.<span class="hljs-title function_">setProperty</span>(<span class="hljs-string">&#x27;--global-font&#x27;</span>, n)<br>    &#125;<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;themeColor&quot;</span>)==<span class="hljs-literal">undefined</span>)&#123;<br>    <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;themeColor&quot;</span>,<span class="hljs-string">&quot;pink&quot;</span>);<br>&#125;<br><br><span class="hljs-title function_">setColor</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;themeColor&quot;</span>));<br><br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;hideRightside&quot;</span>)==<span class="hljs-literal">undefined</span>)&#123;<br>    <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;hideRightside&quot;</span>,<span class="hljs-string">&quot;0&quot;</span>);<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;hideRightside&quot;</span>)==<span class="hljs-string">&quot;1&quot;</span>)&#123;<br>    $(<span class="hljs-string">&quot;#rightside&quot;</span>).<span class="hljs-title function_">toggle</span>()<br>&#125;<br>toggleRightside=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>    $(<span class="hljs-string">&quot;#rightside&quot;</span>).<span class="hljs-title function_">toggle</span>();<br>    <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;hideRightside&quot;</span>,<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(<span class="hljs-title class_">Number</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;hideRightside&quot;</span>))-<span class="hljs-number">1</span>))<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;font&quot;</span>)==<span class="hljs-literal">undefined</span>)&#123;<br>    <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;font&quot;</span>,<span class="hljs-string">&quot;HYTMR&quot;</span>)<br>&#125;<br><span class="hljs-title function_">setFont</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;font&quot;</span>))<br><span class="hljs-comment">// 存数据</span><br><span class="hljs-comment">// name：命名 data：数据</span><br>saveData=<span class="hljs-keyword">function</span>(<span class="hljs-params">name, data</span>) &#123;<br>    <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(name, <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(&#123; <span class="hljs-string">&#x27;time&#x27;</span>: <span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>(), <span class="hljs-string">&#x27;data&#x27;</span>: data &#125;))<br>&#125;<br><br><span class="hljs-comment">// 取数据</span><br><span class="hljs-comment">// name：命名 time：过期时长,单位分钟,如传入30,即加载数据时如果超出30分钟返回0,否则返回数据</span><br>loadData=<span class="hljs-keyword">function</span>(<span class="hljs-params">name, time</span>) &#123;<br>    <span class="hljs-keyword">let</span> d = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(name));<br>    <span class="hljs-comment">// 过期或有错误返回 0 否则返回数据</span><br>    <span class="hljs-keyword">if</span> (d) &#123;<br>        <span class="hljs-keyword">let</span> t = <span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>() - d.<span class="hljs-property">time</span><br>        <span class="hljs-keyword">if</span> (t &lt; (time * <span class="hljs-number">60</span> * <span class="hljs-number">1000</span>) &amp;&amp; t &gt; -<span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> d.<span class="hljs-property">data</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-comment">// 切换背景函数</span><br><span class="hljs-comment">// 此处的flag是为了每次读取时都重新存储一次,导致过期时间不稳定</span><br><span class="hljs-comment">// 如果flag为0则存储,即设置背景. 为1则不存储,即每次加载自动读取背景.</span><br>changeBg=<span class="hljs-keyword">function</span>(<span class="hljs-params">s, flag</span>) &#123;<br>    <span class="hljs-keyword">let</span> bg = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;web_bg&#x27;</span>)<br>    <span class="hljs-keyword">if</span> (s.<span class="hljs-title function_">charAt</span>(<span class="hljs-number">0</span>) == <span class="hljs-string">&#x27;#&#x27;</span>) &#123;<br>        bg.<span class="hljs-property">style</span>.<span class="hljs-property">backgroundColor</span> = s<br>        bg.<span class="hljs-property">style</span>.<span class="hljs-property">backgroundImage</span> = <span class="hljs-string">&#x27;none&#x27;</span><br>    &#125; <span class="hljs-keyword">else</span> bg.<span class="hljs-property">style</span>.<span class="hljs-property">backgroundImage</span> = s<br>    <span class="hljs-keyword">if</span> (!flag) &#123; <span class="hljs-title function_">saveData</span>(<span class="hljs-string">&#x27;blogbg&#x27;</span>, s) &#125;<br>&#125;<br><span class="hljs-comment">// 上面两个函数如果你有其他需要存取数据的功能，也可以直接使用</span><br><br><span class="hljs-comment">// 读取背景</span><br><span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-keyword">let</span> data = <span class="hljs-title function_">loadData</span>(<span class="hljs-string">&#x27;blogbg&#x27;</span>, <span class="hljs-number">1440</span>)<br>    <span class="hljs-keyword">if</span> (data) <span class="hljs-title function_">changeBg</span>(data, <span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">else</span> <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">removeItem</span>(<span class="hljs-string">&#x27;blogbg&#x27;</span>);<br>&#125; <span class="hljs-keyword">catch</span> (error) &#123; <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">removeItem</span>(<span class="hljs-string">&#x27;blogbg&#x27;</span>); &#125;<br><br><br><br>fpssw=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;fpson&quot;</span>)==<span class="hljs-string">&quot;1&quot;</span>)&#123;<br>        <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;fpson&quot;</span>,<span class="hljs-string">&quot;0&quot;</span>);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;fpson&quot;</span>,<span class="hljs-string">&quot;1&quot;</span>);<br>    &#125;<br>&#125;<br>$(<span class="hljs-string">&quot;.asetting&quot;</span>).<span class="hljs-title function_">hide</span>();<br>$(<span class="hljs-string">&#x27;#backer&#x27;</span>).<span class="hljs-title function_">hide</span>();<br>$(<span class="hljs-string">&quot;#&quot;</span>+<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;themeColor&quot;</span>)).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&quot;checked&quot;</span>, <span class="hljs-literal">true</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;blur&quot;</span>)==<span class="hljs-string">&quot;false&quot;</span>)&#123;<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;blur&quot;</span>).<span class="hljs-property">checked</span>=<span class="hljs-literal">true</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;yjjs&quot;</span>)==<span class="hljs-string">&quot;true&quot;</span>)&#123;<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;yjjs&quot;</span>).<span class="hljs-property">checked</span>=<span class="hljs-literal">true</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;fpson&quot;</span>)==<span class="hljs-string">&quot;1&quot;</span>)&#123;<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;fpson&quot;</span>).<span class="hljs-property">checked</span>=<span class="hljs-literal">true</span>;<br>&#125;<br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;sakurahide&quot;</span>)==<span class="hljs-string">&quot;false&quot;</span>)&#123;<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;hideSakura&quot;</span>).<span class="hljs-property">checked</span>=<span class="hljs-literal">true</span>;<br>    isSakura=<span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;sakurahide&quot;</span>)==<span class="hljs-literal">null</span>)&#123;<br>    <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;sakurahide&quot;</span>,<span class="hljs-string">&quot;false&quot;</span>);<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;hideSakura&quot;</span>).<span class="hljs-property">checked</span>=<span class="hljs-literal">true</span>;<br>    isSakura=<span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-built_in">setTimeout</span>(<br>    stopp,<span class="hljs-number">1000</span>);<br>    isSakura=<span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;aplayerhide&quot;</span>)==<span class="hljs-string">&quot;false&quot;</span>)&#123;<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;hideAplayer&quot;</span>).<span class="hljs-property">checked</span>=<span class="hljs-literal">true</span>;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;aplayerhide&quot;</span>)==<span class="hljs-literal">null</span>)&#123;<br>    <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;aplayerhide&quot;</span>,<span class="hljs-string">&quot;false&quot;</span>);<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;hideAplayer&quot;</span>).<span class="hljs-property">checked</span>=<span class="hljs-literal">true</span>;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    doStuff=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        flag=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">try</span>&#123;<br>            ap=aplayers[<span class="hljs-number">0</span>];<br>            ap.<span class="hljs-property">list</span>;<br>            flag=<span class="hljs-number">1</span>;<br>        &#125;<span class="hljs-keyword">catch</span>&#123;<br>            <span class="hljs-built_in">setTimeout</span>(doStuff, <span class="hljs-number">50</span>);<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(flag)&#123;<br>            $(<span class="hljs-string">&quot;.aplayer-fixed&quot;</span>).<span class="hljs-title function_">hide</span>()<br>        &#125;<br>    &#125;<br>    <span class="hljs-title function_">doStuff</span>();<br>    <br>&#125;<br><br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByClassName</span>(<span class="hljs-string">&quot;reSettings&quot;</span>)[<span class="hljs-number">0</span>].<span class="hljs-property">onclick</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">clear</span>()<br>    <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-title function_">reload</span>()<br>&#125;<br><br>toggleWinbox=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>    $(<span class="hljs-string">&quot;#settingWindow&quot;</span>).<span class="hljs-title function_">fadeToggle</span>();<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;settingWindow&quot;</span>).<span class="hljs-property">style</span>.<span class="hljs-property">display</span>!=<span class="hljs-string">&quot;none&quot;</span>)&#123;<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;settingWindow&quot;</span>).<span class="hljs-property">style</span>.<span class="hljs-property">display</span>=<span class="hljs-string">&quot;flex&quot;</span>;<br>    &#125;<br>&#125;<br>fullScreen=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">document</span>.<span class="hljs-property">fullscreenElement</span>) <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">exitFullscreen</span>()<br>    <span class="hljs-keyword">else</span> <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-title function_">requestFullscreen</span>();<br>&#125;<br>toggleAside=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">const</span> $htmlDom = <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">classList</span><br>      $htmlDom.<span class="hljs-title function_">contains</span>(<span class="hljs-string">&#x27;hide-aside&#x27;</span>)<br>        ? saveToLocal.<span class="hljs-title function_">set</span>(<span class="hljs-string">&#x27;aside-status&#x27;</span>, <span class="hljs-string">&#x27;show&#x27;</span>, <span class="hljs-number">2</span>)<br>        : saveToLocal.<span class="hljs-title function_">set</span>(<span class="hljs-string">&#x27;aside-status&#x27;</span>, <span class="hljs-string">&#x27;hide&#x27;</span>, <span class="hljs-number">2</span>)<br>      $htmlDom.<span class="hljs-title function_">toggle</span>(<span class="hljs-string">&#x27;hide-aside&#x27;</span>)<br>&#125;<br>toggleAplayer=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>    $(<span class="hljs-string">&quot;.aplayer-fixed&quot;</span>).<span class="hljs-title function_">toggle</span>()<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;aplayerhide&quot;</span>)==<span class="hljs-string">&quot;true&quot;</span>)&#123;<br>        <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;aplayerhide&quot;</span>,<span class="hljs-literal">false</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;aplayerhide&quot;</span>,<span class="hljs-literal">true</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment">// position = $(window).scrollTop();</span><br><span class="hljs-comment">// $(window).scroll(function () &#123;</span><br><br><span class="hljs-comment">//     scroll = $(window).scrollTop();</span><br>  <br><span class="hljs-comment">//     if (scroll &gt; position) &#123;</span><br><span class="hljs-comment">//       document.getElementsByTagName(&quot;header&quot;)[0].style.transform=&quot;translateY(58px)&quot;;</span><br><span class="hljs-comment">//     &#125; else &#123;</span><br>  <br>  <br><span class="hljs-comment">//         document.getElementsByTagName(&quot;header&quot;)[0].style.transform=&quot;&quot;;</span><br>  <br><span class="hljs-comment">//     &#125;</span><br>  <br><span class="hljs-comment">//     position = scroll;</span><br><span class="hljs-comment">//   &#125;);</span><br>toggleSakuras=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>    isSakura=!isSakura;<br>    <span class="hljs-title function_">stopp</span>(isSakura);<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;sakurahide&quot;</span>)==<span class="hljs-string">&quot;true&quot;</span>)&#123;<br>        <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;sakurahide&quot;</span>,<span class="hljs-literal">false</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;sakurahide&quot;</span>,<span class="hljs-literal">true</span>);<br>    &#125;<br>&#125;<br>switchAside=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">if</span>(left)&#123;<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;aside-content&quot;</span>).<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&quot;right&quot;</span>);<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;.layout &gt; div:first-child&quot;</span>).<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&quot;left&quot;</span>);<br>        <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;leftAside&quot;</span>,<span class="hljs-string">&quot;false&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;aside-content&quot;</span>).<span class="hljs-property">className</span>=<span class="hljs-string">&quot;aside-content&quot;</span>;<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;.layout &gt; div:first-child&quot;</span>).<span class="hljs-property">className</span>=<span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-keyword">try</span>&#123;<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;#recent-posts&quot;</span>).<span class="hljs-property">className</span>=<span class="hljs-string">&quot;recent-posts&quot;</span>;<br>    &#125;<span class="hljs-keyword">catch</span>(err)&#123;&#125;<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;leftAside&quot;</span>,<span class="hljs-string">&quot;true&quot;</span>);&#125;<br>    left=!left;<br>&#125;<br>left=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;leftAside&quot;</span>)==<span class="hljs-string">&quot;true&quot;</span>||<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;leftAside&quot;</span>)==<span class="hljs-literal">null</span>)&#123;<br>    <br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_">switchAside</span>();<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;autoTheme&quot;</span>)==<span class="hljs-string">&quot;true&quot;</span>)&#123;<br>    <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;autoTheme&quot;</span>,<span class="hljs-string">&quot;false&quot;</span>);<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;autoTheme&quot;</span>).<span class="hljs-property">checked</span>=<span class="hljs-literal">true</span>;<br>    <span class="hljs-keyword">var</span> time=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();<br>    <span class="hljs-keyword">if</span>(time.<span class="hljs-title function_">getHours</span>()&lt;=<span class="hljs-number">7</span>||time.<span class="hljs-title function_">getHours</span>()&gt;=<span class="hljs-number">19</span>)&#123;<br>        <span class="hljs-title function_">activateDarkMode</span>()<br>        saveToLocal.<span class="hljs-title function_">set</span>(<span class="hljs-string">&#x27;theme&#x27;</span>, <span class="hljs-string">&#x27;dark&#x27;</span>, <span class="hljs-number">2</span>)<br>        <span class="hljs-variable constant_">GLOBAL_CONFIG</span>.<span class="hljs-property">Snackbar</span> !== <span class="hljs-literal">undefined</span> &amp;&amp; btf.<span class="hljs-title function_">snackbarShow</span>(<span class="hljs-variable constant_">GLOBAL_CONFIG</span>.<span class="hljs-property">Snackbar</span>.<span class="hljs-property">day_to_night</span>)<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-title function_">activateLightMode</span>()<br>        saveToLocal.<span class="hljs-title function_">set</span>(<span class="hljs-string">&#x27;theme&#x27;</span>, <span class="hljs-string">&#x27;light&#x27;</span>, <span class="hljs-number">2</span>)<br>        <span class="hljs-variable constant_">GLOBAL_CONFIG</span>.<span class="hljs-property">Snackbar</span> !== <span class="hljs-literal">undefined</span> &amp;&amp; btf.<span class="hljs-title function_">snackbarShow</span>(<span class="hljs-variable constant_">GLOBAL_CONFIG</span>.<span class="hljs-property">Snackbar</span>.<span class="hljs-property">night_to_day</span>)<br>    &#125;<br>&#125;<br><span class="hljs-keyword">if</span>(location.<span class="hljs-property">href</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&#x27;posts&#x27;</span>)!=-<span class="hljs-number">1</span>)&#123;<br>    <span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();<br>    <span class="hljs-keyword">var</span> url = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;#page-header&#x27;</span>).<span class="hljs-property">style</span>.<span class="hljs-property">backgroundImage</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;url(&quot;&#x27;</span>)[<span class="hljs-number">1</span>].<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;&quot;)&#x27;</span>)[<span class="hljs-number">0</span>];<br>    xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&quot;GET&quot;</span>,<span class="hljs-string">&quot;https://apis.yisous.xyz/api/imageColor?imgurl=&quot;</span>+url, <span class="hljs-literal">true</span>);<br>    xhr.<span class="hljs-title function_">send</span>();<br>    xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">if</span> (xhr.<span class="hljs-property">readyState</span>===<span class="hljs-number">4</span>) &#123;<br>            <span class="hljs-keyword">if</span>(xhr.<span class="hljs-property">status</span>===<span class="hljs-number">200</span>) &#123;<br>                <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;themeColor&quot;</span>).<span class="hljs-property">innerText</span>=<span class="hljs-string">`:root&#123;--lyx-theme:<span class="hljs-subst">$&#123;xhr.responseText&#125;</span>!important&#125;`</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br>toggleAutoTheme=<span class="hljs-function">()=&gt;</span>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;autoTheme&quot;</span>)==<span class="hljs-string">&quot;true&quot;</span>)&#123;<br>        <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;autoTheme&quot;</span>,<span class="hljs-string">&quot;false&quot;</span>);<br>        $(<span class="hljs-string">&quot;#con-mode&quot;</span>).<span class="hljs-title function_">show</span>();<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;autoTheme&quot;</span>,<span class="hljs-string">&quot;true&quot;</span>);<br>        <span class="hljs-keyword">var</span> time=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();<br>        <span class="hljs-keyword">if</span>(time.<span class="hljs-title function_">getHours</span>()&lt;=<span class="hljs-number">7</span>||time.<span class="hljs-title function_">getHours</span>()&gt;=<span class="hljs-number">19</span>)&#123;<br>            <span class="hljs-title function_">activateDarkMode</span>()<br>            saveToLocal.<span class="hljs-title function_">set</span>(<span class="hljs-string">&#x27;theme&#x27;</span>, <span class="hljs-string">&#x27;dark&#x27;</span>, <span class="hljs-number">2</span>)<br>            <span class="hljs-variable constant_">GLOBAL_CONFIG</span>.<span class="hljs-property">Snackbar</span> !== <span class="hljs-literal">undefined</span> &amp;&amp; btf.<span class="hljs-title function_">snackbarShow</span>(<span class="hljs-variable constant_">GLOBAL_CONFIG</span>.<span class="hljs-property">Snackbar</span>.<span class="hljs-property">day_to_night</span>)<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-title function_">activateLightMode</span>()<br>            saveToLocal.<span class="hljs-title function_">set</span>(<span class="hljs-string">&#x27;theme&#x27;</span>, <span class="hljs-string">&#x27;light&#x27;</span>, <span class="hljs-number">2</span>)<br>            <span class="hljs-variable constant_">GLOBAL_CONFIG</span>.<span class="hljs-property">Snackbar</span> !== <span class="hljs-literal">undefined</span> &amp;&amp; btf.<span class="hljs-title function_">snackbarShow</span>(<span class="hljs-variable constant_">GLOBAL_CONFIG</span>.<span class="hljs-property">Snackbar</span>.<span class="hljs-property">night_to_day</span>)<br>        &#125;<br>        $(<span class="hljs-string">&quot;#con-mode&quot;</span>).<span class="hljs-title function_">hide</span>();<br>    &#125;<br>&#125;<br>&#125;<br>switchDarkMode = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">const</span> nowMode = <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&#x27;data-theme&#x27;</span>) === <span class="hljs-string">&#x27;dark&#x27;</span> ? <span class="hljs-string">&#x27;dark&#x27;</span> : <span class="hljs-string">&#x27;light&#x27;</span><br>    <span class="hljs-keyword">if</span> (nowMode === <span class="hljs-string">&#x27;light&#x27;</span>) &#123;<br>        <span class="hljs-title function_">activateDarkMode</span>()<br>        saveToLocal.<span class="hljs-title function_">set</span>(<span class="hljs-string">&#x27;theme&#x27;</span>, <span class="hljs-string">&#x27;dark&#x27;</span>, <span class="hljs-number">2</span>)<br>        <span class="hljs-variable constant_">GLOBAL_CONFIG</span>.<span class="hljs-property">Snackbar</span> !== <span class="hljs-literal">undefined</span> &amp;&amp; btf.<span class="hljs-title function_">snackbarShow</span>(<span class="hljs-variable constant_">GLOBAL_CONFIG</span>.<span class="hljs-property">Snackbar</span>.<span class="hljs-property">day_to_night</span>)<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-title function_">activateLightMode</span>()<br>        saveToLocal.<span class="hljs-title function_">set</span>(<span class="hljs-string">&#x27;theme&#x27;</span>, <span class="hljs-string">&#x27;light&#x27;</span>, <span class="hljs-number">2</span>)<br>        <span class="hljs-variable constant_">GLOBAL_CONFIG</span>.<span class="hljs-property">Snackbar</span> !== <span class="hljs-literal">undefined</span> &amp;&amp; btf.<span class="hljs-title function_">snackbarShow</span>(<span class="hljs-variable constant_">GLOBAL_CONFIG</span>.<span class="hljs-property">Snackbar</span>.<span class="hljs-property">night_to_day</span>)<br>    &#125;<br>    <span class="hljs-comment">// handle some cases</span><br>    <span class="hljs-keyword">typeof</span> utterancesTheme === <span class="hljs-string">&#x27;function&#x27;</span> &amp;&amp; <span class="hljs-title function_">utterancesTheme</span>()<br>    <span class="hljs-keyword">typeof</span> <span class="hljs-variable constant_">FB</span> === <span class="hljs-string">&#x27;object&#x27;</span> &amp;&amp; <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">loadFBComment</span>()<br>    <span class="hljs-variable language_">window</span>.<span class="hljs-property">DISQUS</span> &amp;&amp; <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;disqus_thread&#x27;</span>).<span class="hljs-property">children</span>.<span class="hljs-property">length</span> &amp;&amp; <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">disqusReset</span>(), <span class="hljs-number">200</span>)<br>&#125;;<br></code></pre></td></tr></table></figure>
<p>新建css</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/*使用了Chrome105新特性has，兼容性不好qwq*/</span><br><span class="hljs-selector-class">.con-rightside</span>&#123;<br>    <span class="hljs-attribute">height</span>:<span class="hljs-number">50px</span><span class="hljs-meta">!important</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span><span class="hljs-meta">!important</span>;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">30px</span>;<br>    -webkit-<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">30px</span>;<br>    -moz-<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">30px</span>;<br>    -ms-<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">30px</span>;<br>    -o-<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">30px</span>;<br>    <span class="hljs-attribute">margin</span>:<span class="hljs-number">10px</span>;<br>    <span class="hljs-attribute">transition</span>: all .<span class="hljs-number">3s</span>;<br>    -webkit-<span class="hljs-attribute">transition</span>: all .<span class="hljs-number">3s</span>;<br>    -moz-<span class="hljs-attribute">transition</span>: all .<span class="hljs-number">3s</span>;<br>    -ms-<span class="hljs-attribute">transition</span>: all .<span class="hljs-number">3s</span>;<br>    -o-<span class="hljs-attribute">transition</span>: all .<span class="hljs-number">3s</span>;<br>&#125;<br><span class="hljs-selector-class">.con-rightside</span><span class="hljs-selector-pseudo">:hover</span>&#123;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">129</span>, <span class="hljs-number">129</span>, <span class="hljs-number">129</span>, <span class="hljs-number">0.568</span>);<br>&#125;<br><span class="hljs-selector-class">.con-rightside</span> <span class="hljs-selector-tag">i</span><span class="hljs-selector-pseudo">::before</span>&#123;<br>    <span class="hljs-attribute">font-size</span>:<span class="hljs-number">30px</span>;<br>&#125;<br><span class="hljs-selector-attr">[data-theme=<span class="hljs-string">&quot;dark&quot;</span>]</span> <span class="hljs-selector-class">.con-rightside</span> <span class="hljs-selector-tag">i</span><span class="hljs-selector-pseudo">::before</span>&#123;<br>    <span class="hljs-attribute">color</span>:white<br>&#125;<br><span class="hljs-selector-class">.con-rightside</span><span class="hljs-selector-pseudo">:hover</span>&#123;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">129</span>, <span class="hljs-number">129</span>, <span class="hljs-number">129</span>, <span class="hljs-number">0.568</span>);<br>&#125;<br><span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">max-width</span>:<span class="hljs-number">600px</span>)&#123;<br>    <span class="hljs-selector-class">.con-rightside</span> <span class="hljs-selector-tag">i</span><span class="hljs-selector-pseudo">::before</span>&#123;<br>        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br>    &#125;<br>    <span class="hljs-selector-class">.con-rightside</span>&#123;<br>        <span class="hljs-attribute">height</span>:<span class="hljs-number">20px</span><span class="hljs-meta">!important</span>;<br>        <span class="hljs-attribute">width</span>:<span class="hljs-number">20px</span><span class="hljs-meta">!important</span>;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">max-width</span>:<span class="hljs-number">768px</span>)&#123;<br>    <span class="hljs-selector-id">#con-barrage</span>&#123;<br>        <span class="hljs-attribute">display</span>: none<span class="hljs-meta">!important</span>;<br>    &#125;   <br>&#125;<br><span class="hljs-selector-id">#setting-buttons</span>&#123;<br>    <span class="hljs-attribute">display</span>: flex;<br>    <span class="hljs-attribute">flex-wrap</span>: wrap;<br>&#125;<br><span class="hljs-selector-class">.setting-title</span>&#123;<br>    <span class="hljs-attribute">text-align</span>: center;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">30px</span>;<br>    <span class="hljs-attribute">display</span>: flex;<br>&#125;<br><span class="hljs-selector-id">#setting-sides</span>&#123;<br>    <span class="hljs-attribute">margin-left</span>: auto;<br>&#125;<br><span class="hljs-selector-id">#setting-sides</span>&#123;<br>    <span class="hljs-attribute">white-space</span>: nowrap;<br>&#125;<br><span class="hljs-selector-id">#setting-sidesl</span>&#123;<br>    <span class="hljs-attribute">display</span>: flex;<br>&#125;<br><span class="hljs-selector-class">.settings</span> <span class="hljs-selector-class">.content</span>&#123;<br>    <span class="hljs-attribute">margin-left</span>:<span class="hljs-number">20px</span>;<br>&#125;<br><span class="hljs-selector-class">.settings</span>&#123;<br>    <span class="hljs-attribute">margin</span>:<span class="hljs-number">15px</span><br>&#125;<br><span class="hljs-comment">/* 开关 */</span><br><span class="hljs-selector-class">.settings</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;checkbox&quot;</span>]</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">38px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">20px</span>;<br>    <span class="hljs-attribute">position</span>: relative;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#000000</span>;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#0000</span>;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">12px</span>;<br>    <span class="hljs-attribute">background-clip</span>: content-box;<br>    <span class="hljs-attribute">display</span>: inline-block;<br>    -webkit-appearance: none;<br>    user-select: none;<br>    <span class="hljs-attribute">outline</span>: none;<br><span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">5px</span>);&#125;<br><span class="hljs-selector-attr">[data-theme=<span class="hljs-string">&quot;dark&quot;</span>]</span> <span class="hljs-selector-class">.settings</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;checkbox&quot;</span>]</span> &#123;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid white;<br>&#125;<br><span class="hljs-selector-class">.settings</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;checkbox&quot;</span>]</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">12px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">12px</span>;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">top</span>: <span class="hljs-number">3px</span>;<br>    <span class="hljs-attribute">left</span>: <span class="hljs-number">5px</span>;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">10px</span>;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#000</span>;&#125;<br><span class="hljs-selector-attr">[data-theme=<span class="hljs-string">&quot;dark&quot;</span>]</span> <span class="hljs-selector-class">.settings</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;checkbox&quot;</span>]</span><span class="hljs-selector-pseudo">:before</span>&#123;<br>    <span class="hljs-attribute">background-color</span>: white;<br>&#125;<br><span class="hljs-selector-class">.settings</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;checkbox&quot;</span>]</span><span class="hljs-selector-pseudo">:checked</span> &#123;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">var</span>(--lyx-theme);<span class="hljs-attribute">border-color</span>:<span class="hljs-built_in">var</span>(--lyx-theme)&#125;<br><span class="hljs-selector-class">.settings</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;checkbox&quot;</span>]</span><span class="hljs-selector-pseudo">:checked</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>    <span class="hljs-attribute">left</span>: <span class="hljs-number">19px</span>;<span class="hljs-attribute">background-color</span>: white<span class="hljs-meta">!important</span>;&#125;<br><br><span class="hljs-selector-class">.settings</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;checkbox&quot;</span>]</span> &#123;<br>    <span class="hljs-attribute">transition</span>: border background-color box-shadow &#125;<br><span class="hljs-selector-class">.settings</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;checkbox&quot;</span>]</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>    <span class="hljs-attribute">transition</span>: left <span class="hljs-number">0.2s</span>;&#125;<br><span class="hljs-selector-class">.settings</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;checkbox&quot;</span>]</span><span class="hljs-selector-pseudo">:checked</span> &#123;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">var</span>(--lyx-theme);<br>    <span class="hljs-comment">/* transition: border ease 0.4s, background-color ease 1.2s; */</span><br>&#125;<span class="hljs-selector-class">.settings</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;checkbox&quot;</span>]</span><span class="hljs-selector-pseudo">:checked</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>    <span class="hljs-attribute">transition</span>: left <span class="hljs-number">0.2s</span>;&#125;<br><span class="hljs-selector-class">.settings</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;checkbox&quot;</span>]</span><span class="hljs-selector-pseudo">:checked</span><span class="hljs-selector-pseudo">:hover</span>&#123;<br>    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0.8</span>;<br>&#125;<br><span class="hljs-selector-class">.settings</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;checkbox&quot;</span>]</span><span class="hljs-selector-pseudo">:active</span>&#123;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#666666</span><span class="hljs-meta">!important</span>;<br>    <span class="hljs-attribute">border-color</span>:<span class="hljs-number">#666666</span><span class="hljs-meta">!important</span>;<br>&#125;<br><span class="hljs-selector-class">.settings</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;checkbox&quot;</span>]</span><span class="hljs-selector-pseudo">:active</span><span class="hljs-selector-pseudo">::before</span>&#123;<br>    <span class="hljs-attribute">background-color</span>:white<span class="hljs-meta">!important</span>;<br>&#125;<br><span class="hljs-selector-class">.settings</span>&#123;<br>    <span class="hljs-attribute">overflow</span>: scroll;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>&#125;<br><span class="hljs-selector-id">#settingWindow</span>&#123;<br>    <span class="hljs-attribute">position</span>: fixed;<br>    <span class="hljs-attribute">display</span>: block;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">80%</span>;<br>    <span class="hljs-attribute">max-width</span>: <span class="hljs-number">800px</span>;<br>    <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;<br>    <span class="hljs-attribute">top</span>: <span class="hljs-number">50%</span>;<br>    <span class="hljs-attribute">max-height</span>: <span class="hljs-number">80%</span>;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#ffffffdd</span>;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">20px</span>;<br>    -webkit-<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">20px</span>;<br>    -moz-<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">20px</span>;<br>    -ms-<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">20px</span>;<br>    -o-<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">20px</span>;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-built_in">var</span>(--lyx-border);<br>    <span class="hljs-attribute">padding</span>:<span class="hljs-number">30px</span>;<br>    backdrop-<span class="hljs-attribute">filter</span>: <span class="hljs-built_in">blur</span>(<span class="hljs-number">10px</span>);<br>    -ms-<span class="hljs-attribute">transform-origin</span>-y:<span class="hljs-built_in">translate</span>(-<span class="hljs-number">50%</span>,-<span class="hljs-number">50%</span>);<br>    -webkit-<span class="hljs-attribute">transform</span>:<span class="hljs-built_in">translate</span>(-<span class="hljs-number">50%</span>,-<span class="hljs-number">50%</span>);<br>    -moz-<span class="hljs-attribute">transform</span>:<span class="hljs-built_in">translate</span>(-<span class="hljs-number">50%</span>,-<span class="hljs-number">50%</span>);<br>    -ms-<span class="hljs-attribute">transform</span>:<span class="hljs-built_in">translate</span>(-<span class="hljs-number">50%</span>,-<span class="hljs-number">50%</span>);<br>    -o-<span class="hljs-attribute">transform</span>:<span class="hljs-built_in">translate</span>(-<span class="hljs-number">50%</span>,-<span class="hljs-number">50%</span>);<br>    <span class="hljs-attribute">z-index</span>: <span class="hljs-number">514</span>;<br>    <span class="hljs-attribute">display</span>: none;<br>&#125;<br><span class="hljs-selector-class">.settings</span>&#123;<br>    <span class="hljs-attribute">overflow</span>: scroll;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>&#125;<br><span class="hljs-selector-id">#settingWindow</span>&#123;<br>    <span class="hljs-attribute">display</span>: none;<br>    <span class="hljs-attribute">flex-direction</span>: column;<br>&#125;<br><span class="hljs-selector-class">.settingx</span>&#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">46%</span>;<br>    <span class="hljs-attribute">text-align</span>: left;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">28px</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span>;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">var</span>(--lyx-light-grey);<br>    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0.8</span>;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">10px</span>;<br>&#125;<br><span class="hljs-selector-class">.settingx</span><span class="hljs-selector-pseudo">:hover</span>&#123;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">var</span>(--lyx-gray);<br>&#125;<br><span class="hljs-selector-class">.settingx</span> <span class="hljs-selector-tag">i</span>&#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">5px</span>;<br>&#125;<br><span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">max-width</span>:<span class="hljs-number">768px</span>)&#123;<br>    <span class="hljs-selector-class">.settingx</span>&#123;<br>        <span class="hljs-attribute">width</span>:<span class="hljs-number">100%</span><span class="hljs-meta">!important</span>;<br>    &#125;<br>&#125;<br><span class="hljs-selector-class">.setting-title</span>&#123;<br>    <span class="hljs-attribute">text-align</span>: center;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">30px</span>;<br>    <span class="hljs-attribute">display</span>: flex;<br>&#125;<br><span class="hljs-selector-id">#close-console</span>&#123;<br>    <span class="hljs-attribute">text-align</span>: right;<br>&#125;<br><span class="hljs-selector-id">#stt</span>,<span class="hljs-selector-id">#close-console</span>&#123;<br>    <span class="hljs-attribute">margin-left</span>: auto;<br>&#125;<br><span class="hljs-selector-id">#close-console</span><span class="hljs-selector-pseudo">:not</span>(<span class="hljs-selector-id">#close-console</span><span class="hljs-selector-pseudo">:hover</span>)&#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-built_in">var</span>(--global-font-color);<br>&#125;<br></code></pre></td></tr></table></figure>
<p>然后在<code>[blogRoot]/themes/butterfly/layout/includes/layout.pug</code>中添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs pug">...<br>include ./rightside.pug<br>! =partial(&#x27;includes/third-party/search/index&#x27;, &#123;&#125;, &#123;cache: true&#125;)<br>+ ! =partial(&#x27;includes/setting&#x27;,&#123;&#125;, &#123;cache:false&#125;)<br></code></pre></td></tr></table></figure>
<p>还要引入一些外挂css标签:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">inject:</span><br>  <span class="hljs-attr">head:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&lt;style</span> <span class="hljs-string">id=&quot;settingStyle&quot;&gt;&lt;/style&gt;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&lt;style</span> <span class="hljs-string">id=&quot;css&quot;&gt;&lt;/style&gt;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&lt;style</span> <span class="hljs-string">id=&quot;themeColor&quot;&gt;&lt;/style&gt;</span><br>  <span class="hljs-string">...</span><br>  <span class="hljs-attr">bottom:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&lt;script</span> <span class="hljs-string">type=&quot;text/javascript&quot;</span> <span class="hljs-string">src=&quot;https://gcore.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br>  <span class="hljs-string">...</span><br> <br></code></pre></td></tr></table></figure>
<p>在<code>butterfly\layout\includes\rightside.pug</code>添加按钮</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs pug">when &#x27;comment&#x27;<br>    if commentsJsLoad<br>        a#to_comment(href=&quot;#post-comment&quot; title=_p(&quot;rightside.scroll_to_comment&quot;))<br>        i.fas.fa-comments<br>+ when &#x27;bg&#x27;<br>+     button(type=&quot;button&quot; title=&#x27;切换背景&#x27; onclick=&quot;toggleWinbox()&quot;)<br>+         i.fas.fa-display<br></code></pre></td></tr></table></figure>
<p>然后修改：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">#rightside<br>  - const &#123; enable, hide, show &#125; = theme.rightside_item_order<br>  - const hideArray = enable ? hide &amp;&amp; hide.split(&#x27;,&#x27;) : [&#x27;readmode&#x27;,&#x27;translate&#x27;,&#x27;darkmode&#x27;,&#x27;hideAside&#x27;]<br>-  - const showArray = enable ? show &amp;&amp; show.split(&#x27;,&#x27;) : [&#x27;toc&#x27;,&#x27;chat&#x27;,&#x27;comment&#x27;]<br>+  - const showArray = enable ? show &amp;&amp; show.split(&#x27;,&#x27;) : [&#x27;toc&#x27;,&#x27;chat&#x27;,&#x27;comment&#x27;,&#x27;bg&#x27;]<br></code></pre></td></tr></table></figure>
<h1 id="修改鼠标样式"><a href="#修改鼠标样式" class="headerlink" title="修改鼠标样式"></a>修改鼠标样式</h1><blockquote>
<p>在<a href="https://zhutix.com/tag/cursors/">致美化</a>下载鼠标样式</p>
</blockquote>
<p>在css中添加并修改：<br><figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 全局默认鼠标指针 */</span><br><span class="hljs-selector-tag">body</span>,<br><span class="hljs-selector-tag">html</span> &#123;<br>	<span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;/self/img/cursors/mogu/normal.cur&#x27;</span>),auto <span class="hljs-meta">!important</span>;<br>&#125;<br><span class="hljs-comment">/* 悬停图片时的鼠标指针 */</span><br><span class="hljs-selector-tag">img</span> &#123; <br>	<span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;/self/img/cursors/mogu/normal.cur&#x27;</span>), auto <span class="hljs-meta">!important</span>;<br>&#125;<br><span class="hljs-comment">/* 悬停图片弹出窗口时的鼠标指针 */</span><br><span class="hljs-selector-class">.fancybox__slide</span>&#123;<br>	<span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;./mouse/xxx.cur&#x27;</span>), auto <span class="hljs-meta">!important</span>;<br>&#125;<br><span class="hljs-selector-class">.carousel__slide</span>&#123;<br>	<span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;./mouse/xxx.cur&#x27;</span>), auto <span class="hljs-meta">!important</span>;<br>&#125;<br><span class="hljs-comment">/* 选择链接标签时的鼠标指针 */</span><br><span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span>,<span class="hljs-selector-id">#site-name</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>    <span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;./mouse/xxx.cur&#x27;</span>), auto <span class="hljs-meta">!important</span>;<br>&#125;<br><span class="hljs-comment">/* 选择代码框展开和复制按钮时的鼠标指针 */</span><br><span class="hljs-selector-class">.copy-button</span><span class="hljs-selector-pseudo">:hover</span>,<span class="hljs-selector-class">.expand</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>    <span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;./mouse/xxx.cur&#x27;</span>), auto <span class="hljs-meta">!important</span>;<br>&#125;<br><span class="hljs-comment">/* 选中输入框时的鼠标指针 */</span><br><span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">:hover</span>, <span class="hljs-selector-tag">textarea</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>    <span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;./mouse/xxx.cur&#x27;</span>), auto;<br>&#125;<br><span class="hljs-comment">/* 悬停按钮时的鼠标指针 */</span><br><span class="hljs-selector-tag">button</span><span class="hljs-selector-pseudo">:hover</span>,<span class="hljs-selector-class">.scroll-down-effects</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>    <span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;./mouse/xxx.cur&#x27;</span>), auto;<br>&#125;<br><span class="hljs-comment">/* 悬停页脚链接标签（例如页脚徽标）时的鼠标指针 */</span><br><span class="hljs-selector-id">#footer-wrap</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>    <span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;./mouse/xxx.cur&#x27;</span>), auto;<br>&#125;<br><span class="hljs-comment">/* 悬停页码时的鼠标指针 */</span><br><span class="hljs-selector-id">#pagination</span> <span class="hljs-selector-class">.page-number</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>    <span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;./mouse/xxx.cur&#x27;</span>), auto;<br>&#125;<br><span class="hljs-comment">/* 悬停菜单栏时的鼠标指针 */</span><br><span class="hljs-selector-id">#nav</span> <span class="hljs-selector-class">.site-page</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>    <span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;./mouse/xxx.cur&#x27;</span>), auto <span class="hljs-meta">!important</span>;<br>&#125;<br><span class="hljs-comment">/* 悬停滚动条的鼠标指针（只对Chrome有效） */</span><br>::-webkit-scrollbar:hover&#123;<br>	<span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;./mouse/xxx.cur&#x27;</span>), auto<span class="hljs-meta">!important</span>;<br>&#125;<br><span class="hljs-comment">/* 悬停评论按钮的鼠标指针（我使用的是Gitalk/Valine） */</span><br><span class="hljs-selector-class">.switch-btn</span>,<span class="hljs-selector-class">.switch-btn</span><span class="hljs-selector-pseudo">:before</span>,<span class="hljs-selector-class">.gt-user-inner</span>,<span class="hljs-selector-class">.gt-ico</span>,<span class="hljs-selector-class">.gt-user-name</span>,<span class="hljs-selector-class">.gt-btn</span>,<span class="hljs-selector-class">.vbtn</span>,svg,<span class="hljs-selector-class">.at_button</span>&#123;<br>	<span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;./mouse/xxx.cur&#x27;</span>), auto <span class="hljs-meta">!important</span>;<br>&#125;<br><span class="hljs-comment">/* 悬停非链接文本时的鼠标指针 */</span><br><span class="hljs-selector-tag">h1</span>,<span class="hljs-selector-tag">h2</span>,<span class="hljs-selector-tag">h3</span>,<span class="hljs-selector-tag">h4</span>,<span class="hljs-selector-tag">h5</span>,<span class="hljs-selector-tag">h6</span>,<span class="hljs-selector-id">#subtitle</span>,<span class="hljs-selector-class">.content</span>,<span class="hljs-selector-class">.line</span>,<span class="hljs-selector-class">.post-content</span> <span class="hljs-selector-tag">p</span>,<span class="hljs-selector-class">.post-content</span> <span class="hljs-selector-tag">li</span>&#123;<br>	<span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;/self/img/cursors/mogu/text.ani&#x27;</span>), auto;<br>&#125;<br><span class="hljs-comment">/* 悬停文章日期 */</span><br><span class="hljs-selector-class">.post-meta-date</span><span class="hljs-selector-pseudo">:hover</span>,<span class="hljs-selector-class">.post-meta-date-created</span><span class="hljs-selector-pseudo">:hover</span>&#123;<br>	<span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;./mouse/xxx.cur&#x27;</span>), auto<span class="hljs-meta">!important</span>;<br>&#125;<br></code></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>Butterfly</tag>
      </tags>
  </entry>
  <entry>
    <title>css教程一</title>
    <url>/posts/26527.html</url>
    <content><![CDATA[<h1 id="css选择器"><a href="#css选择器" class="headerlink" title="css选择器"></a>css选择器</h1><h2 id="元素选择器（Element-Selector）"><a href="#元素选择器（Element-Selector）" class="headerlink" title="元素选择器（Element Selector）"></a>元素选择器（Element Selector）</h2><blockquote>
<p>通过元素名称选择 HTML 元素。<br><figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css">// 如下代码，<span class="hljs-selector-tag">p</span> 选择器将选择所有 &lt;<span class="hljs-selector-tag">p</span>&gt; 元素:<br><br>p &#123;<br>  <span class="hljs-attribute">color</span>: blue;<br>&#125;<br></code></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="类选择器（Class-Selector）"><a href="#类选择器（Class-Selector）" class="headerlink" title="类选择器（Class Selector）"></a>类选择器（Class Selector）</h2><blockquote>
<p>通过类别名称选择具有特定类别的 HTML 元素。</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css">// 类选择器以 . 开头，后面跟着类别名称。<br>// 如下代码，<span class="hljs-selector-class">.highlight</span> 选择器将选择所有具有类别为 &quot;highlight&quot; 的元素。<br><br><span class="hljs-selector-class">.highlight</span> &#123;<br>  <span class="hljs-attribute">background-color</span>: yellow;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="ID-选择器（ID-Selector）"><a href="#ID-选择器（ID-Selector）" class="headerlink" title="ID 选择器（ID Selector）"></a>ID 选择器（ID Selector）</h2><blockquote>
<p>通过元素的唯一标识符（ID）选择 HTML 元素。</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css">// ID 选择器以 # 开头，后面跟着 ID 名称。<br>// 如下代码，<span class="hljs-selector-id">#runoob</span> 选择器将选择具有 ID 为 &quot;runoob&quot; 的元素。<br><br><span class="hljs-selector-id">#runoob</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="属性选择器（Attribute-Selector）"><a href="#属性选择器（Attribute-Selector）" class="headerlink" title="属性选择器（Attribute Selector）"></a>属性选择器（Attribute Selector）</h2><blockquote>
<p>通过元素的属性选择 HTML 元素。属性选择器可以根据属性名和属性值进行选择。</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css">// 如下代码，<span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;text&quot;</span>]</span> 选择器将选择所有 type 属性为 &quot;text&quot; 的 &lt;<span class="hljs-selector-tag">input</span>&gt; 元素。<br><br><span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;text&quot;</span>]</span> &#123;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid gray;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="后代选择器（Descendant-Selector）"><a href="#后代选择器（Descendant-Selector）" class="headerlink" title="后代选择器（Descendant Selector）"></a>后代选择器（Descendant Selector）</h2><blockquote>
<p>通过指定元素的后代关系选择 HTML 元素。</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css">// 后代选择器使用空格分隔元素名称。<br>// 如下代码，<span class="hljs-selector-tag">div</span> <span class="hljs-selector-tag">p</span> 选择器将选择所有在 &lt;<span class="hljs-selector-tag">div</span>&gt; 元素内的 &lt;<span class="hljs-selector-tag">p</span>&gt; 元素。<br><br><span class="hljs-selector-tag">div</span> <span class="hljs-selector-tag">p</span> &#123;<br>  <span class="hljs-attribute">font-weight</span>: bold;<br>&#125;<br></code></pre></td></tr></table></figure>
<h1 id="背景：-background-属性"><a href="#背景：-background-属性" class="headerlink" title="背景： background 属性"></a>背景： background 属性</h1>]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>_3主3从的`Redis集群`搭建(下)</title>
    <url>/posts/36554.html</url>
    <content><![CDATA[<h2 id="3主3从的Redis集群搭建-下"><a href="#3主3从的Redis集群搭建-下" class="headerlink" title="_3主3从的Redis集群搭建(下)"></a>_3主3从的Redis集群搭建(下)</h2><h4 id="进入主机6381"><a href="#进入主机6381" class="headerlink" title="进入主机6381"></a>进入主机6381</h4><blockquote>
<p>redis-cli -p 6381</p>
</blockquote>
<figure>
    <a href="../assets/img/2022-08-25-_3主3从的Redis集群搭建(下).assets\image-20220509100727145.png"><img src="../assets/img/2022-08-25-_3主3从的Redis集群搭建(下).assets\image-20220509100727145.png"></a>
</figure>

<h4 id="查看集群信息"><a href="#查看集群信息" class="headerlink" title="查看集群信息"></a>查看集群信息</h4><blockquote>
<p>cluster info</p>
</blockquote>
<figure>
    <a href="../assets/img/2022-08-25-_3主3从的Redis集群搭建(下).assets\image-20220509101055861.png"><img src="../assets/img/2022-08-25-_3主3从的Redis集群搭建(下).assets\image-20220509101055861.png"></a>
</figure>

<p>查看主机和从机之间的主从关系</p>
<blockquote>
<p>cluster nodes</p>
</blockquote>
<p><img src=".\2022-08-25-_3主3从的Redis集群搭建(下" alt="image-20220509101455220">.assets\image-20220509101455220.png)</p>
<figure>
    <a href="../assets/img/2022-08-25-_3主3从的Redis集群搭建(下).assets\image-20220509101455220.png"><img src="../assets/img/2022-08-25-_3主3从的Redis集群搭建(下).assets\image-20220509101455220.png"></a>
</figure>


]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>_3主3从的`Redis集群`搭建之哈希槽算法</title>
    <url>/posts/53299.html</url>
    <content><![CDATA[<h2 id="3主3从的Redis集群搭建之哈希槽算法"><a href="#3主3从的Redis集群搭建之哈希槽算法" class="headerlink" title="_3主3从的Redis集群搭建之哈希槽算法"></a>_3主3从的<code>Redis集群</code>搭建之哈希槽算法</h2><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>解决<code>一致性哈希算法</code>数据倾斜问题</p>
<h3 id="实质"><a href="#实质" class="headerlink" title="实质"></a>实质</h3><p>是一个数组，数组[0,2^14-1]形成hash slot空间</p>
<h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>解决均匀分配问题，<font color="red">在数据和节点之间加入一层（哈希槽slot）用于管理数据和节点之间的关系，</font>现在相当于节点里放槽，槽里放数据</p>
<figure>
    <a href="../assets/img/2022-08-25-_3主3从的Redis集群搭建之哈希槽算法.assets\图像.bmp"><img src="../assets/img/2022-08-25-_3主3从的Redis集群搭建之哈希槽算法.assets\图像.bmp"></a>
</figure>

<p>方便数据移动</p>
<p>哈希解决的映射问题，使用key的哈希值来计算所在的槽，便于数据分配</p>
<h3 id="多少个hash槽"><a href="#多少个hash槽" class="headerlink" title="多少个hash槽"></a>多少个hash槽</h3><p>一个集群只能有16384个槽，编号0-16383（0-2^14-1）</p>
<p>这些槽会分配给集群中的所有主节点，分配策略没有要求。可以指定哪些编号的槽分配给哪个主节点。集群会记录节点和槽的对应关系。</p>
<p>接下来就需要对key求哈希值，然后对16384取余，余数是几key就落入对应的槽里。<code>slot = CRC16(key) % 16384</code>。</p>
<p>以槽为单位移动数据，因为槽的数目是固定的，处理起来比较容易，这样数据移动问题就解决了。</p>
<h3 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h3><p>Redis 集群中内置了 16384 个哈希槽，redis 会根据节点数量大致均等的将哈希槽映射到不同的节点。当需要在 Redis 集群中放置一个 key-value时，redis 先对 key 使用 crc16 算法算出一个结果，然后把结果对 16384 求余数，这样每个 key 都会对应一个编号在 0-16383 之间的哈希槽，也就是映射到某个节点上。如下代码，key之A 、B在Node2， key之C落在Node3上</p>
<p>首先有几个redis就把0-16383分成几个</p>
<figure>
    <a href="../assets/img/2022-08-25-_3主3从的Redis集群搭建之哈希槽算法.assets\图像 (2).bmp"><img src="../assets/img/2022-08-25-_3主3从的Redis集群搭建之哈希槽算法.assets\图像 (2).bmp"></a>
</figure>]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>_dockerfile</title>
    <url>/posts/13844.html</url>
    <content><![CDATA[<h2 id="dockerfile"><a href="#dockerfile" class="headerlink" title="_dockerfile"></a>_dockerfile</h2><h3 id="以dockerfile的方法来进行对centos的具有vim-ifconfig和jdk8的镜像"><a href="#以dockerfile的方法来进行对centos的具有vim-ifconfig和jdk8的镜像" class="headerlink" title="以dockerfile的方法来进行对centos的具有vim,ifconfig和jdk8的镜像"></a>以dockerfile的方法来进行对centos的具有vim,ifconfig和jdk8的镜像</h3><h4 id="创建myfile文件夹"><a href="#创建myfile文件夹" class="headerlink" title="创建myfile文件夹"></a>创建myfile文件夹</h4><h4 id="创建Dockerfile文件"><a href="#创建Dockerfile文件" class="headerlink" title="创建Dockerfile文件"></a>创建Dockerfile文件</h4><blockquote>
<p>注意：<code>jdk8</code>需要和<code>Dockerfile</code>放到同一个文件夹</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">FROM centos:7												<br>MAINTAINER zzyy&lt;zzyybs@126.com&gt;								<br>														<br>ENV MYPATH /usr/local										<br>WORKDIR $MYPATH<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装vim编辑器</span><br>RUN yum -y install vim<br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装ifconfig命令查看网络IP</span><br>RUN yum -y install net-tools<br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装java8及lib库</span><br>RUN yum -y install glibc.i686<br>RUN mkdir /usr/local/java<br><span class="hljs-meta prompt_">#</span><span class="language-bash">ADD 是相对路径jar,把jdk-8u171-linux-x64.tar.gz添加到容器中,安装包必须要和Dockerfile文件在同一位置</span><br>ADD jdk-8u171-linux-x64.tar.gz /usr/local/java/<br><span class="hljs-meta prompt_">#</span><span class="language-bash">配置java环境变量</span><br>ENV JAVA_HOME /usr/local/java/jdk1.8.0_171<br>ENV JRE_HOME $JAVA_HOME/jre<br>ENV CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib:$CLASSPATH<br>ENV PATH $JAVA_HOME/bin:$PATH<br><br>EXPOSE 80<br><br>CMD echo $MYPATH<br>CMD echo &quot;success--------------ok&quot;<br>CMD /bin/bash<br></code></pre></td></tr></table></figure>
<h4 id="创建好Dockerfile后，运行docker-build-t-新镜像名称：Tag"><a href="#创建好Dockerfile后，运行docker-build-t-新镜像名称：Tag" class="headerlink" title="创建好Dockerfile后，运行docker build -t 新镜像名称：Tag ."></a>创建好Dockerfile后，运行docker build -t 新镜像名称：Tag .</h4><font color="red">注意：Tag后面有个空格，有个点</font>

<h3 id="虚悬镜像"><a href="#虚悬镜像" class="headerlink" title="虚悬镜像"></a>虚悬镜像</h3><blockquote>
<p>仓库名和标签名全部为<none>的镜像</p>
</blockquote>
<p>碰到它还是进行删除的好</p>
<p>使用<code>docker image ls -f dangling=true</code>查找虚悬镜像</p>
<p>使用<code>docker image prune</code>删除镜像</p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>_3主3从的`Redis集群`搭建(上)</title>
    <url>/posts/7883.html</url>
    <content><![CDATA[<h2 id="3主3从的Redis集群搭建-上"><a href="#3主3从的Redis集群搭建-上" class="headerlink" title="_3主3从的Redis集群搭建(上)"></a>_3主3从的<code>Redis集群</code>搭建(上)</h2><ul>
<li>关闭防火墙，启动docker</li>
<li>新建6个docker容器<code>docker run -d --name redis-node-6 --net host --privileged=true -v /data/redis/share/redis-node-6:/data redis:6.0.8 --cluster-enabled yes --appendonly yes --port 6386</code><ul>
<li>docker run        创建并运行docker容器实例</li>
<li>—name redis-node-6        容器名字</li>
<li>—net host        使用宿主机的IP和端口，默认</li>
<li>—privileged=true        获取宿主机root用户权限</li>
<li>-v /data/redis/share/redis-node-6:/data        容器卷，宿主机地址:docker内部地址</li>
<li>redis:6.0.8        redis镜像和版本号</li>
<li>—cluster-enabled yes        开启redis集群</li>
<li>—appendonly yes        开启持久化</li>
<li>—port 6386        redis端口号</li>
</ul>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">docker run -d --name redis-node-1 --net host --privileged=true -v /data/redis/share/redis-node-1:/data redis:6.0.8 --cluster-enabled yes --appendonly yes --port 6381<br>docker run -d --name redis-node-2 --net host --privileged=true -v /data/redis/share/redis-node-2:/data redis:6.0.8 --cluster-enabled yes --appendonly yes --port 6382<br>docker run -d --name redis-node-3 --net host --privileged=true -v /data/redis/share/redis-node-3:/data redis:6.0.8 --cluster-enabled yes --appendonly yes --port 6383<br>docker run -d --name redis-node-4 --net host --privileged=true -v /data/redis/share/redis-node-4:/data redis:6.0.8 --cluster-enabled yes --appendonly yes --port 6384<br>docker run -d --name redis-node-5 --net host --privileged=true -v /data/redis/share/redis-node-5:/data redis:6.0.8 --cluster-enabled yes --appendonly yes --port 6385<br>docker run -d --name redis-node-6 --net host --privileged=true -v /data/redis/share/redis-node-6:/data redis:6.0.8 --cluster-enabled yes --appendonly yes --port 6386<br></code></pre></td></tr></table></figure>
<p>运行成功，使用<code>docker ps</code>查看</p>
<ul>
<li><p>进入容器redis-node-1并为6台机器构建集群关系</p>
<ul>
<li><p>进入一台redis进行配置<code>docker exec -it redis-node-1 bash</code></p>
</li>
<li><pre><code class="lang-shell">#进入后执行
redis-cli --cluster create 8.142.144.75:6381 8.142.144.75:6382 8.142.144.75:6383 8.142.144.75:6384 8.142.144.75:6385 8.142.144.75:6386 --cluster-replicas 1

 --cluster create    构建集群
 --cluster-replicas 1    集群关联一比一的关系

--cluster-replicas 1 表示为每个master创建一个slave节点
# 注意：上面的ip为真实IP
</code></pre>
</li>
</ul>
<p>有下面的绿色ok字样显示运行成功</p>
</li>
</ul>
<figure>
    <a href="../assets/img/2022-08-25-_3主3从的Redis集群搭建（上）.assets\image-20220507145226431.png"><img src="../assets/img/2022-08-25-_3主3从的Redis集群搭建（上）.assets\image-20220507145226431.png"></a>
</figure>

<blockquote>
<p>如果运行不成功，一直显示<code>Waiting for the cluster to join..</code>一直………………………………….，则是端口没有全部开放，防火墙也要开放端口，以阿里云为例</p>
</blockquote>
<p>  就是需要在安全组上面配置6381~6386的6个端口，<font color="red">还需要配置16381~16386的6个端口</font>，共12个端口都要开放，不然会一直提示等待</p>
<ul>
<li>一切OK的话，3主3从搭建搞定</li>
</ul>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>_mysql主从复制docker版</title>
    <url>/posts/42656.html</url>
    <content><![CDATA[<h2 id="mysql主从复制docker版"><a href="#mysql主从复制docker版" class="headerlink" title="_mysql主从复制docker版"></a>_mysql主从复制docker版</h2><h3 id="安装mysql主从复制（一主一从）"><a href="#安装mysql主从复制（一主一从）" class="headerlink" title="安装mysql主从复制（一主一从）"></a>安装mysql主从复制（一主一从）</h3><p>新建主服务器容器实例3307</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">docker run -p 3307:3306 --name mysql-master -v /mydata/mysql-master/log/:/var/log/mysql -v /mydata/mysql-master/data:/var/lib/mysql -v /mydata/mysql-master/conf:/etc/mysql -e MYSQL_ROOT_PASSWORD=root -d mysql:5.7<br></code></pre></td></tr></table></figure>
<p>进入<code>/mydata/mysql-master/conf</code>目录下新建<code>my.cnf</code>把下面内容粘贴到<code>my.cnf</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[mysqld]<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 设置server_id，同一局域网中需要唯一</span></span><br>server_id=101 <br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 指定不需要同步的数据库名称</span></span><br>binlog-ignore-db=mysql  <br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 开启二进制日志功能</span></span><br>log-bin=mall-mysql-bin  <br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 设置二进制日志使用内存大小（事务）</span></span><br>binlog_cache_size=1M  <br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 设置使用的二进制日志格式（mixed,statement,row）</span></span><br>binlog_format=mixed  <br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 二进制日志过期清理时间。默认值为0，表示不自动清理。</span></span><br>expire_logs_days=7  <br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 跳过主从复制中遇到的所有错误或指定类型的错误，避免slave端复制中断。</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 如：1062错误是指一些主键重复，1032错误是因为主从数据库数据不一致</span></span><br>slave_skip_errors=1062<br></code></pre></td></tr></table></figure>
<p>修改完配置后重启master容器</p>
<p>master容器实例内创建数据同步用户</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">建立一个用户</span><br>CREATE USER &#x27;slave&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;123456&#x27;;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">对新建的用户进行授权</span><br>GRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO &#x27;slave&#x27;@&#x27;%&#x27;;<br></code></pre></td></tr></table></figure>
<figure>
    <a href="../assets/img/2022-08-25-_mysql主从复制docker版.assets/图像2.png"><img src="../assets/img/2022-08-25-_mysql主从复制docker版.assets/图像2.png"></a>
</figure>


<p>新建从服务器实例3308</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">docker run -p 3308:3306 --name mysql-slave -v /mydata/mysql-slave/log/:/var/log/mysql -v /mydata/mysql-slave/data:/var/lib/mysql -v /mydata/mysql-slave/conf:/etc/mysql -e MYSQL_ROOT_PASSWORD=root -d mysql:5.7<br></code></pre></td></tr></table></figure>
<p>进入/mydata/mysql-slave/conf目录下新建my.cnf</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 设置使用的二进制日志格式（mixed,statement,row）</span></span><br>binlog_format=mixed  <br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 二进制日志过期清理时间。默认值为0，表示不自动清理。</span></span><br>expire_logs_days=7  <br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 跳过主从复制中遇到的所有错误或指定类型的错误，避免slave端复制中断。</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 如：1062错误是指一些主键重复，1032错误是因为主从数据库数据不一致</span></span><br>slave_skip_errors=1062  <br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># relay_log配置中继日志</span></span><br>relay_log=mall-mysql-relay-bin  <br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># log_slave_updates表示slave将复制事件写进自己的二进制日志</span></span><br>log_slave_updates=1  <br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># slave设置为只读（具有super权限的用户除外）</span></span><br>read_only=1<br></code></pre></td></tr></table></figure>
<p>重启从机实例<code>docker restart mysql-slave</code></p>
<p>在主数据库中查看主从同步状态<code>show master status;</code></p>
<p>进入mysql-slave从机容器</p>
<p>在从数据库中配置主从复制<code>change master to master_host=&#39;宿主机ip&#39;, master_user=&#39;slave&#39;, master_password=&#39;123456&#39;, master_port=3307, master_log_file=&#39;mall-mysql-bin.000001&#39;, master_log_pos=617, master_connect_retry=30;</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">说明：</span><br>master_host：主数据库的IP地址；<br>master_port：主数据库的运行端口；<br>master_user：在主数据库创建的用于同步数据的用户账号；<br>master_password：在主数据库创建的用于同步数据的用户密码；<br>master_log_file：指定从数据库要复制数据的日志文件，通过查看主数据的状态，获取File参数；<br>master_log_pos：指定从数据库从哪个位置开始复制数据，通过查看主数据的状态，获取Position参数；<br>master_connect_retry：连接失败重试的时间间隔，单位为秒。<br></code></pre></td></tr></table></figure>
<p>在从数据库中查看主从同步状态<code>show slave status \G;</code></p>
<p>在从数据库中开启主从同步<code>start slave</code></p>
<p>查看从数据库状态发现已经同步</p>
<figure>
    <a href="../assets/img/2022-08-25-_mysql主从复制docker版.assets\图像.png"><img src="../assets/img/2022-08-25-_mysql主从复制docker版.assets\图像.png"></a>
</figure>


<p>主从复制测试</p>
<p>主机创建数据库，创建表，插入数据，搜索表的数据</p>
<p>从机直接搜索标的数据</p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>_主从容错切换迁移</title>
    <url>/posts/58353.html</url>
    <content><![CDATA[<h2 id="主从容错切换迁移"><a href="#主从容错切换迁移" class="headerlink" title="_主从容错切换迁移"></a>_主从容错切换迁移</h2><h4 id="进入redis集群"><a href="#进入redis集群" class="headerlink" title="进入redis集群"></a>进入redis集群</h4><blockquote>
<p>注意：进入集群环境后，不能使用单机版的<code>redis-cli -p 6381</code></p>
</blockquote>
<p>因为这样会在增加数据时有<code>error</code>报错出现</p>
<figure>
    <a href="../assets/img/2022-08-25-_主从容错切换迁移.assets\image-20220509103958088.png"><img src="../assets/img/2022-08-25-_主从容错切换迁移.assets\image-20220509103958088.png"></a>
</figure>


<p>使用<code>set k1 v1</code>错误是因为1号主机里面的编号是0到5460，超过了这个范围就会报错</p>
<blockquote>
<p>正确进入的方法<code>redis-cli -p 6381 -c</code></p>
<p>-c 的作用是优化路由</p>
</blockquote>
<figure>
    <a href="../assets/img/2022-08-25-_主从容错切换迁移.assets\image-20220509104855415.png"><img src="../assets/img/2022-08-25-_主从容错切换迁移.assets\image-20220509104855415.png"></a>
</figure>


<font color="green">注：FLUSHALL：作用是清除之前添加的记录</font>

<h4 id="集群检查"><a href="#集群检查" class="headerlink" title="集群检查"></a>集群检查</h4><blockquote>
<p>redis-cli —cluster check 8.142.144.75:6381</p>
</blockquote>
<font color="green">注：可以进入任意一台主机</font>


<figure>
    <a href="../assets/img/2022-08-25-_主从容错切换迁移.assets\image-20220509135040693.png"><img src="../assets/img/2022-08-25-_主从容错切换迁移.assets\image-20220509135040693.png"></a>
</figure>


<h4 id="主从容错切换迁移-1"><a href="#主从容错切换迁移-1" class="headerlink" title="主从容错切换迁移"></a>主从容错切换迁移</h4><blockquote>
<p>主机宕机，从机自动切换成主机</p>
</blockquote>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>docker 帮助启动类命令（一）</title>
    <url>/posts/16766.html</url>
    <content><![CDATA[<h2 id="docker-帮助启动类命令（一）"><a href="#docker-帮助启动类命令（一）" class="headerlink" title="docker 帮助启动类命令（一）"></a>docker 帮助启动类命令（一）</h2><p>启动docker</p>
<blockquote>
<p>systemctl start docker</p>
</blockquote>
<p>停止docker</p>
<blockquote>
<p>systemctl stop docker</p>
</blockquote>
<p>查看docker状态</p>
<blockquote>
<p>systemctl status docker</p>
</blockquote>
<p>重启 docker，没有任何提示说明启动成功</p>
<blockquote>
<p>systemctl restart docker</p>
</blockquote>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>docker 帮助启动类命令（二）</title>
    <url>/posts/53508.html</url>
    <content><![CDATA[<h2 id="docker-帮助启动类命令（二）"><a href="#docker-帮助启动类命令（二）" class="headerlink" title="docker 帮助启动类命令（二）"></a>docker 帮助启动类命令（二）</h2><p>docker 开机启动</p>
<blockquote>
<p>systemctl enable docker </p>
</blockquote>
<p>查看 docker 概要信息</p>
<blockquote>
<p>docker info</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@iZ8vbfaek3x3ogtpxnpnwfZ /]# docker info<br>Client:<br> Context:    default<br> Debug Mode: false<br> Plugins:<br>  app: Docker App (Docker Inc., v0.9.1-beta3)<br>  buildx: Docker Buildx (Docker Inc., v0.7.1-docker)<br>  scan: Docker Scan (Docker Inc., v0.12.0)<br><br>Server:<br> Containers: 6<br>  Running: 0<br>  Paused: 0<br>  Stopped: 6<br> Images: 5<br> Server Version: 20.10.12<br> Storage Driver: overlay2<br>  Backing Filesystem: extfs<br>  Supports d_type: true<br>  Native Overlay Diff: true<br>  userxattr: false<br> Logging Driver: json-file<br> Cgroup Driver: cgroupfs<br> Cgroup Version: 1<br> Plugins:<br>  Volume: local<br>  Network: bridge host ipvlan macvlan null overlay<br>  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog<br> Swarm: inactive<br> Runtimes: io.containerd.runc.v2 io.containerd.runtime.v1.linux runc<br> Default Runtime: runc<br> Init Binary: docker-init<br> containerd version: 7b11cfaabd73bb80907dd23182b9347b4245eb5d<br> runc version: v1.0.2-0-g52b36a2<br> init version: de40ad0<br> Security Options:<br>  seccomp<br>   Profile: default<br> Kernel Version: 3.10.0-1160.45.1.el7.x86_64<br> Operating System: CentOS Linux 7 (Core)<br> OSType: linux<br> Architecture: x86_64<br> CPUs: 1<br> Total Memory: 1.795GiB<br> Name: iZ8vbfaek3x3ogtpxnpnwfZ<br> ID: NQOP:KCP6:LS6G:K52A:XOQX:E7FG:FEHL:K3QX:NSLP:VY5S:TFX5:UR42<br> Docker Root Dir: /var/lib/docker<br> Debug Mode: false<br> Registry: https://index.docker.io/v1/<br> Labels:<br> Experimental: false<br> Insecure Registries:<br>  127.0.0.0/8<br> Registry Mirrors:<br>  https://qp747t9w.mirror.aliyuncs.com/<br> Live Restore Enabled: false<br><br></code></pre></td></tr></table></figure>
<p>查看 docker 总体帮助文档</p>
<blockquote>
<p>docker —help</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@iZ8vbfaek3x3ogtpxnpnwfZ /]# docker --help<br><br>Usage:  docker [OPTIONS] COMMAND<br><br>A self-sufficient runtime for containers<br><br>Options:<br>      --config string      Location of client config files (default &quot;/root/.docker&quot;)<br>  -c, --context string     Name of the context to use to connect to the daemon (overrides DOCKER_HOST<br>                           env var and default context set with &quot;docker context use&quot;)<br>  -D, --debug              Enable debug mode<br>  -H, --host list          Daemon socket(s) to connect to<br>  -l, --log-level string   Set the logging level (&quot;debug&quot;|&quot;info&quot;|&quot;warn&quot;|&quot;error&quot;|&quot;fatal&quot;) (default &quot;info&quot;)<br>      --tls                Use TLS; implied by --tlsverify<br>      --tlscacert string   Trust certs signed only by this CA (default &quot;/root/.docker/ca.pem&quot;)<br>      --tlscert string     Path to TLS certificate file (default &quot;/root/.docker/cert.pem&quot;)<br>      --tlskey string      Path to TLS key file (default &quot;/root/.docker/key.pem&quot;)<br>      --tlsverify          Use TLS and verify the remote<br>  -v, --version            Print version information and quit<br><br>Management Commands:<br>  app*        Docker App (Docker Inc., v0.9.1-beta3)<br><br><br>查看 docker 命令帮助文档<br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">docker 具体命令 --<span class="hljs-built_in">help</span></span><br><br>```shell<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ /]# docker ps --help<br><br>Usage:  docker ps [OPTIONS]<br><br>List containers<br><br>Options:<br>  -a, --all             Show all containers (default shows just running)<br>  -f, --filter filter   Filter output based on conditions provided<br>      --format string   Pretty-print containers using a Go template<br>  -n, --last int        Show n last created containers (includes all states) (default -1)<br>  -l, --latest          Show the latest created container (includes all states)<br>      --no-trunc        Don&#x27;t truncate output<br>  -q, --quiet           Only display container IDs<br>  -s, --size            Display total file sizes<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ /]#<br><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>docker 镜像（一）</title>
    <url>/posts/55605.html</url>
    <content><![CDATA[<h2 id="镜像（一）"><a href="#镜像（一）" class="headerlink" title="镜像（一）"></a>镜像（一）</h2><h3 id="查询本地主机上的镜像"><a href="#查询本地主机上的镜像" class="headerlink" title="查询本地主机上的镜像"></a>查询本地主机上的镜像</h3><blockquote>
<p>docker images<br>OPTIONS说明：</p>
<ul>
<li><ul>
<li>a    列出本地所有的镜像（含历史镜像）</li>
</ul>
</li>
<li><ul>
<li>q    只显示镜像ID</li>
</ul>
</li>
</ul>
</blockquote>
<h4 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h4><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@iZ8vbfaek3x3ogtpxnpnwfZ /]# docker images<br>REPOSITORY    TAG       IMAGE ID       CREATED        SIZE<br>tomcat        9.0       b8e65a4d736d   4 months ago   680MB<br>tomcat        latest    fb5657adc892   4 months ago   680MB<br>hello-world   latest    feb5d9fea6a5   7 months ago   13.3kB<br>centos        latest    5d0da3dc9764   7 months ago   231MB<br>ubuntu        15.10     9b9cb95443b5   5 years ago    137MB<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ /]#<br></code></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@iZ8vbfaek3x3ogtpxnpnwfZ /]# docker images -a<br>REPOSITORY    TAG       IMAGE ID       CREATED        SIZE<br>tomcat        9.0       b8e65a4d736d   4 months ago   680MB<br>tomcat        latest    fb5657adc892   4 months ago   680MB<br>hello-world   latest    feb5d9fea6a5   7 months ago   13.3kB<br>centos        latest    5d0da3dc9764   7 months ago   231MB<br>ubuntu        15.10     9b9cb95443b5   5 years ago    137MB<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ /]#<br></code></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@iZ8vbfaek3x3ogtpxnpnwfZ /]# docker images -q<br>b8e65a4d736d<br>fb5657adc892<br>feb5d9fea6a5<br>5d0da3dc9764<br>9b9cb95443b5<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ /]#<br><br></code></pre></td></tr></table></figure>
<h3 id="查询镜像仓库是否有该镜像"><a href="#查询镜像仓库是否有该镜像" class="headerlink" title="查询镜像仓库是否有该镜像"></a>查询镜像仓库是否有该镜像</h3><blockquote>
<p>docker search 镜像名称</p>
</blockquote>
<h4 id="举个栗子-1"><a href="#举个栗子-1" class="headerlink" title="举个栗子"></a>举个栗子</h4><p>STARS    点赞数<br>OFFICIAL    官方认证</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@iZ8vbfaek3x3ogtpxnpnwfZ /]# docker search hello-world<br>NAME                                       DESCRIPTION                                     STARS     OFFICIAL               AUTOMATED<br>hello-world                                Hello World! (an example of minimal Dockeriz…   1718      [OK]                 <br>kitematic/hello-world-nginx                A light-weight nginx container that demonstr…   151                            <br></code></pre></td></tr></table></figure>
<h4 id="显示前n条镜像"><a href="#显示前n条镜像" class="headerlink" title="显示前n条镜像"></a>显示前n条镜像</h4><blockquote>
<p>docker search —limit n 镜像名称</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker search --limit 5 redis<br>NAME                     DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED<br>redis                    Redis is an open source key-value store that…   10851     [OK]<br>bitnami/redis            Bitnami Redis Docker Image                      214                  [OK]<br>bitnami/redis-sentinel   Bitnami Docker Image for Redis Sentinel         36                   [OK]<br>circleci/redis           CircleCI images for Redis                       12                   [OK]<br>bitnami/redis-exporter                                                   6<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]#<br><br></code></pre></td></tr></table></figure>
<h3 id="下载安装镜像到本地"><a href="#下载安装镜像到本地" class="headerlink" title="下载安装镜像到本地"></a>下载安装镜像到本地</h3><blockquote>
<p>docker pull 镜像名称：标签版本号</p>
</blockquote>
<p>没有tag就是最新版<br><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker pull redis:6.0.8<br>6.0.8: Pulling from library/redis<br>bb79b6b2107f: Pull complete<br>1ed3521a5dcb: Pull complete<br>5999b99cee8f: Pull complete<br>3f806f5245c9: Pull complete<br>f8a4497572b2: Pull complete<br>eafe3b6b8d06: Pull complete<br>Digest: sha256:21db12e5ab3cc343e9376d655e8eabbdbe5516801373e95a8a9e66010c5b8819<br>Status: Downloaded newer image for redis:6.0.8<br>docker.io/library/redis:6.0.8<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]#<br><br></code></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>docker 镜像（二）</title>
    <url>/posts/18767.html</url>
    <content><![CDATA[<h2 id="镜像（二）"><a href="#镜像（二）" class="headerlink" title="镜像（二）"></a>镜像（二）</h2><h3 id="查看-镜像-容器-数据-卷所占的空间"><a href="#查看-镜像-容器-数据-卷所占的空间" class="headerlink" title="查看 镜像/容器/数据 卷所占的空间"></a>查看 镜像/容器/数据 卷所占的空间</h3><blockquote>
<p>docker system df</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker system df<br>TYPE            TOTAL     ACTIVE    SIZE      RECLAIMABLE<br>Images          6         3         1.173GB   921.1MB (78%)<br>Containers      6         0         4.517MB   4.517MB (100%)<br>Local Volumes   0         0         0B        0B<br>Build Cache     0         0         0B        0B<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]#<br><br></code></pre></td></tr></table></figure>
<h3 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h3><blockquote>
<p>docker rmi 镜像ID</p>
</blockquote>
<p>```shell</p>
<h4 id="如果提示报错"><a href="#如果提示报错" class="headerlink" title="如果提示报错"></a>如果提示报错</h4><p>Error response from daemon: conflict: unable to delete feb5d9fea6a5 (must be forced) - image is being used by stopped container 13111f725991</p>
<p>说明之前运行过这个镜像，生成了容器，需要先删除容器，再删除镜像</p>
<h4 id="使用-f-删除一个"><a href="#使用-f-删除一个" class="headerlink" title="使用 -f 删除一个"></a>使用 -f 删除一个</h4><blockquote>
<p>docker rmi -f 镜像id</p>
</blockquote>
<h4 id="使用-f-删除多个"><a href="#使用-f-删除多个" class="headerlink" title="使用 -f 删除多个"></a>使用 -f 删除多个</h4><blockquote>
<p>xxxxxxxxxx # 没有任何提示说明启动成功[root@iZ8vbfaek3x3ogtpxnpnwfZ /]# systemctl restart docker[root@iZ8vbfaek3x3ogtpxnpnwfZ /]#shell</p>
</blockquote>
<h4 id="使用-f-删除全部"><a href="#使用-f-删除全部" class="headerlink" title="使用 -f 删除全部"></a>使用 -f 删除全部</h4><blockquote>
<p>docker rmi -f $(docker images -qa)</p>
</blockquote>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>redis的3主3从扩容</title>
    <url>/posts/51796.html</url>
    <content><![CDATA[<h2 id="redis的3主3从扩容"><a href="#redis的3主3从扩容" class="headerlink" title="redis的3主3从扩容"></a>redis的3主3从扩容</h2><h4 id="首先添加两个redis"><a href="#首先添加两个redis" class="headerlink" title="首先添加两个redis"></a>首先添加两个redis</h4><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">创建redis-node-7</span><br>docler run -d --name redis-node-7 --net host --privileged=true -v /data/redis/share/redis-node-7:/data redis:6.0.8 --cluster-enabled yes --appendonly yes --port 6387<br><span class="hljs-meta prompt_"># </span><span class="language-bash">创建redis-node-8</span><br>docler run -d --name redis-node-8 --net host --privileged=true -v /data/redis/share/redis-node-8:/data redis:6.0.8 --cluster-enabled yes --appendonly yes --port 6388<br></code></pre></td></tr></table></figure>
<font color="green">注：在阿里云的安全组和防火墙上添加6387,16387 6388,16388四个端口</font>

<h4 id="配置步骤："><a href="#配置步骤：" class="headerlink" title="配置步骤："></a>配置步骤：</h4><h5 id="执行docker-exec-it-redis-node-1-bash进入redis-node-1里面"><a href="#执行docker-exec-it-redis-node-1-bash进入redis-node-1里面" class="headerlink" title="执行docker exec -it redis-node-1 bash进入redis-node-1里面"></a>执行<code>docker exec -it redis-node-1 bash</code>进入redis-node-1里面</h5><h5 id="执行redis-cli-cluster-add-node-8-142-144-75-6387-8-142-144-75-6381"><a href="#执行redis-cli-cluster-add-node-8-142-144-75-6387-8-142-144-75-6381" class="headerlink" title="执行redis-cli --cluster add-node 8.142.144.75:6387 8.142.144.75:6381"></a>执行<code>redis-cli --cluster add-node 8.142.144.75:6387 8.142.144.75:6381</code></h5><figure>
    <a href="../assets/img/2022-08-25-redis3主3从扩容.assets\image-20220509161917941.png"><img src="../assets/img/2022-08-25-redis3主3从扩容.assets\image-20220509161917941.png"></a>
</figure>



<p>6387    新加入的节点</p>
<p>6381    相当于6387的领路人</p>
<h5 id="使用redis-cli-cluster-check-8-142-144-75-6381检查"><a href="#使用redis-cli-cluster-check-8-142-144-75-6381检查" class="headerlink" title="使用redis-cli --cluster check 8.142.144.75:6381检查"></a>使用<code>redis-cli --cluster check 8.142.144.75:6381</code>检查</h5><figure>
    <a href="../assets/img/2022-08-25-redis3主3从扩容.assets\image-20220509162146380.png"><img src="../assets/img/2022-08-25-redis3主3从扩容.assets\image-20220509162146380.png"></a>
</figure>

<h5 id="重新分配槽号"><a href="#重新分配槽号" class="headerlink" title="重新分配槽号"></a>重新分配槽号</h5><blockquote>
<p>redis-cli —cluster reshard IP地址:端口号</p>
</blockquote>
<figure>
    <a href="../assets/img/2022-08-25-redis3主3从扩容.assets\image-20220509164304608.png"><img src="../assets/img/2022-08-25-redis3主3从扩容.assets\image-20220509164304608.png"></a>
</figure>

<font color="red">注：上图的1指的是：对主机数平分16384个节点，16384/主机数（包含想要添加的主机）</font>

<font color="red">注：上图的2指的是：新加入的6387节点的ID</font>

<figure>
    <a href="../assets/img/2022-08-25-redis3主3从扩容.assets\image-20220509164445562.png"><img src="../assets/img/2022-08-25-redis3主3从扩容.assets\image-20220509164445562.png"></a>
</figure>

<font color="red">all：表示全部进行重新分配</font>

<p>在重新加载过程会碰到<code>Do you want to proceed with the proposed reshard plan (yes/no)?</code>一句话，选择yes就可以</p>
<figure>
    <a href="../assets/img/2022-08-25-redis3主3从扩容.assets\image-20220509165333288.png"><img src="../assets/img/2022-08-25-redis3主3从扩容.assets\image-20220509165333288.png"></a>
</figure>

<h5 id="检查集群情况"><a href="#检查集群情况" class="headerlink" title="检查集群情况"></a>检查集群情况</h5><figure>
    <a href="../assets/img/2022-08-25-redis3主3从扩容.assets\image-20220509165711542.png"><img src="../assets/img/2022-08-25-redis3主3从扩容.assets\image-20220509165711542.png"></a>
</figure>

<h5 id="为主节点6387分配从节点6388"><a href="#为主节点6387分配从节点6388" class="headerlink" title="为主节点6387分配从节点6388"></a>为主节点6387分配从节点6388</h5><blockquote>
<p>redis-cli —cluster add-node ip:新slave端口 ip:新master端口 —cluster-slave —cluster-master-id 新主机节点ID</p>
</blockquote>
<figure>
    <a href="../assets/img/2022-08-25-redis3主3从扩容.assets\image-20220509171001762.png"><img src="../assets/img/2022-08-25-redis3主3从扩容.assets\image-20220509171001762.png"></a>
</figure>

<h5 id="检查集群情况-1"><a href="#检查集群情况-1" class="headerlink" title="检查集群情况"></a>检查集群情况</h5><figure>
    <a href="../assets/img/2022-08-25-redis3主3从扩容.assets\image-20220509171227600.png"><img src="../assets/img/2022-08-25-redis3主3从扩容.assets\image-20220509171227600.png"></a>
</figure>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>redis的4主4从缩容</title>
    <url>/posts/622.html</url>
    <content><![CDATA[<h2 id="redis的4主4从缩容"><a href="#redis的4主4从缩容" class="headerlink" title="redis的4主4从缩容"></a>redis的4主4从缩容</h2><h5 id="目的：6387和6388下线"><a href="#目的：6387和6388下线" class="headerlink" title="目的：6387和6388下线"></a>目的：6387和6388下线</h5><h5 id="检查集群情况获得6388的节点ID"><a href="#检查集群情况获得6388的节点ID" class="headerlink" title="检查集群情况获得6388的节点ID"></a>检查集群情况获得6388的节点ID</h5><blockquote>
<p>redis-cli —cluster check 8.142.144.75:6382</p>
</blockquote>
<figure>
    <a href="../assets/img/2022-08-25-redis的4主4从缩容.assets\image-20220509172354404.png"><img src="../assets/img/2022-08-25-redis的4主4从缩容.assets\image-20220509172354404.png"></a>
</figure>

<h5 id="从集群中将4号从节点6388删除"><a href="#从集群中将4号从节点6388删除" class="headerlink" title="从集群中将4号从节点6388删除"></a>从集群中将4号从节点6388删除</h5><blockquote>
<p>redis-cli —cluster del-node ip:从机端口 从机6388节点ID</p>
</blockquote>
<figure>
    <a href="../assets/img/2022-08-25-redis的4主4从缩容.assets\image-20220509172850125.png"><img src="../assets/img/2022-08-25-redis的4主4从缩容.assets\image-20220509172850125.png"></a>
</figure>

<h5 id="使用redis-cli-cluster-check-8-142-144-75-6382进行集群检查"><a href="#使用redis-cli-cluster-check-8-142-144-75-6382进行集群检查" class="headerlink" title="使用redis-cli --cluster check 8.142.144.75:6382进行集群检查"></a>使用<code>redis-cli --cluster check 8.142.144.75:6382</code>进行集群检查</h5><figure>
    <a href="../assets/img/2022-08-25-redis的4主4从缩容.assets\image-20220509173130464.png"><img src="../assets/img/2022-08-25-redis的4主4从缩容.assets\image-20220509173130464.png"></a>
</figure>

<p>6388删除成功</p>
<h5 id="将6387的槽号清空，重新分配"><a href="#将6387的槽号清空，重新分配" class="headerlink" title="将6387的槽号清空，重新分配"></a>将6387的槽号清空，重新分配</h5><p>本例将清出来的槽号都给6381</p>
<p>使用<code>redis-cli --cluster reshard ip:6381</code>进行节点的重组</p>
<figure>
    <a href="../assets/img/2022-08-25-redis的4主4从缩容.assets\image-20220509174702772.png"><img src="../assets/img/2022-08-25-redis的4主4从缩容.assets\image-20220509174702772.png"></a>
</figure>

<font color="red">注：</font>

<p>上图中1输入的4096是6387主机所拥有的槽点数量，把他们全部拿出来分掉</p>
<p>上图的2输入的ID是<font color="red">接收</font>6387主机所放出的槽点数的主机id</p>
<p>上图中3输入的ID是<font color="red">放出</font>槽点数的6387主机的id</p>
<p>上图中4输入的done指的是已经输入完所有的节点</p>
<h5 id="使用redis-cli-cluster-check-8-142-144-75-6382进行集群检查-1"><a href="#使用redis-cli-cluster-check-8-142-144-75-6382进行集群检查-1" class="headerlink" title="使用redis-cli --cluster check 8.142.144.75:6382进行集群检查"></a>使用<code>redis-cli --cluster check 8.142.144.75:6382</code>进行集群检查</h5><figure>
    <a href="../assets/img/2022-08-25-redis的4主4从缩容.assets\image-20220509175720067.png"><img src="../assets/img/2022-08-25-redis的4主4从缩容.assets\image-20220509175720067.png"></a>
</figure>

<h5 id="删除6387节点的主机"><a href="#删除6387节点的主机" class="headerlink" title="删除6387节点的主机"></a>删除6387节点的主机</h5><blockquote>
<p>redis-cli —cluster del-node ip:端口 6387节点ID</p>
</blockquote>
<figure>
    <a href="../assets/img/2022-08-25-redis的4主4从缩容.assets\image-20220509180111949.png"><img src="../assets/img/2022-08-25-redis的4主4从缩容.assets\image-20220509180111949.png"></a>
</figure>

<h5 id="使用redis-cli-cluster-check-8-142-144-75-6382进行集群检查-2"><a href="#使用redis-cli-cluster-check-8-142-144-75-6382进行集群检查-2" class="headerlink" title="使用redis-cli --cluster check 8.142.144.75:6382进行集群检查"></a>使用<code>redis-cli --cluster check 8.142.144.75:6382</code>进行集群检查</h5><figure>
    <a href="../assets/img/2022-08-25-redis的4主4从缩容.assets\image-20220509180222538.png"><img src="../assets/img/2022-08-25-redis的4主4从缩容.assets\image-20220509180222538.png"></a>
</figure>]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>使用docker安装常用软件：mysql</title>
    <url>/posts/58312.html</url>
    <content><![CDATA[<h2 id="使用docker安装常用软件：mysql"><a href="#使用docker安装常用软件：mysql" class="headerlink" title="使用docker安装常用软件：mysql"></a>使用docker安装常用软件：mysql</h2><h3 id="以mysql-5-7为例"><a href="#以mysql-5-7为例" class="headerlink" title="以mysql 5.7为例"></a>以mysql 5.7为例</h3><p>使用<code>docker pull mysql:5.7</code>拉取mysql 5.7镜像</p>
<h3 id="使用镜像创建容器"><a href="#使用镜像创建容器" class="headerlink" title="使用镜像创建容器"></a>使用镜像创建容器</h3><h4 id="简单版"><a href="#简单版" class="headerlink" title="简单版"></a>简单版</h4><p>使用<code>docker run -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7</code>运行镜像创建容器</p>
<blockquote>
<p>因为linux系统自己装了mysql，避免端口冲突，先运行ps -ef|grep mysql查询</p>
</blockquote>
<p>使用<code>docker ps</code>查询容器编号</p>
<p>使用<code>docker exec -it 容器编号 bash</code>进入mysql容器</p>
<p>使用<code>mysql -uroot -p</code>,输入密码，登录mysql</p>
<h5 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h5><p><code>show databases</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs mys">mysql&gt; show databases<br>    -&gt; ;<br>+--------------------+<br>| Database           |<br>+--------------------+<br>| information_schema |<br>| mysql              |<br>| performance_schema |<br>| sys                |<br>+--------------------+<br></code></pre></td></tr></table></figure>
<h5 id="中文乱码问题"><a href="#中文乱码问题" class="headerlink" title="中文乱码问题"></a>中文乱码问题</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs mysql">INSERT INTo t1 VALUES(3, &quot;张三&quot;);<br>---<br>INSERT INTo t1 VALUES(3, &quot;张三&quot;)<br>&gt; 1366 - Incorrect string value: &#x27;\xE5\xBC\xA0\xE4\xB8\x89&#x27; for column &#x27;name&#x27; at row 1<br>&gt; 时间: 0.038s<br></code></pre></td></tr></table></figure>
<font color='green'>因为docker默认编码字符集隐患</font>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs mysql">mysql&gt; SHOW VARIABLES LIKE &#x27;character%&#x27;;<br>+--------------------------+----------------------------+<br>| Variable_name            | Value                      |<br>+--------------------------+----------------------------+<br>| character_set_client     | latin1                     |<br>| character_set_connection | latin1                     |<br>| character_set_database   | latin1                     |<br>| character_set_filesystem | binary                     |<br>| character_set_results    | latin1                     |<br>| character_set_server     | latin1                     |<br>| character_set_system     | utf8                       |<br>| character_sets_dir       | /usr/share/mysql/charsets/ |<br>+--------------------------+----------------------------+<br>8 rows in set (0.00 sec)<br>mysql&gt;<br></code></pre></td></tr></table></figure>
<h4 id="解决中文乱码问题"><a href="#解决中文乱码问题" class="headerlink" title="解决中文乱码问题"></a>解决中文乱码问题</h4><p>在宿主机的<code>/ggls/mysql/conf</code>目录下<code>vim my.cnf</code>文件，通过容器卷同步给容器实例</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[client]<br>default_character_set=utf8<br>[mysqld]<br>collation_server = utf8_general_ci<br>character_set_server = utf8<br></code></pre></td></tr></table></figure>
<font color="green">改完后重启mysql实例</font>

<h5 id="服务器输入SHOW-VARIABLES-LIKE-39-character-39-验证"><a href="#服务器输入SHOW-VARIABLES-LIKE-39-character-39-验证" class="headerlink" title="服务器输入SHOW VARIABLES LIKE &#39;character%&#39;;验证"></a>服务器输入<code>SHOW VARIABLES LIKE &#39;character%&#39;;</code>验证</h5><font color="red">docker安装好并run出容器后，先修改字符集编码在创建mysql库</font>

<h5 id="删库备份问题"><a href="#删库备份问题" class="headerlink" title="删库备份问题"></a>删库备份问题</h5><font color="red">只要本机上面的容器卷存在，容器卷位置没有改变的情况下，就算容器被删除，重新打开后，创建的数据库，表都还存在</font>


<p><strong>工作使用版启动容器方法</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">docker run -d -p 3306:3306 --privileged=true<br>-v /ggls/mysql/log:/var/log/mysql<br>-v /ggls/mysql/data:/var/lib/mysql<br>-v /ggls/mysql/conf:/etc/mysql/conf.d<br>-e MYSQL_ROOT_PASSWORD=123456<br>--name mysql <br>mysql:5.7<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>使用docker安装常用软件：redis</title>
    <url>/posts/32161.html</url>
    <content><![CDATA[<h2 id="使用docker安装常用软件：redis"><a href="#使用docker安装常用软件：redis" class="headerlink" title="使用docker安装常用软件：redis"></a>使用docker安装常用软件：redis</h2><p>使用<code>docker pull redis:6.0.8</code>拉取redis:6.0.8镜像</p>
<p><strong>创建容器</strong></p>
<blockquote>
<p>容器卷要加入<code>--privileged=true</code></p>
</blockquote>
<p>在宿主机下新建目录<code>mkdir -p /app/redis</code></p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>使用docker安装常用软件：tomcat</title>
    <url>/posts/50699.html</url>
    <content><![CDATA[<h2 id="使用docker安装常用软件：tomcat"><a href="#使用docker安装常用软件：tomcat" class="headerlink" title="使用docker安装常用软件：tomcat"></a>使用docker安装常用软件：tomcat</h2><h4 id="安装流程"><a href="#安装流程" class="headerlink" title="安装流程"></a>安装流程</h4><p>首先把tomcat在镜像源中<code>pull</code>下来，使用<code>docker images</code> 查看镜像</p>
<p>使用<code>docker run -d -p 8080:8080 tomcat:9.0</code>新建容器运行tomcat</p>
<blockquote>
<p>运行后使用本地PC使用阿里云的ip和端口访问docker上面的<code>tomcat</code></p>
</blockquote>
<figure>
    <a href="../assets/img/2022-08-25-使用docker安装常用软件：tomcat.assets\\image-20220429095205744.jpg"><img src="../assets/img/2022-08-25-使用docker安装常用软件：tomcat.assets\\image-20220429095205744.jpg"></a>
</figure>



<h4 id="这是什么原因呢"><a href="#这是什么原因呢" class="headerlink" title="这是什么原因呢"></a>这是什么原因呢</h4><p>使用<code>docker ps</code>查询到容器编号,<code>docker exec -it 容器编号 bash</code> 打开容器</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker ps<br>CONTAINER ID   IMAGE          COMMAND             CREATED         STATUS         PORTS                                       NAMES<br>c52ab6b8b8df   b8e65a4d736d   &quot;catalina.sh run&quot;   7 minutes ago   Up 7 minutes   0.0.0.0:8080-&gt;8080/tcp, :::8080-&gt;8080/tcp   inspiring_bohr<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker exec -it c52ab6b8b8df bash<br>root@c52ab6b8b8df:/usr/local/tomcat#<br></code></pre></td></tr></table></figure>
<p>使用<code>ls-l</code>查看文件列表</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">root@c52ab6b8b8df:/usr/local/tomcat# ls -l<br>total 156<br>-rw-r--r-- 1 root root 18970 Dec  2 14:30 BUILDING.txt<br>-rw-r--r-- 1 root root  6210 Dec  2 14:30 CONTRIBUTING.md<br>-rw-r--r-- 1 root root 57092 Dec  2 14:30 LICENSE<br>-rw-r--r-- 1 root root  2333 Dec  2 14:30 NOTICE<br>-rw-r--r-- 1 root root  3378 Dec  2 14:30 README.md<br>-rw-r--r-- 1 root root  6898 Dec  2 14:30 RELEASE-NOTES<br>-rw-r--r-- 1 root root 16507 Dec  2 14:30 RUNNING.txt<br>drwxr-xr-x 2 root root  4096 Dec 22 17:16 bin<br>drwxr-xr-x 1 root root  4096 Apr 29 01:48 conf<br>drwxr-xr-x 2 root root  4096 Dec 22 17:16 lib<br>drwxrwxrwx 1 root root  4096 Apr 29 01:48 logs<br>drwxr-xr-x 2 root root  4096 Dec 22 17:16 native-jni-lib<br>drwxrwxrwx 2 root root  4096 Dec 22 17:16 temp<br>drwxr-xr-x 2 root root  4096 Dec 22 17:16 webapps<br>drwxr-xr-x 7 root root  4096 Dec  2 14:30 webapps.dist<br>drwxrwxrwx 2 root root  4096 Dec  2 14:30 work<br>root@c52ab6b8b8df:/usr/local/tomcat#<br></code></pre></td></tr></table></figure>
<p>从列表可以看到有两个文件夹<code>webapps</code>和<code>webapps.dist</code>，数据全部在<code>webapps.dist</code>里面，需要将<code>webapps</code>删除，把<code>webapps.dist</code>重命名成<code>webapps</code>即可访问</p>
<p>使用<code>rm -rf webapps</code>删除<code>webapps</code>文件夹</p>
<p>使用<code>mv webapps.dist webapps</code>重命名</p>
<p>再次使用本地访问</p>
<figure>
    <a href="../assets/img/2022-08-25-使用docker安装常用软件：tomcat.assets/image-20220429102011983.png"><img src="../assets/img/2022-08-25-使用docker安装常用软件：tomcat.assets/image-20220429102011983.png"></a>
</figure>


<h4 id="使用免修改版的tomcat"><a href="#使用免修改版的tomcat" class="headerlink" title="使用免修改版的tomcat"></a>使用免修改版的tomcat</h4><blockquote>
<p>docker pull billygoo/tomcat8-jdk8</p>
<p>docker run -d -p 8080:8080 —name tomcat8 billygoo/tomcat8-jdk8</p>
</blockquote>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>容器数据卷</title>
    <url>/posts/1351.html</url>
    <content><![CDATA[<h2 id="容器数据卷"><a href="#容器数据卷" class="headerlink" title="容器数据卷"></a>容器数据卷</h2><h4 id="运行带有容器数据卷的容器实例"><a href="#运行带有容器数据卷的容器实例" class="headerlink" title="运行带有容器数据卷的容器实例"></a>运行带有容器数据卷的容器实例</h4><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">docker run -it --privileged=true -v /宿主机绝对路径目录:/容器内目录 镜像名<br></code></pre></td></tr></table></figure>
<h4 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h4><blockquote>
<p> 宿主vs容器之间映射添加容器卷</p>
</blockquote>
<ul>
<li>使用<code>docker run -it --privileged=true -v /宿主机绝对路径目录:/容器内目录 镜像名</code> 添加</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">docker run -it --privileged=true -v /tmp/host_data:/tmp/docker_data --name=ui ubuntu<br></code></pre></td></tr></table></figure>
<ul>
<li>查看数据卷是否挂载成功</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">`在容器内部创建一个dockerin.txt文件<br>root@48955acecd79:/tmp/docker_data# touch dockerin.txt<br>root@48955acecd79:/tmp/docker_data# ll<br>total 8<br>drwxr-xr-x 2 root root 4096 Apr 28 09:21 ./<br>drwxrwxrwt 1 root root 4096 Apr 28 09:18 ../<br>-rw-r--r-- 1 root root    0 Apr 28 09:21 dockerin.txt<br>`在宿主机目录下查看该文件<br>root@48955acecd79:/tmp/docker_data# [root@iZ8vbfaek3x3ogtpxnpnwfZ ~]#<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]#<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]#<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# cd /tmp/host_data/<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ host_data]# ll<br>total 0<br>-rw-r--r-- 1 root root 0 Apr 28 17:21 dockerin.txt<br>`在宿主机创建一个文件<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ host_data]# touch host.txt<br><br>`在容器查看文件<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ host_data]# docker exec -it 48955acecd79 bash<br>root@48955acecd79:/# cd /tmp/docker_data/<br><br>+ 容器和宿主机之间数据共享<br><br>[root@iZ8vbfaek3x3ogtpxnpnwfZ /]# docker ps<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ /]#<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ /]# docker commit -m=&quot;vim cmd add ok&quot; -a=&quot;ggls&quot; 356e32244966 ggls/ubuntu:1.5sha256:87e99e19eeef47d4f0daaffc8498690614e0d95eae60ef61b439abe97b62fd16[root@iZ8vbfaek3x3ogtpxnpnwfZ /]# docker images<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ /]# shell<br><br>  + 主机修改，docker同步获得<br><br>  + docker容器stop，主机修改，docker容器重启数据同步<br><br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker ps<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker ps -a -q | xargs docker rm -f562278524cdacdee90a8c77d<br><br>+ 默认是可读可写的 <br><br>```shell<br>docker run -it --privileged=true -v /宿主机绝对路径目录:/容器内目录:rw 镜像名<br></code></pre></td></tr></table></figure>
<ul>
<li>修改成容器只读</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">docker run -it --privileged=true -v /宿主机绝对路径目录:/容器内目录:ro 镜像名<br></code></pre></td></tr></table></figure>
<blockquote>
<p>卷的继承和共享</p>
</blockquote>
<ul>
<li>容器1完成和宿主机的映射<ul>
<li>容器2继承容器1，则容器2操作后同步到容器1和宿主机</li>
<li>宿主机操作同步到容器1，容器2</li>
<li>容器1操作同步到宿主机，容器2</li>
</ul>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">docker run -it --privileged=true --volumes-from 父类 --name u2 ubuntu<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>容器（三）</title>
    <url>/posts/62565.html</url>
    <content><![CDATA[<h2 id="容器（三）"><a href="#容器（三）" class="headerlink" title="容器（三）"></a>容器（三）</h2><h3 id="创建后台守护式容器"><a href="#创建后台守护式容器" class="headerlink" title="创建后台守护式容器"></a>创建后台守护式容器</h3><p>(问题)：使用docker run -d ubuntu命令启动后台模式的容器ubuntu，然后用docker ps 查询提示没有找到运行的容器</p>
<blockquote>
<p>Docker容器后台运行就必须有一个前台进程，不然容器没事做，会自杀</p>
</blockquote>
<p>解决方法：将运行的程序以前台进程的方式运行<br>常见方式：命令行模式</p>
<h3 id="查看容器日志"><a href="#查看容器日志" class="headerlink" title="查看容器日志"></a>查看容器日志</h3><blockquote>
<p>docker logs 容器id</p>
</blockquote>
<h3 id="查看容器的进程"><a href="#查看容器的进程" class="headerlink" title="查看容器的进程"></a>查看容器的进程</h3><blockquote>
<p>docker top 容器id</p>
</blockquote>
<h3 id="查看容器内部细节"><a href="#查看容器内部细节" class="headerlink" title="查看容器内部细节"></a>查看容器内部细节</h3><blockquote>
<p>docker inspect 容器id</p>
</blockquote>
<h3 id="重新进入"><a href="#重新进入" class="headerlink" title="重新进入"></a>重新进入</h3><ul>
<li><p>进入正在运行的容器并以命令行交互</p>
<blockquote>
<p>docker exec -it 容器id bashShell</p>
</blockquote>
</li>
<li><p>重新进入</p>
<blockquote>
<p>docker attach 容器id</p>
</blockquote>
</li>
</ul>
<p>（区别）<br>attach直接进入容器启动命令的终端，不会启动新的进程，用exit退出，会导致容器的停止<br>exec是在容器中打开新的终端，并且可以启动新的进程，用exit退出，不会导致容器的停止</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker ps<br>CONTAINER ID   IMAGE     COMMAND   CREATED          STATUS          PORTS     NAME<br>S562278524cda   ubuntu    &quot;bash&quot;    20 minutes ago   Up 20 minutes             loving_dewdn<br>eycdee90a8c77d   ubuntu    &quot;bash&quot;    45 minutes ago   Up 15 minutes             ubuntu<br><br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker ps -a -q | xargs docker rm -f562278524cdacdee90a8c77d<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker ps<br>CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES<br><br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]#​shell<br></code></pre></td></tr></table></figure>
<h4 id="从容器内拷贝文件到主机"><a href="#从容器内拷贝文件到主机" class="headerlink" title="从容器内拷贝文件到主机"></a>从容器内拷贝文件到主机</h4><blockquote>
<p>docker cp 容器id:容器地址  主机地址</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker cp 26191ecfb227:/tmp/a.txt /opt/ab.txt<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# cd /opt/<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ opt]# ll<br>total 8<br>-rw-r--r-- 1 root root    0 Apr 27 15:13 ab.txt<br>drwx--x--x 4 root root 4096 Dec 28 16:17 containerd<br>drwxr-xr-x 4 root root 4096 Dec  8 16:49 downfile<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ opt]#<br><br></code></pre></td></tr></table></figure>
<h4 id="导入和导出容器"><a href="#导入和导出容器" class="headerlink" title="导入和导出容器"></a>导入和导出容器</h4><ul>
<li><p>export 导出容器的内容留作为一个tar归档文件[对应import命令]</p>
<blockquote>
<p>docker export 容器id &gt; 自定义文件名.tar</p>
</blockquote>
</li>
<li><p>import从tar包中的内容创建一个新的文件系统再导入为镜像[export]</p>
<blockquote>
<p>cat 文件名.tar | docker import - 自定义/镜像名:3.5（3.5是自定义）</p>
</blockquote>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@iZ8vbfaek3x3ogtpxnpnwfZ opt]# docker ps<br>CONTAINER ID   IMAGE     COMMAND   CREATED         STATUS         PORTS     NAMES<br>26191ecfb227   ubuntu    &quot;bash&quot;    7 minutes ago   Up 7 minutes             quirky_jemison<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ opt]# docker export 26191ecfb227 &gt; abcd.tar<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ opt]# ll<br>total 73408<br>-rw-r--r-- 1 root root 75158016 Apr 27 15:21 abcd.tar<br>-rw-r--r-- 1 root root        0 Apr 27 15:13 ab.txt<br>drwx--x--x 4 root root     4096 Dec 28 16:17 containerd<br>drwxr-xr-x 4 root root     4096 Dec  8 16:49 downfile<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ opt]#<br><br></code></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@iZ8vbfaek3x3ogtpxnpnwfZ opt]# docker ps<br>CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ opt]# ll<br>total 73408<br>-rw-r--r-- 1 root root 75158016 Apr 27 15:21 abcd.tar<br>-rw-r--r-- 1 root root        0 Apr 27 15:13 ab.txt<br>drwx--x--x 4 root root     4096 Dec 28 16:17 containerd<br>drwxr-xr-x 4 root root     4096 Dec  8 16:49 downfile<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ opt]# cat abcd.tar | docker import - mytest/ubuntu:3.5<br>sha256:a92a27affdde8ad7f07bef2fdc0f04b8e3aeacb9d6919a77da2921d552ab940b<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ opt]# docker images<br>REPOSITORY      TAG       IMAGE ID       CREATED          SIZE<br>mytest/ubuntu   3.5       a92a27affdde   11 seconds ago   72.8MB<br>tomcat          9.0       b8e65a4d736d   4 months ago     680MB<br>ubuntu          latest    ba6acccedd29   6 months ago     72.8MB<br>redis           6.0.8     16ecd2772934   18 months ago    104MB<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ opt]# docker run -it mytest/ubuntu:3.5 bash<br>root@356e32244966:/#<br>root@356e32244966:/# cd /tmp/<br>root@356e32244966:/tmp# ll<br>total 8<br>drwxrwxrwt 2 root root 4096 Apr 27 07:13 ./<br>drwxr-xr-x 1 root root 4096 Apr 27 07:32 ../<br>-rw-r--r-- 1 root root    0 Apr 27 07:13 a.txt<br>root@356e32244966:/tmp#<br><br></code></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>容器（一）</title>
    <url>/posts/26726.html</url>
    <content><![CDATA[<h2 id="容器（一）"><a href="#容器（一）" class="headerlink" title="容器（一）"></a>容器（一）</h2><h3 id="新建和启动容器"><a href="#新建和启动容器" class="headerlink" title="新建和启动容器"></a>新建和启动容器</h3><h4 id="OPTIONS说明："><a href="#OPTIONS说明：" class="headerlink" title="OPTIONS说明："></a>OPTIONS说明：</h4><ul>
<li>— name = “容器新名称”    为容器制定一个名称</li>
<li>-d  后台运行容器并返回容器id， 即启动守护式容器（后台运行）</li>
<li>-i  以交互模式运行容器，通常与 -t 同时使用</li>
<li>-t  为容器重新分配一个伪输入终端，通常与 -i 连用，也就是启动交互式容器</li>
<li>-P  随机端口映射</li>
<li>-p  指定端口映射</li>
</ul>
<h4 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h4><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker images<br>REPOSITORY   TAG       IMAGE ID       CREATED         SIZE<br>tomcat       9.0       b8e65a4d736d   4 months ago    680MB<br>redis        6.0.8     16ecd2772934   18 months ago   104MB<br>ubuntu       15.10     9b9cb95443b5   5 years ago     137MB<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker run -it ubuntu:15.10 /bin/bash<br>root@4fb757f69adb:/# ps -ef<br>UID        PID  PPID  C STIME TTY          TIME CMD<br>root         1     0  0 03:26 pts/0    00:00:00 /bin/bash<br>root        11     1  0 03:26 pts/0    00:00:00 ps -ef<br>root@4fb757f69adb:/# ls<br>bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var<br>root@4fb757f69adb:/# exit<br>exit<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]#<br></code></pre></td></tr></table></figure>
<p>docker run -it ubuntu:15.10 /bin/bash<br>/bin/bash    希望有交互式shell 就用/bin/bash</p>
<h3 id="查询正在运行的容器"><a href="#查询正在运行的容器" class="headerlink" title="查询正在运行的容器"></a>查询正在运行的容器</h3><blockquote>
<p>docker ps [OPTIONS]</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker ps -a<br>CONTAINER ID   IMAGE     COMMAND       CREATED         STATUS                     PORTS     NAMES<br>cdee90a8c77d   ubuntu    &quot;bash&quot;        3 minutes ago   Exited (0) 3 minutes ago             ubuntu<br>0dcaa91afc0e   ubuntu    &quot;/bin/bush&quot;   5 minutes ago   Created                              myubuntu<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]#<br></code></pre></td></tr></table></figure>
<p>OPTIONS:</p>
<ul>
<li>-a  展示所有容器，包含历史用过容器</li>
<li>-d  只展示容器id</li>
<li>-l  显示最近创建的容器</li>
<li>-n  展示最近创建的前n个容器<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">List containers<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker ps -n 1<br>CONTAINER ID   IMAGE     COMMAND   CREATED          STATUS                      PORTS     NAMES<br>cdee90a8c77d   ubuntu    &quot;bash&quot;    17 minutes ago   Exited (0) 17 minutes ago             ubuntu<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker ps<br>CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker ps -an 1<br>CONTAINER ID   IMAGE     COMMAND   CREATED          STATUS                      PORTS     NAMES<br>cdee90a8c77d   ubuntu    &quot;bash&quot;    17 minutes ago   Exited (0) 17 minutes ago             ubuntu<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker ps -an 2<br>CONTAINER ID   IMAGE     COMMAND       CREATED          STATUS                      PORTS     NAMES<br>cdee90a8c77d   ubuntu    &quot;bash&quot;        17 minutes ago   Exited (0) 17 minutes ago             ubuntu<br>0dcaa91afc0e   ubuntu    &quot;/bin/bush&quot;   19 minutes ago   Created                               myubuntu<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]#<br><br></code></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="退出容器"><a href="#退出容器" class="headerlink" title="退出容器"></a>退出容器</h3><ul>
<li>exit</li>
</ul>
<p>run进入容器，exit退出容器， 容器停止</p>
<ul>
<li>ctrl + p + q</li>
</ul>
<p>run进入容器，exit退出容器， 容器不停止<br><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker run -it ubuntu bash<br>root@562278524cda:/# [root@iZ8vbfaek3x3ogtpxnpnwfZ ~]#<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]#<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker ps<br>CONTAINER ID   IMAGE     COMMAND   CREATED          STATUS          PORTS     NAMES<br>562278524cda   ubuntu    &quot;bash&quot;    16 seconds ago   Up 15 seconds             loving_dewdney<br></code></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>本地镜像发布到私有库</title>
    <url>/posts/42395.html</url>
    <content><![CDATA[<h3 id="本地镜像发布到私有库"><a href="#本地镜像发布到私有库" class="headerlink" title="本地镜像发布到私有库"></a>本地镜像发布到私有库</h3><blockquote>
<p><strong>步骤</strong></p>
</blockquote>
<ul>
<li>下载Docker Registry</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">docker pull registry<br></code></pre></td></tr></table></figure>
<ul>
<li>运行私有库 Registry，相当于本地有Docker Registry</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">docker run -d -p 5000:5000 -v/ggls/myregistry/:/tmp/registry --privileged=true registry<br></code></pre></td></tr></table></figure>
<ul>
<li><p>新启动<code>ubuntu</code>容器，新增<code>ifconfig</code>命令</p>
<ul>
<li>​    进入容器中输入<code>apt-get update</code>命令</li>
<li>​    输入<code>apt-get install net-tools</code>命令</li>
<li>xxxxxxxxxx [root@iZ8vbfaek3x3ogtpxnpnwfZ /]# docker psCONTAINER ID   IMAGE               COMMAND   CREATED       STATUS       PORTS     NAMES356e32244966   mytest/ubuntu:3.5   “bash”    2 hours ago   Up 2 hours             elated_aryabhata[root@iZ8vbfaek3x3ogtpxnpnwfZ /]#[root@iZ8vbfaek3x3ogtpxnpnwfZ /]# docker commit -m=”vim cmd add ok” -a=”ggls” 356e32244966 ggls/ubuntu:1.5sha256:87e99e19eeef47d4f0daaffc8498690614e0d95eae60ef61b439abe97b62fd16[root@iZ8vbfaek3x3ogtpxnpnwfZ /]# docker imagesREPOSITORY      TAG       IMAGE ID       CREATED         SIZEggls/ubuntu     1.5       87e99e19eeef   7 seconds ago   176MBmytest/ubuntu   3.5       a92a27affdde   2 hours ago     72.8MBtomcat          9.0       b8e65a4d736d   4 months ago    680MBubuntu          latest    ba6acccedd29   6 months ago    72.8MBredis           6.0.8     16ecd2772934   18 months ago   104MB[root@iZ8vbfaek3x3ogtpxnpnwfZ /]# shell</li>
</ul>
</li>
<li><p>容器外部执行<code>docker commit -m=&quot;ifconfig cmd add&quot; -a=&quot;ggls&quot; ffcc5edf5071 ubuntu:1.6</code>命令</p>
</li>
<li><p>curl验证私服库上有什么镜像</p>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">curl -XGET http://8.142.144.75:5000/v2/_catalog<br></code></pre></td></tr></table></figure>
<ul>
<li>将新镜像修改为符合私服库格式的镜像</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">docker tag 镜像:Tag Host:Port/Repository:Tag<br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash">docker tag ubuntu:1.6 8.142.144.75:5000/ubuntu:1.3</span><br></code></pre></td></tr></table></figure>
<ul>
<li><p>修改配置文件使之支持http</p>
<blockquote>
<p>docker 默认不允许<code>http</code>方式推送镜像，通过此配置取消这个限制，若不生效，重启docker</p>
</blockquote>
<ul>
<li>使用命令<code>vim /etc/docker/daemon.json</code>打开配置文件</li>
<li>在阿里云加速后面新增一个<code>json</code></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">&#123;<br>  &quot;registry-mirrors&quot;: [&quot;https://qp747t9w.mirror.aliyuncs.com&quot;],<br>  &quot;insecure-registries&quot;: [&quot;8.142.144.75:5000&quot;]<br>&#125;<br></code></pre></td></tr></table></figure>
<ul>
<li>重启docker，重启docker私服仓库</li>
</ul>
</li>
<li><p>push推送到私服库</p>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">docker push 符合私服库格式的镜像名称:tag<br></code></pre></td></tr></table></figure>
<ul>
<li>curl验证私服库上有什么镜像</li>
<li><code>pull</code>到本地并运行</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">docker pull 8.142.144.75:5000/ubuntu:1.6<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>容器（二）</title>
    <url>/posts/63516.html</url>
    <content><![CDATA[<h2 id="容器（二）"><a href="#容器（二）" class="headerlink" title="容器（二）"></a>容器（二）</h2><h3 id="启动已经停止运行的容器"><a href="#启动已经停止运行的容器" class="headerlink" title="启动已经停止运行的容器"></a>启动已经停止运行的容器</h3><blockquote>
<p>docker start 容器id/容器名</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker ps -a<br>CONTAINER ID   IMAGE     COMMAND       CREATED          STATUS                      PORTS     NAMES<br>562278524cda   ubuntu    &quot;bash&quot;        4 minutes ago    Up 4 minutes                          loving_dewdney<br>9a1a43aee837   ubuntu    &quot;bush&quot;        4 minutes ago    Created                               admiring_wiles<br>cdee90a8c77d   ubuntu    &quot;bash&quot;        29 minutes ago   Exited (0) 29 minutes ago             ubuntu<br>0dcaa91afc0e   ubuntu    &quot;/bin/bush&quot;   31 minutes ago   Created                               myubuntu<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker ps<br>CONTAINER ID   IMAGE     COMMAND   CREATED         STATUS         PORTS     NAMES<br>562278524cda   ubuntu    &quot;bash&quot;    4 minutes ago   Up 4 minutes             loving_dewdney<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker start cdee90a8c77d<br>cdee90a8c77d<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker ps<br>CONTAINER ID   IMAGE     COMMAND   CREATED          STATUS         PORTS     NAMES<br>562278524cda   ubuntu    &quot;bash&quot;    5 minutes ago    Up 5 minutes             loving_dewdney<br>cdee90a8c77d   ubuntu    &quot;bash&quot;    30 minutes ago   Up 3 seconds             ubuntu<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]#<br></code></pre></td></tr></table></figure>
<h3 id="重启容器"><a href="#重启容器" class="headerlink" title="重启容器"></a>重启容器</h3><blockquote>
<p>docker restart 容器id/容器名</p>
</blockquote>
<h3 id="停止容器"><a href="#停止容器" class="headerlink" title="停止容器"></a>停止容器</h3><blockquote>
<p>docker stop 容器id/容器名</p>
</blockquote>
<h3 id="强制停止容器"><a href="#强制停止容器" class="headerlink" title="强制停止容器"></a>强制停止容器</h3><blockquote>
<p>docker kill 容器id/容器名</p>
</blockquote>
<h3 id="删除已经停止的容器"><a href="#删除已经停止的容器" class="headerlink" title="删除已经停止的容器"></a>删除已经停止的容器</h3><blockquote>
<p>docker rm 容器id</p>
</blockquote>
<h4 id="一次性删除多个容器"><a href="#一次性删除多个容器" class="headerlink" title="一次性删除多个容器"></a>一次性删除多个容器</h4><ul>
<li>docker rm -f $(docker ps -a -q)</li>
<li>docker ps -a -q | xargs docker rm</li>
</ul>
<p>注：xargs是linux系统的可变参数，把分隔符前面的结果传给xargs里面，然后执行分隔符后面的命令<br><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker ps<br>CONTAINER ID   IMAGE     COMMAND   CREATED          STATUS          PORTS     NAMES<br>562278524cda   ubuntu    &quot;bash&quot;    20 minutes ago   Up 20 minutes             loving_dewdney<br>cdee90a8c77d   ubuntu    &quot;bash&quot;    45 minutes ago   Up 15 minutes             ubuntu<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker ps -a -q | xargs docker rm -f<br>562278524cda<br>cdee90a8c77d<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]# docker ps<br>CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ ~]#<br><br></code></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>本地镜像发布到阿里云</title>
    <url>/posts/25343.html</url>
    <content><![CDATA[<h3 id="本地镜像发布到阿里云"><a href="#本地镜像发布到阿里云" class="headerlink" title="本地镜像发布到阿里云"></a>本地镜像发布到阿里云</h3><hr>
<p>使用docker进行对docker镜像功能的新增后，需要发布到阿里云上对镜像进行同步，下次<code>pull</code>镜像就不要<code>pull</code>缩减版的镜像，直接<code>pull</code>更新后的镜像，方便后续使用 </p>
<h4 id="执行顺序"><a href="#执行顺序" class="headerlink" title="执行顺序"></a>执行顺序</h4><ul>
<li>阿里云开发者平台</li>
<li>点击镜像容器服务</li>
<li>创建镜像仓库<ul>
<li>创建命名空间</li>
<li>创建镜像仓库</li>
</ul>
</li>
</ul>
<p>然后在基本信息上面就可以看到仓库指南</p>
<blockquote>
<p>根据指南进行操作</p>
<figure>
    <a href="../assets/img/2022-08-25-本地镜像发布到阿里云.assets\image-20220428144338500.png"><img src="../assets/img/2022-08-25-本地镜像发布到阿里云.assets\image-20220428144338500.png"></a>
</figure>

</blockquote>
<figure>
    <a href="../assets/img/2022-08-25-本地镜像发布到阿里云.assets\image-20220428144434665.png"><img src="../assets/img/2022-08-25-本地镜像发布到阿里云.assets\image-20220428144434665.png"></a>
</figure>

<figure>
    <a href="../assets/img/2022-08-25-本地镜像发布到阿里云.assets\image-20220428144502210.png"><img src="../assets/img/2022-08-25-本地镜像发布到阿里云.assets\image-20220428144502210.png"></a>
</figure>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>镜像</title>
    <url>/posts/55045.html</url>
    <content><![CDATA[<h2 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h2><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>docker镜像是最小的，被精简过的Linux系统，是不带vim命令的</p>
<blockquote>
<p>使用命令 ‘vim a.txt’ 进行新建编辑a.txt文件，就会提示找不到命令</p>
</blockquote>
<h3 id="给镜像容器新增vim命令"><a href="#给镜像容器新增vim命令" class="headerlink" title="给镜像容器新增vim命令"></a>给镜像容器新增vim命令</h3><ol>
<li><p>更新镜像</p>
<blockquote>
<p>apt-get update</p>
</blockquote>
</li>
<li><p>下载vim功能</p>
<blockquote>
<p>apt-get -y install vim</p>
</blockquote>
</li>
<li><p>提交副本使成为一个新镜像</p>
<blockquote>
<p>docker commit -m=”提交的描述信息” -a=”作者” 容器id  要创建的目标镜像名:[标签名]</p>
</blockquote>
</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@iZ8vbfaek3x3ogtpxnpnwfZ /]# docker ps<br>CONTAINER ID   IMAGE               COMMAND   CREATED       STATUS       PORTS     NAMES<br>356e32244966   mytest/ubuntu:3.5   &quot;bash&quot;    2 hours ago   Up 2 hours             elated_aryabhata<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ /]#<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ /]# docker commit -m=&quot;vim cmd add ok&quot; -a=&quot;ggls&quot; 356e32244966 ggls/ubuntu:1.5<br>sha256:87e99e19eeef47d4f0daaffc8498690614e0d95eae60ef61b439abe97b62fd16<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ /]# docker images<br>REPOSITORY      TAG       IMAGE ID       CREATED         SIZE<br>ggls/ubuntu     1.5       87e99e19eeef   7 seconds ago   176MB<br>mytest/ubuntu   3.5       a92a27affdde   2 hours ago     72.8MB<br>tomcat          9.0       b8e65a4d736d   4 months ago    680MB<br>ubuntu          latest    ba6acccedd29   6 months ago    72.8MB<br>redis           6.0.8     16ecd2772934   18 months ago   104MB<br>[root@iZ8vbfaek3x3ogtpxnpnwfZ /]# <br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>git提示Timed out的解决办法</title>
    <url>/posts/53812.html</url>
    <content><![CDATA[<h4 id="报错代码"><a href="#报错代码" class="headerlink" title="报错代码"></a>报错代码</h4><p>运行git代码会提示Timed out错误</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs git">使用git，会发生报错：Failed to connect to github.com port 443 after 21098 ms: Timed out<br></code></pre></td></tr></table></figure>
<h4 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h4><p>设置代理</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs git">git config --global https.proxy<br></code></pre></td></tr></table></figure>
<p>取消代理</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs git">git config --global --unset https.proxy<br></code></pre></td></tr></table></figure>
<p>然后输入git 命令使用</p>
]]></content>
      <categories>
        <category>经验分享</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac提示安装包损坏</title>
    <url>/posts/408340008.html</url>
    <content><![CDATA[<h3 id="Mac-提示文件已损坏，您应该将它移到废纸篓"><a href="#Mac-提示文件已损坏，您应该将它移到废纸篓" class="headerlink" title="Mac 提示文件已损坏，您应该将它移到废纸篓"></a>Mac 提示文件已损坏，您应该将它移到废纸篓</h3><p>解决办法：</p>
<p>在终端输入</p>
<p><code>sudo xattr -d com.apple.quarantine /Applications/PicGo.app</code></p>
<p><code>/</code>后面是安装路径</p>
<p>然后输入密码</p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>使用pip install报错的解决办法</title>
    <url>/posts/4851.html</url>
    <content><![CDATA[<h2 id="报错提示"><a href="#报错提示" class="headerlink" title="报错提示"></a>报错提示</h2><p>今天使用PyCharm下载一个模块<code>pip.exe install locust</code>，有错误提示</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">https://visualstudio.microsoft.com/visual-cpp-build-tools/<br>  [end of output]<br>  <br>  note: This error originates <span class="hljs-keyword">from</span> a subprocess, <span class="hljs-keyword">and</span> <span class="hljs-keyword">is</span> likely <span class="hljs-keyword">not</span> a problem <span class="hljs-keyword">with</span> pip.<br>  // 报错位置<br>  ERROR: Failed building wheel <span class="hljs-keyword">for</span> psutil<br><br>ERROR: Could <span class="hljs-keyword">not</span> build wheels <span class="hljs-keyword">for</span> psutil, which <span class="hljs-keyword">is</span> required to install pyproject.toml-based projects<br>WARNING: Ignoring invalid distribution -ip (d:\work software\python3<span class="hljs-number">.8</span>\lib\site-packages)<br>WARNING: Ignoring invalid distribution -ip (d:\work software\python3<span class="hljs-number">.8</span>\lib\site-packages)<br>WARNING: Ignoring invalid distribution -ip (d:\work software\python3<span class="hljs-number">.8</span>\lib\site-packages)<br></code></pre></td></tr></table></figure>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><blockquote>
<p>缺少对应的<code>whl</code>文件</p>
</blockquote>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>碰到了这个错误<code>ERROR: Failed building wheel for psutil</code>，就需要下载<code>psutil.whl</code></p>
<p>在<a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#_pandas">下载网站</a>点击进入网站</p>
<p>下载<code>psutil-5.9.0-cp38-cp38-win_amd64.whl</code>文件</p>
<p>然后使用（pip install 文件的绝对路径）进行安装，然后使用<code>pip.exe install locust</code>正常安装</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><br>pip.exe install D:\Appium\psutil-<span class="hljs-number">5.9</span><span class="hljs-number">.0</span>-cp38-cp38-win_amd64.whl<br><br>pip.exe install locust<br><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>经验分享</category>
      </categories>
      <tags>
        <tag>error</tag>
      </tags>
  </entry>
  <entry>
    <title>端口占用怎么查询是哪个软件</title>
    <url>/posts/643624526.html</url>
    <content><![CDATA[<h2 id="当提示端口占用"><a href="#当提示端口占用" class="headerlink" title="当提示端口占用"></a>当提示端口占用</h2><p>提示端口占用时，需要查询进程，并进行删除，但是有些进程不能删除，我们需要查一下这个端口属于哪个软件</p>
<ul>
<li><code>netstat -ano|findstr 8000</code></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">TCP    127.0.0.1:8000         0.0.0.0:0              LISTENING       18480<br></code></pre></td></tr></table></figure>
<p>查询<strong>8000</strong>端口,获得 <strong>PID</strong></p>
<ul>
<li><code>taskkill /pid 18480 /F</code></li>
</ul>
<p>根据<strong>PID</strong>杀死进程</p>
<ul>
<li><code>tasklist | findstr 18480</code></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">DHPlayer.exe                 18480 Console                    2     19,900 K<br></code></pre></td></tr></table></figure>
<p>根据<strong>PID</strong>查询所属软件</p>
<ul>
<li><code>wmic process where name=&quot;DHPlayer.exe&quot; get executablepath</code></li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><code class="hljs sh">ExecutablePath<br>C:\Program Files (x86)\DHPlayer\DHPlayer.exe<br></code></pre></td></tr></table></figure>
<p>根据<strong>exe名称</strong>查询软件路径</p>
<p>然后根据路径判断软件的端口要不要删除</p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>win</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Java解析Properties文件</title>
    <url>/posts/50581.html</url>
    <content><![CDATA[<h4 id="主要函数"><a href="#主要函数" class="headerlink" title="主要函数"></a>主要函数</h4><div class="table-container">
<table>
<thead>
<tr>
<th>文件后缀</th>
<th style="text-align:left">函数方法</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>.Properties</td>
<td style="text-align:left">load</td>
<td>加载文件</td>
</tr>
<tr>
<td></td>
<td style="text-align:left">setProperty</td>
<td>设置</td>
</tr>
<tr>
<td></td>
<td style="text-align:left">getProperty</td>
<td>获取</td>
</tr>
</tbody>
</table>
</div>
<h4 id="编写逻辑"><a href="#编写逻辑" class="headerlink" title="编写逻辑"></a>编写逻辑</h4><p>创建加载文件的方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 加载文件</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> Properties 对象</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> IOException I/O输入异常</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">private</span> Properties <span class="hljs-title function_">readProperties</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException&#123;<br>    <span class="hljs-comment">// 实例化，创建 Properties 对象</span><br>    <span class="hljs-type">Properties</span> <span class="hljs-variable">properties</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Properties</span>();<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-comment">// 创建文件输入对象 FileInputStream(&quot;testpro.properties&quot;)</span><br>        <span class="hljs-type">InputStream</span> <span class="hljs-variable">inputStream</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileInputStream</span>(filepath);<br>        <span class="hljs-comment">// 把文件输入对象放入缓存输入对象 new BufferedInputStream 里面</span><br>        <span class="hljs-type">BufferedInputStream</span> <span class="hljs-variable">in</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BufferedInputStream</span>(inputStream);<br>        <span class="hljs-comment">// 加载文件 in = ParseProperties.class.getResourceAsStream(&quot;testpro.properties&quot;),自动获取 resources 文件夹下路径</span><br>        properties.load(in);<br>    &#125;<span class="hljs-keyword">catch</span> (IOException e)&#123;<br>        e.printStackTrace();<br>    &#125;<br>    <span class="hljs-keyword">return</span> properties;<br>&#125;<br></code></pre></td></tr></table></figure>
<p>获取key后面的数据</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取数据</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> key 数据名称</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 数据等号右边的值</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> Exception 异常</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getPro</span><span class="hljs-params">(String key)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-comment">// 判断文件里面有没有这个 Key</span><br>        <span class="hljs-keyword">if</span> (prop.containsKey(key)) &#123;<br>            <span class="hljs-comment">// 获得key后面的value值</span><br>            <span class="hljs-keyword">return</span> prop.getProperty(key);<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            System.out.println(<span class="hljs-string">&quot;你获取的key值不对&quot;</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure>
<p>获取定位类型或者定位表达式</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 返回定位类型或者定位表达式</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> key 数据名称</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> num 输入0/1</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> num=0时，返回定位类型，num=1时，返回定位表达式</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">get_pro_element</span><span class="hljs-params">(String key, <span class="hljs-type">int</span> num)</span>&#123;<br>        <span class="hljs-keyword">return</span> (num!=<span class="hljs-number">0</span> &amp; num!=<span class="hljs-number">1</span>) ? <span class="hljs-string">&quot;num：参数输入错误&quot;</span> : prop.getProperty(key).split(<span class="hljs-string">&quot;-&gt;&quot;</span>)[num];<br>    &#125;<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>Properties</tag>
      </tags>
  </entry>
  <entry>
    <title>java基础之方法和函数</title>
    <url>/posts/7388.html</url>
    <content><![CDATA[<h1 id="方法和函数"><a href="#方法和函数" class="headerlink" title="方法和函数"></a>方法和函数</h1><div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th>定义方式</th>
<th>作用</th>
<th>调用方式</th>
</tr>
</thead>
<tbody>
<tr>
<td>函数</td>
<td>public static void 函数名(){}</td>
<td>封装指定功能的代码块</td>
<td>函数名()</td>
</tr>
<tr>
<td>方法</td>
<td>public [static] void 方法名(){}</td>
<td>类的行为，对象可以执行的一些功能</td>
<td>对象名.方法名</td>
</tr>
</tbody>
</table>
</div>
<h1 id="定义函数"><a href="#定义函数" class="headerlink" title="定义函数"></a>定义函数</h1><blockquote>
<p>使用<code>static</code>修饰的内容成为静态的内容</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">function1</span><span class="hljs-params">()</span>&#123;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="调用函数"><a href="#调用函数" class="headerlink" title="调用函数"></a>调用函数</h2><figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java">function1()<br></code></pre></td></tr></table></figure>
<h1 id="定义方法"><a href="#定义方法" class="headerlink" title="定义方法"></a>定义方法</h1><figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">className1</span>&#123;<br><br>    String name;<br>    <span class="hljs-comment">//静态变量</span><br>    <span class="hljs-keyword">static</span> String age;<br><br>    <span class="hljs-comment">//静态方法</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title function_">function1</span><span class="hljs-params">()</span>&#123;<br>    &#125;<br><br>    <span class="hljs-comment">//类方法</span><br>    <span class="hljs-comment">//非静态方法可以调用静态变量和非静态变量、静态方法和非静态方法</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">function2</span><span class="hljs-params">()</span>&#123;<br>    &#125;<br>&#125; <br></code></pre></td></tr></table></figure>
<h2 id="调用方法"><a href="#调用方法" class="headerlink" title="调用方法"></a>调用方法</h2><ul>
<li>调用静态方法,不需要实例化</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java">className1.function1()<br></code></pre></td></tr></table></figure>
<ul>
<li>调用方法</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java">className1的对象，需要实例化<br></code></pre></td></tr></table></figure>
<h2 id="静态方法注意事项："><a href="#静态方法注意事项：" class="headerlink" title="静态方法注意事项："></a>静态方法注意事项：</h2><ul>
<li>静态方法无法直接引用非静态的变量</li>
<li>静态方法不能直接调用非静态的方法</li>
</ul>
<h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><ul>
<li>定义在方法内部，和局部变量处于平行的位置</li>
<li>生命周期随着方法的调用而加载，随着方法的结束而消亡</li>
<li>可以在局部代码块中定义一些使用范围和时间都很短的变量,用完就消失啦</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">className1</span>&#123;<br><br>    String name;<br>    <span class="hljs-keyword">static</span> String age;<br><br>    <span class="hljs-comment">//类方法</span><br>    <span class="hljs-comment">//非静态方法可以调用静态变量和非静态变量、静态方法和非静态方法</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">function2</span><span class="hljs-params">()</span>&#123;<br><br>        <span class="hljs-comment">//定义代码块</span><br>        &#123;<br>           <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">100</span>;<br>           System.out.println(<span class="hljs-string">&quot;方法中的变量i=&quot;</span> + i);<br>        &#125;<br><br>    &#125;<br>&#125; <br></code></pre></td></tr></table></figure>
<h1 id="构造代码块"><a href="#构造代码块" class="headerlink" title="构造代码块"></a>构造代码块</h1><ul>
<li>构造代码快写在和构造方法平行的位置</li>
<li>只要创建对象，构造代码块就会执行，不论是采用有参的还是无参数的构造方法</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> class&#123;<br>    <span class="hljs-comment">//有参构造</span><br>    class(String name)&#123;<br>    &#125;<br>    <span class="hljs-comment">//无参构造</span><br>    class()&#123;<br>    &#125;<br>    <span class="hljs-comment">//构造代码块</span><br>    &#123;<br>        <span class="hljs-type">int</span> i=<span class="hljs-number">100</span>;<br>        System.out.println(<span class="hljs-string">&quot;构造代码块i=&quot;</span> + i);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>
<h1 id="静态代码块"><a href="#静态代码块" class="headerlink" title="静态代码块"></a>静态代码块</h1><ul>
<li>被static修饰的代码块称为静态代码块</li>
<li>随着类的加载而加载</li>
<li>静态代码块只执行一次，在程序中可以完成加载驱动等只执行一次的操作</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> className1&#123;<br>    <span class="hljs-keyword">static</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;我是静态代码块i=&quot;</span> + i);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>包装类</title>
    <url>/posts/16468.html</url>
    <content><![CDATA[<ul>
<li>基本数据类型对应的包装类</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>基本数据类型</th>
<th>包装类</th>
<th>大小(字节)</th>
</tr>
</thead>
<tbody>
<tr>
<td>byte</td>
<td>Byte</td>
<td>1—（-128~127）</td>
</tr>
<tr>
<td>short</td>
<td>Short</td>
<td>2—（-32768~32767）</td>
</tr>
<tr>
<td>int</td>
<td>Integer</td>
<td>4</td>
</tr>
<tr>
<td>long</td>
<td>Long</td>
<td>8</td>
</tr>
<tr>
<td>float</td>
<td>Float</td>
<td>4</td>
</tr>
<tr>
<td>double</td>
<td>Double</td>
<td>8</td>
</tr>
<tr>
<td>char</td>
<td>Character</td>
<td>2</td>
</tr>
<tr>
<td>boolean</td>
<td>Boolean</td>
<td>1</td>
</tr>
</tbody>
</table>
</div>
<h2 id="包装类方法"><a href="#包装类方法" class="headerlink" title="包装类方法"></a>包装类方法</h2><ul>
<li>Integer的作用主要是对int、Integer、String几种类型的数据进行转换，还能获取一些常量</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>方法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>compareTo()</td>
<td>用于将对象与方法的参数进行比较（相同类型）</td>
</tr>
<tr>
<td>decode()</td>
<td>将方法的参数转为包装类对象</td>
</tr>
<tr>
<td>equals()</td>
<td>判断对象是否与参数相等</td>
</tr>
<tr>
<td>Integer.parseInt(“字符串’)</td>
<td>将字符串转为Int类型</td>
</tr>
<tr>
<td>Integer.toString(int数据)</td>
<td>将Int类型转为字符串</td>
</tr>
</tbody>
</table>
</div>
<h3 id="compareTo-方法"><a href="#compareTo-方法" class="headerlink" title="compareTo()方法"></a>compareTo()方法</h3><ul>
<li>如果指定的数与参数相等返回 0。</li>
<li>如果指定的数小于参数返回 -1。</li>
<li>如果指定的数大于参数返回 1。</li>
</ul>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>抽象类与接口</title>
    <url>/posts/34655.html</url>
    <content><![CDATA[<h1 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h1><p>使用<code>abstract</code>修饰一个类，把这个类变成抽象类，抽象类不能直接创建对象，需要其他类进行继承该抽象类</p>
<ul>
<li>抽象方法不能有方法体</li>
<li>抽象方法必须使用<code>abstract</code>进行修饰，不能有方法体</li>
<li><p>子类必须实现父抽象类的方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Ahsse</span> &#123;<br>    String name;<br>    <span class="hljs-type">int</span> age;<br>    <br>    <span class="hljs-comment">//普通方法</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">aaa</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> name;<br>    &#125;;<br>    <span class="hljs-comment">// 抽象方法</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> String <span class="hljs-title function_">bbb</span><span class="hljs-params">()</span>;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">sss</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Ahsse</span>&#123;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">bbb</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;实现抽象类的抽象方法&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;ces &quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>
<h1 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h1><p>使用interface定义接口，相当于class</p>
</li>
<li><p>接口可以多继承</p>
</li>
<li>变量全部默认使用public static final修饰，使用之前必须赋值</li>
<li>类里面全部是抽象方法（默认使用public abstract修饰，没有方法体）需要被实现类进行实现</li>
<li>接口可以被多实现—implements</li>
</ul>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>字符串</title>
    <url>/posts/47564.html</url>
    <content><![CDATA[<h1 id="字符串的方法"><a href="#字符串的方法" class="headerlink" title="字符串的方法"></a>字符串的方法</h1><div class="table-container">
<table>
<thead>
<tr>
<th>方法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>str.concat()</td>
<td>将参数拼接到字符串上</td>
</tr>
<tr>
<td>trim()</td>
<td>去除字符串两端的字符串，不能去除中间</td>
</tr>
<tr>
<td>replace(oldChar, newChar)</td>
<td>将字符串的<code>old参数</code>替换为<code>new参数</code></td>
</tr>
<tr>
<td>length()</td>
<td>返回此字符串的长度</td>
</tr>
<tr>
<td>isEmpty()</td>
<td>判断字符串是否为空</td>
</tr>
</tbody>
</table>
</div>
<h2 id="concat-方法"><a href="#concat-方法" class="headerlink" title="concat()方法"></a>concat()方法</h2><ul>
<li>返回字符串类型</li>
<li><p>字符串在后面拼接</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">str</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;床前明月光&quot;</span>;<br><span class="hljs-type">String</span> <span class="hljs-variable">str1</span> <span class="hljs-operator">=</span> str.concat(<span class="hljs-string">&quot;疑是地上霜。&quot;</span>);<br>System.out.println(str1);<br></code></pre></td></tr></table></figure>
<h2 id="trim-方法"><a href="#trim-方法" class="headerlink" title="trim()方法"></a>trim()方法</h2><figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">str</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;    床  前明   月光   &quot;</span>;<br><span class="hljs-type">String</span> <span class="hljs-variable">str1</span> <span class="hljs-operator">=</span> str.trim();<br>System.out.println(str1);<br></code></pre></td></tr></table></figure>
<h2 id="replace-oldChar-newChar-方法"><a href="#replace-oldChar-newChar-方法" class="headerlink" title="replace(oldChar, newChar)方法"></a>replace(oldChar, newChar)方法</h2><figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">str</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;床前明月光&quot;</span>;<br><span class="hljs-type">String</span> <span class="hljs-variable">str1</span> <span class="hljs-operator">=</span> str.replace(<span class="hljs-string">&quot;床&quot;</span>, <span class="hljs-string">&quot;llll&quot;</span>);<br>System.out.println(str1);<br></code></pre></td></tr></table></figure>
<h2 id="length-方法"><a href="#length-方法" class="headerlink" title="length()方法"></a>length()方法</h2></li>
<li><p>返回int类型</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">str</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;床前明月光&quot;</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">str1</span> <span class="hljs-operator">=</span> str.length();<br>System.out.println(str1);<br></code></pre></td></tr></table></figure>
<h2 id="isEmpty-方法"><a href="#isEmpty-方法" class="headerlink" title="isEmpty()方法"></a>isEmpty()方法</h2></li>
<li><p>返回布尔类型</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">str</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;床前明月光&quot;</span>;<br><span class="hljs-type">boolean</span> <span class="hljs-variable">str1</span> <span class="hljs-operator">=</span> str.isEmpty();<br>System.out.println(str1);<br></code></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>继承、重写与重载</title>
    <url>/posts/55332.html</url>
    <content><![CDATA[<h1 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h1><p>继承是相对于类来说，通过关键字<code>extends</code>来实现</p>
<ul>
<li>可以获取父类的属性和方法</li>
<li>提高代码的复用性</li>
<li><p>父类修改了内容，子类也会修改</p>
<h2 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h2><p>父类的属性和方法</p>
</li>
<li><p>this表示当前对象的引用</p>
</li>
<li>super表示父类对象的引用</li>
<li>调用构造方法<ul>
<li>this(参数列表)表示调用当前类中的构造方法</li>
<li>super(参数列表)表示调用父类的构造方法，必须放在方法中的第一行</li>
</ul>
</li>
<li>调用属性<ul>
<li>this.属性表示调用当前对象的属性</li>
<li>super.属性表示调用父类的属性，可以拿到被重写之前的数据</li>
</ul>
</li>
<li><p>调用方法</p>
<ul>
<li>this.方法表示调用当前对象的方法</li>
<li>super.方法表示调用父类的方法，可以拿到被重写之前的方法，不用放在代码的第一行<h1 id="重写"><a href="#重写" class="headerlink" title="重写"></a>重写</h1>重写是子类可以重写父类的方法，使用<code>override标识</code></li>
</ul>
</li>
<li><p>方法名和参数不变，只修改方法体</p>
</li>
<li>访问权限不能比父类的范围更小</li>
<li>私有的方法能被子类继承，但不能使用和重写</li>
<li><p>静态的方法能被子类继承，能使用但不能被重写 </p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">testeass</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">aa</span><span class="hljs-params">(String name, <span class="hljs-type">int</span> age)</span>&#123;<br>        System.out.println(name + age);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">testaaa</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">testeass</span>&#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">aa</span><span class="hljs-params">(String name, <span class="hljs-type">int</span> age)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;这是重写方法，方法名、参数和返回数据都不变，只能修改方法体&quot;</span>);<br>        System.out.println(name + age);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>
<h1 id="重载"><a href="#重载" class="headerlink" title="重载"></a>重载</h1><p>重载是同一个类下对方法进行重载</p>
</li>
<li><p>方法名相同，参数不相同 (参数个数不同/参数类型不同/参数排列顺序不同)  </p>
</li>
<li>返回类型不限制<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">jichu</span> &#123;<br><br><span class="hljs-comment">//    原方法</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">hello</span><span class="hljs-params">(String name, <span class="hljs-type">int</span> aa)</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;拼接起来的值是:&quot;</span>+ name + aa );<br>    &#125;<br>    <br><span class="hljs-comment">//    重载后的方法</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">hello</span><span class="hljs-params">(<span class="hljs-type">int</span> aa, String name)</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;aaaaaaa:&quot;</span> + aa);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>使用jmeter录制压测</title>
    <url>/posts/52845.html</url>
    <content><![CDATA[<h3 id="业务"><a href="#业务" class="headerlink" title="业务"></a>业务</h3><ul>
<li>压测对象：<a href="http://news.baidu.com">http://news.baidu.com</a></li>
<li>压测页面：首页、国际频道、财经频道</li>
<li>步骤<ul>
<li>访问首页</li>
<li>单击“国际”（频道）</li>
<li>单击“财经”（频道）</li>
</ul>
</li>
<li>操作手段：录制回放</li>
</ul>
<h3 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h3><ul>
<li><p>添加录制器“HTTP(S) Test Script Recorder”</p>
<ul>
<li>右键Test Plan，点击add</li>
<li>点击Non-Test Elements</li>
<li>点击HTTP(S) Test Script Recorder</li>
</ul>
</li>
<li><p>添加线程组“Thread Group”</p>
</li>
<li><p>添加录制控制器“Recording Controller”,</p>
<ul>
<li>右键线程组，点击and</li>
<li>点击Logic Controller</li>
<li>点击Recording Controller</li>
</ul>
</li>
<li><p>录制脚本的配置（Test Plan Creation）</p>
<ul>
<li><code>Port</code>=8088</li>
<li><code>Target Controller</code> = TestPlan &gt; Tread Group &gt; Recording Controller</li>
<li>其他的配置保持默认</li>
</ul>
</li>
<li><p>录制脚本的配置（Requests Filtering 请求过滤器）</p>
<ul>
<li>在<code>URl Patterns to Include</code>上添加正则<code>.*\.(baidu\.com).*</code>；表示只抓取百度URL的内容，不抓取其他网站的</li>
<li>在<code>URl Patterns to Exclude</code>上添加正则<code>.*\.(js|css|PNG|jpg|jpeg|ico|png|gif).*</code>；去掉一些静态请求</li>
<li>目的是：避免录制过多没必要的请求</li>
</ul>
</li>
<li><p>单击保存按钮，将Jmeter脚本存储</p>
</li>
<li></li>
<li>打开浏览器，设置代理，将浏览器的代理服务地址指向<code>http://localhost:8088</code>，然后就可以进行访问录制了</li>
<li></li>
<li>访问百度新闻的首页、国际、财经页面</li>
<li></li>
<li>查看jmeter，录制结果在<code>Recording Controller</code>下面看到，然后停止录制</li>
</ul>
<h3 id="校验"><a href="#校验" class="headerlink" title="校验"></a>校验</h3><p>录制结束后，要对录制的代码进行校验</p>
<ul>
<li>添加查看结果树组件</li>
</ul>
<p>运行录制的代码，在查看结果树上查看运行的结果</p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>jmeter</tag>
      </tags>
  </entry>
  <entry>
    <title>Jmeter之静默压测</title>
    <url>/posts/3219.html</url>
    <content><![CDATA[<h3 id="静默压测"><a href="#静默压测" class="headerlink" title="静默压测"></a>静默压测</h3><blockquote>
<p>jmeter -n -t $jmx_file -l $jtl_file</p>
</blockquote>
<p>如： jmeter -n -t HTTP代理服务器luzhi.jmx -l result.jtl</p>
<p>jmx: Jmeter压测程序脚本文件<br>jtl: Jmeter压测请求响应数据的原始文件，查看结果树和聚合报告可以导入该文件查看</p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>jmeter</tag>
      </tags>
  </entry>
  <entry>
    <title>Jmeter之断言和聚合报告</title>
    <url>/posts/55320.html</url>
    <content><![CDATA[<h2 id="怎么对请求进行响应断言"><a href="#怎么对请求进行响应断言" class="headerlink" title="怎么对请求进行响应断言"></a>怎么对请求进行响应断言</h2><ul>
<li><p>右键 <code>HTTP Request</code></p>
</li>
<li><p>点击<code>add --&gt; Assertions --&gt; Response Assertion</code></p>
</li>
</ul>
<p>断言组件就添加成功</p>
<h4 id="配置响应断言"><a href="#配置响应断言" class="headerlink" title="配置响应断言"></a>配置响应断言</h4><p><code>Field to Test</code> 下面就是断言的各种方法</p>
<ul>
<li>Text Response    文本断言</li>
</ul>
<blockquote>
<p>在<code>Patterns to Test</code>输入<code>title</code>之间包含的文字，及配置成功</p>
</blockquote>
<ul>
<li>Response Code    响应码断言</li>
</ul>
<blockquote>
<p>在<code>Patterns to Test</code>输入响应码，比如 200</p>
</blockquote>
<ul>
<li>Response Message</li>
<li>Request Headers</li>
<li>URL Sampled</li>
<li>Document(text)</li>
<li>Request Data</li>
</ul>
<p>然后运行但并发压测，验证断言添加是否正确,在<code>View Results Tree</code>中查看结果</p>
<h2 id="怎么使用聚合报告"><a href="#怎么使用聚合报告" class="headerlink" title="怎么使用聚合报告"></a>怎么使用聚合报告</h2><ul>
<li><p>右键 <code>Thread Group</code></p>
</li>
<li><p>点击 <code>Add --&gt; Listener --&gt; Aggregate Report</code></p>
</li>
</ul>
<p>聚合报告就添加了</p>
<h4 id="性能指标解读"><a href="#性能指标解读" class="headerlink" title="性能指标解读"></a>性能指标解读</h4><ul>
<li>Average： 单个请求的平均响应时间</li>
<li>Median： 中位数，也就是50%用户的响应时间</li>
<li>90%Line： 90%用户的响应时间</li>
<li>95%Line： 95%用户的响应时间</li>
<li>99%Line:  99%用户的响应时间</li>
<li>Min： 最小的请求响应时间</li>
<li>Max： 最大的请求响应时间</li>
<li>Error%： 错误率</li>
<li>Throughput： 吞吐量</li>
<li>Received KB/sec： 每秒从服务器接收到的数据量</li>
<li>Sent KB/sec： 每秒从客户端发送的请求的数量</li>
</ul>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>jmeter</tag>
      </tags>
  </entry>
  <entry>
    <title>jmeter自动化压力测试</title>
    <url>/posts/63722.html</url>
    <content><![CDATA[<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ul>
<li>jmeter脚本实现压测逻辑</li>
<li>Shell控制逻辑</li>
<li>使用jmeter进行静默压测</li>
</ul>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>jmeter</tag>
      </tags>
  </entry>
  <entry>
    <title>Jmeter之json数据提取和参数传递</title>
    <url>/posts/26691.html</url>
    <content><![CDATA[<h2 id="安装组件JSON-Extractor"><a href="#安装组件JSON-Extractor" class="headerlink" title="安装组件JSON Extractor"></a>安装组件JSON Extractor</h2><ul>
<li>右键<code>Http Request</code></li>
<li>点击<code>Add -&gt; Post Processors -&gt; JSON Extractor</code></li>
</ul>
<p>组件安装成功</p>
<h4 id="组件配置"><a href="#组件配置" class="headerlink" title="组件配置"></a>组件配置</h4><ul>
<li><code>Names of created variables</code>  :  参数变量名称，提取出来的json使用这个变量</li>
<li><code>Json Path expressions</code>  :  JSON提取的正则 比如：<code>$.access_token</code>这个是提取response里面的token</li>
<li><code>Match NO.(0 for Random)</code>:这个是写提取出json的第几条, 比如使用正则能匹配多条，使用这个输入数字就可以匹配对应的</li>
</ul>
<h5 id="引用json变量"><a href="#引用json变量" class="headerlink" title="引用json变量"></a>引用json变量</h5><ul>
<li>Jmeter中引用变量的方法<code>$&#123;变量名&#125;</code></li>
</ul>
<h4 id="调试脚本-Debug-Sampler"><a href="#调试脚本-Debug-Sampler" class="headerlink" title="调试脚本 Debug Sampler"></a>调试脚本 Debug Sampler</h4><blockquote>
<p>帮助检查变量值，调试脚本</p>
</blockquote>
<ul>
<li>右键<code>Thread Group</code></li>
<li>点击<code>Add -&gt; Sampler -&gt; Debug Sampler</code></li>
</ul>
<p>注意：把Debug放到所有请求的最底下，运行的后可以查看变量参数，方便调试</p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>jmeter</tag>
      </tags>
  </entry>
  <entry>
    <title>Jmeter之全局参数设置和csv数据导入</title>
    <url>/posts/49262.html</url>
    <content><![CDATA[<h4 id="全局参数设置"><a href="#全局参数设置" class="headerlink" title="全局参数设置"></a>全局参数设置</h4><h5 id="添加组件"><a href="#添加组件" class="headerlink" title="添加组件"></a>添加组件</h5><ul>
<li>右键<code>Thread Group</code></li>
<li>点击<code>Add -&gt; Config Element -&gt; User Defined Variables</code></li>
</ul>
<h5 id="添加对应的变量"><a href="#添加对应的变量" class="headerlink" title="添加对应的变量"></a>添加对应的变量</h5><ul>
<li><code>hostname</code>：localhost</li>
<li><code>port</code>：9090</li>
<li><code>protocol</code>：http</li>
</ul>
<p>然后再请求参数中使用对应的参数变量名</p>
<ul>
<li><code>$&#123;hostname&#125;</code></li>
<li><code>$&#123;port&#125;</code></li>
<li><code>$&#123;protocol&#125;</code></li>
</ul>
<h4 id="csv数据导入"><a href="#csv数据导入" class="headerlink" title="csv数据导入"></a>csv数据导入</h4><h5 id="创建csv文件"><a href="#创建csv文件" class="headerlink" title="创建csv文件"></a>创建csv文件</h5><ul>
<li>使用Excel创建csv文件</li>
<li>csv数据之间使用英文逗号来分割</li>
<li>保存成<code>.csv</code>文件</li>
</ul>
<h5 id="添加csv导入组件"><a href="#添加csv导入组件" class="headerlink" title="添加csv导入组件"></a>添加csv导入组件</h5><ul>
<li>右键<code>Thread Group</code></li>
<li>点击<code>Add -&gt; Config Element -&gt; CSV Data Set Config</code></li>
</ul>
<h5 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h5><ul>
<li><code>Filename</code>：文件位置</li>
<li><code>File encoding</code>：编码格式</li>
<li><code>Variable Names(comma-delimited)</code>：数据参数 如：<code>no,username,password</code></li>
<li><code>lgnore first lline (only user if Variable Names is not empty)</code>：是否忽略第一行（表头）</li>
<li><code>Delimiter(use &quot;\t&quot; for tab)</code>：分隔符</li>
<li><code>Allow quoted data?</code>：是否允许双引号括住数据</li>
<li><code>Recycle on EOF?</code>：到了文件结尾是否循环</li>
<li><code>Stop thread on EOF?</code>：到了文件结尾是否停止</li>
<li><code>Sharinng mode</code>：共享模式</li>
</ul>
<font color='red' font-size='30px'>注意：把请求的参数修改为：`${变量}`</font>]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>jmeter</tag>
      </tags>
  </entry>
  <entry>
    <title>jmeter对数据库进行增删改查</title>
    <url>/posts/55393.html</url>
    <content><![CDATA[<h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><ul>
<li>jmeter版本（5.1.1）</li>
<li>mysql-connector-java-8.0.15.jar</li>
</ul>
<p>mysql.jar放在jmeter的lib目录下</p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="连接配置组件"><a href="#连接配置组件" class="headerlink" title="连接配置组件"></a>连接配置组件</h4><ul>
<li>右键<code>Thread Group</code></li>
<li>点击<code>Add -&gt; Config Element -&gt; JDBC Connection Configuration</code></li>
</ul>
<h4 id="参数配置"><a href="#参数配置" class="headerlink" title="参数配置"></a>参数配置</h4><ul>
<li>==Varianle Name for created pool==:db_connnection_pool      # 连接池名称</li>
<li>==Validation Query==:select 1</li>
<li>==Database URL==:<code>jdbc:mysql://8.142.144.75:3306/jmeter_class?alloMultiQueries = true&amp;useSSL=false</code></li>
<li>==JDBC Driver class==:选择<code>com.mysql.jbc.Driver</code></li>
<li>输入<code>username</code></li>
<li>输入<code>password</code></li>
</ul>
<h4 id="Jmeter数据库JDBC请求"><a href="#Jmeter数据库JDBC请求" class="headerlink" title="Jmeter数据库JDBC请求"></a>Jmeter数据库JDBC请求</h4><ul>
<li>右键<code>Thread Group</code></li>
<li>点击<code>Add -&gt; Sampler -&gt; JDBC Request</code></li>
</ul>
<h5 id="配置介绍"><a href="#配置介绍" class="headerlink" title="配置介绍"></a>配置介绍</h5><p><code>Variable Name Bound to Pool</code>：     配置参数区<br><code>SQL Query</code>：sql语句区<br>其他：变量配置区</p>
<h5 id="举个栗子：通过Insert语句，向数据库添加测试数据"><a href="#举个栗子：通过Insert语句，向数据库添加测试数据" class="headerlink" title="举个栗子：通过Insert语句，向数据库添加测试数据"></a>举个栗子：通过Insert语句，向数据库添加测试数据</h5><ul>
<li><code>JDBC Connection Configuration</code>:  db_connnection_pool     #输入连接池名称</li>
<li><code>Query Type</code>：选择<code>Prepared Updata Statement</code></li>
<li><code>Quert</code>：输入sql语句</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> jmeter_class.user (`username`,`password`) <span class="hljs-keyword">VALUES</span>(?,?)<br></code></pre></td></tr></table></figure>
<ul>
<li><code>Paeameter values</code>：testuser,aaaaaa</li>
<li><code>Paeameter types</code>：varchar,varchar</li>
<li><code>Query timeout(s)</code>：6</li>
<li>添加查看结果树</li>
<li>运行</li>
</ul>
<p>运行结果ResponseBody：<br><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> updates.<br></code></pre></td></tr></table></figure><br>这就配置成功 </p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>jmeter</tag>
      </tags>
  </entry>
  <entry>
    <title>Constant Timer定时器</title>
    <url>/posts/527.html</url>
    <content><![CDATA[<h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><p>就是loadrunner上面的思考时间，就是模拟真实用户操作过程的等待时间</p>
<h2 id="生效范围"><a href="#生效范围" class="headerlink" title="生效范围"></a>生效范围</h2><p>定时器的父节点和子节点，如果想让一个请求强制停止一段时间，就把定时器放在这个请求的下面</p>
<p><strong>单位是以ms为单位，1s=1000ms</strong></p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>jmeter</tag>
      </tags>
  </entry>
  <entry>
    <title>循环控制器Loop Controller</title>
    <url>/posts/48990.html</url>
    <content><![CDATA[<h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>指定子节点运行的次数，使用变量或数值进行控制</p>
<ul>
<li>Infinite：表示一直循环</li>
<li>如果同时设置线程组循环次数和循环控制器的循环次数，那控制器子节点运行的次数为两个数值相乘的结果</li>
</ul>
<h3 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h3>]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>jmeter</tag>
      </tags>
  </entry>
  <entry>
    <title>随机控制器Random Controller和Random Order Controller</title>
    <url>/posts/29537.html</url>
    <content><![CDATA[<h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><ul>
<li>Random Controller：控制器子节点随机运行一个请求<ul>
<li>lgnore sub-controller blocks：忽略子控制器块</li>
</ul>
</li>
<li>Random Order Controller：控制器子节点随机运行全部请求</li>
</ul>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>jmeter</tag>
      </tags>
  </entry>
  <entry>
    <title>Modeule Controller和Include Controller</title>
    <url>/posts/34250.html</url>
    <content><![CDATA[<h2 id="Modeule-Controller介绍"><a href="#Modeule-Controller介绍" class="headerlink" title="Modeule Controller介绍"></a>Modeule Controller介绍</h2>]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>jmeter</tag>
      </tags>
  </entry>
  <entry>
    <title>逻辑控制器Simple Controller</title>
    <url>/posts/31868.html</url>
    <content><![CDATA[<h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>把多个请求放入<code>Simple Controller</code>,可以多个请求进行同时操作</p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>jmeter</tag>
      </tags>
  </entry>
  <entry>
    <title>事务控制器Transcation Controller</title>
    <url>/posts/15488.html</url>
    <content><![CDATA[<h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><p>一个事务会包含并请求，然后查看一个事务的QPS等性能指标</p>
<h2 id="指标"><a href="#指标" class="headerlink" title="指标"></a>指标</h2><p><strong>QPS</strong>：每秒处理完请求的次数，具体指1s内发出请求到服务器处理完成并返回结果的次数</p>
<p><strong>TPS</strong>：每秒处理完的事务次数，一般TPS是对整个系统来讲的，一个应用系统1s能完成多少事务处理，一个事务在分布式处理中，可能对应多个请求，对于衡量单个接口服务的处理能力，一般使用QPS</p>
<h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><ul>
<li>Generate Parent sample：生成父样例，就是控制器里面的请求不展示</li>
</ul>
<p>没有选中<code>Generate Parent sample</code>,运行后的结果是</p>
<figure>
    <a href="../assets/img/事务控制器Transcation Controller/事务1.jpg"><img src="../assets/img/事务控制器Transcation Controller/事务1.jpg"></a>
</figure>
<figure>
    <a href="../assets/img/事务控制器Transcation Controller/事务2.jpg"><img src="../assets/img/事务控制器Transcation Controller/事务2.jpg"></a>
</figure>
选中后`Generate Parent sample`,运行后的结果是
<figure>
    <a href="../assets/img/事务控制器Transcation Controller/事务3.jpg"><img src="../assets/img/事务控制器Transcation Controller/事务3.jpg"></a>
</figure>
<figure>
    <a href="../assets/img/事务控制器Transcation Controller/事务4.jpg"><img src="../assets/img/事务控制器Transcation Controller/事务4.jpg"></a>
</figure>


]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>jmeter</tag>
      </tags>
  </entry>
  <entry>
    <title>Constant Throughput Timer定时器</title>
    <url>/posts/48851.html</url>
    <content><![CDATA[<h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><p>限制整个运行过程中的生成的吞吐量不要超过某一个值，防止压死系统</p>
<h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><ul>
<li>Target throughput(in samples per minute)：目标吞吐量，指的是每分钟发送的请求数，对应测试要求的<code>20 QPS</code>，这里应该输入1200</li>
<li>Calculate Throughput based on:有5个选项<ul>
<li><code>This Thread only</code>:控制每个线程的吞吐量，这个模式的作用是:<code>总的吞吐量=Target throughput * 线程的数量</code></li>
<li><code>All active threads</code>:设置的<strong><em>Target throughput</em></strong>将分配在每个活跃线程上，每个活跃线程在上一次运行结束后等待合理时间后再次运行。活跃线程指的是同一时刻同时运行的线程</li>
<li><code>All active threads in current thread group</code>:设置的`<strong><em>Target throughput</em></strong>将分配在当前线程祖的每一个活跃线程上，当测试计划只有一个线程组，这个模式作用和All active threads一样</li>
<li><code>All active threads（shared）</code>：与All active threads选项基本一致，唯一区别是，每一个活跃线程都会在所有活跃线程上一次运行结束后等待合理时间再次运行</li>
<li><code>All active threads in current thread group（shared）</code>:与All active threads in current thread group选项基本一致，唯一区别是，每个活跃线程都会在所有活跃线程的上一次运行结束等待合理的时间后再次运行</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>jmeter</tag>
      </tags>
  </entry>
  <entry>
    <title>逻辑控制器If Controller</title>
    <url>/posts/12932.html</url>
    <content><![CDATA[<h2 id="逻辑控制器If-Controller"><a href="#逻辑控制器If-Controller" class="headerlink" title="逻辑控制器If Controller"></a>逻辑控制器If Controller</h2>]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>jmeter</tag>
      </tags>
  </entry>
  <entry>
    <title>Gaussian Random Timer定时器</title>
    <url>/posts/40953.html</url>
    <content><![CDATA[<h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>生成随机等待时间</p>
<h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><ul>
<li><code>Deviation(in milliseconds)</code>：高斯定时器参数,随机的</li>
<li><code>Constant Delay Offset（in milliseconds）</code>：固定等待时长</li>
</ul>
<p>生成的时长是<code>Deviation + Constant Delay Offset</code></p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>jmeter</tag>
      </tags>
  </entry>
  <entry>
    <title>Regular Expression Extractor正则表达式处理器</title>
    <url>/posts/56883.html</url>
    <content><![CDATA[<h2 id="正则表达式规则"><a href="#正则表达式规则" class="headerlink" title="正则表达式规则"></a>正则表达式规则</h2><ul>
<li><code>()</code>：括起来的部分是要提取的</li>
<li><code>.</code>：匹配任何字符串</li>
<li><code>+</code>：一次或多次</li>
<li><code>?</code>：在找到第一个匹配项后停止</li>
</ul>
<h3 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h3><p>用<script type="math/tex">引用起来，如果正则表达式中有多个正则表达式，可以是$3</script>2$等，表示解析到的第几个值给title，$1$表示第一个</p>
<h3 id="匹配数字"><a href="#匹配数字" class="headerlink" title="匹配数字"></a>匹配数字</h3><p>0代表随机，1代表全部取值，通常使用0</p>
<h3 id="缺省值"><a href="#缺省值" class="headerlink" title="缺省值"></a>缺省值</h3><p>若参数没有取到值，那默认给一个值让他取</p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>jmeter</tag>
      </tags>
  </entry>
  <entry>
    <title>Groovy编写方法</title>
    <url>/posts/22551.html</url>
    <content><![CDATA[<h2 id="关键字："><a href="#关键字：" class="headerlink" title="关键字："></a>关键字：</h2><ul>
<li><strong><code>log</code></strong>：写入信息到jmeterlog文件，使用方法：log.info(*Thisisloginfo</li>
<li><strong><code>ctx</code></strong>：该变量引用了当前线程的上下文，使用方法可参考：org.apache.imeter.threads.JMeterContext。</li>
<li><strong><code>vars</code></strong>-(JMeterVariables)：操作imeter变量，这个变量实际引用了JMeter线程中的局部变量容器（本质上是Map），它是测试用例与BeanShell交互的桥梁，<br>  常用方法：<ul>
<li>a)vars.get(Stringkey)：从imeter中获得变量值</li>
<li>b)vars.put(Stringkey,Stringvalue)：数据存到imeter变量中<br>更多方法可参考：org.apache.imeter.threads.JMeterVariables</li>
</ul>
</li>
<li><strong><code>props</code></strong>-(JMeterProperties-classjava.util.Properties)：操作imeter属性，该变量引用了JMeter的配置信息，可以获取Jmeter的属性，它的使用方法与vars类似，但是只能put进去String类型的值，而不能是一个对象。<br>对应于iava.util.Properties。<ul>
<li>a)props.get(“START.HMS”);        注：START.HMS为属性名，在文件imeter.properties中定义</li>
<li>b)props.put(“PROP1”,”1234”);    </li>
</ul>
</li>
<li><strong><code>prey</code></strong>-(SampleResult)：获取前面的sample返回的信息，<br>  常用方法：<ul>
<li>a)getResponseDataAsString()：获取响应信息</li>
<li>b)getResponseCode()：获取响应code<br>更多方法可参考：org.apache.imeter.samplers.SampleResult</li>
</ul>
</li>
<li><strong><code>sampler</code></strong>-(Sampler):gives access to the current sampler</li>
</ul>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>jmeter</tag>
      </tags>
  </entry>
  <entry>
    <title>使用moko编写测试接口</title>
    <url>/posts/1817691161.html</url>
    <content><![CDATA[<h2 id="编写规则"><a href="#编写规则" class="headerlink" title="编写规则"></a>编写规则</h2><ul>
<li><p>以<code>[]</code>包裹着以<code>&#123;&#125;</code>包起来的接口脚本</p>
</li>
<li><p><code>description</code>：接口简介</p>
</li>
<li><p><code>request</code>：使用<code>&#123;&#125;</code>包含接口的请求信息</p>
<ul>
<li><code>uri</code>：接口的地址名称</li>
<li><code>method</code>：请求方法</li>
<li><code>queries</code>：get请求参数</li>
<li><code>forms</code>：post请求参数</li>
<li><code>headers</code>：请求头信息</li>
</ul>
</li>
<li><p><code>response</code>：返回的数据，使用<code>&#123;&#125;</code></p>
<ul>
<li><code>text</code>：返回的文字数据</li>
<li><code>cookies</code>：返回的cookie信息</li>
<li><code>status</code>：返回的响应码</li>
</ul>
</li>
</ul>
<p><strong>举个栗子demo</strong></p>
<figure class="highlight json"><table><tr><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">[</span><br>  <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;这是我们的第一个mock栗子&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;request&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;uri&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/demo&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;response&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;text&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;第一个mock响应demo&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure>
<p><strong>get请求demo</strong><br><figure class="highlight json"><table><tr><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">[</span><br>  <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;接口的get请求&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;request&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;uri&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/#/test/xml&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;method&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;get&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;response&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;text&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;get请求接口&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure></p>
<h2 id="使用moko编写Get和Post测试接口"><a href="#使用moko编写Get和Post测试接口" class="headerlink" title="使用moko编写Get和Post测试接口"></a>使用moko编写Get和Post测试接口</h2><p><strong>上一节已经写了规则，这次直接来编写Get和Post请求</strong></p>
<p><strong>模拟一个没有参数的get请求</strong><br><figure class="highlight json"><table><tr><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;模拟一个没有参数的get请求&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;request&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;uri&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/getdemo&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;method&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;get&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;response&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;text&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;这是一个没有参数的get请求&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><br><strong>模拟一个带参数的请求</strong><br><figure class="highlight json"><table><tr><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;模拟一个带参数的请求&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;request&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;uri&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;getwithparam&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;method&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;get&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;queries&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;胡汉三&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;age&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;18&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;response&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;text&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;我胡汉三又回来了！！！！！&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></p>
<p><strong>模拟一个Post请求</strong><br><figure class="highlight json"><table><tr><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;模拟一个Post请求&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;request&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;uri&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/postdemo&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;method&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;post&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;response&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;text&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;这是我的第一个mosk的post请求&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></p>
<p><strong>这是一个带参数的post请求</strong><br><figure class="highlight json"><table><tr><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;这是一个带参数的post请求&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;request&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;uri&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/postwithparam&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;method&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;post&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;forms&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;胡汉三&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;sex&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;男人&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;response&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;text&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;我胡汉三带着参数来了！！！！&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></p>
<h2 id="使用moko编写包含cookie信息的测试接口"><a href="#使用moko编写包含cookie信息的测试接口" class="headerlink" title="使用moko编写包含cookie信息的测试接口"></a>使用moko编写包含cookie信息的测试接口</h2><h3 id="这是一个会返回cookie的get请求"><a href="#这是一个会返回cookie的get请求" class="headerlink" title="这是一个会返回cookie的get请求"></a>这是一个会返回cookie的get请求</h3><figure class="highlight json"><table><tr><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;这是一个会返回cookie的get请求&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;request&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;uri&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/getCookies&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;method&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;get&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;response&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;cookies&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;login&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;true&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;text&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;恭喜你获得cookies信息成功&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;status&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">200</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;msg&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;成功&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure>
<h4 id="这是一个携带cookies信息的get请求"><a href="#这是一个携带cookies信息的get请求" class="headerlink" title="这是一个携带cookies信息的get请求"></a>这是一个携带cookies信息的get请求</h4><figure class="highlight json"><table><tr><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;这是一个带cookies信息的get请求&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;request&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;uri&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/get/with/cookies&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;method&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;get&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;cookies&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;login&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;true&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;response&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;text&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;这是一个需要携带cookies信息才能访问的get请求&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure>
<h4 id="这是一个携带cookies信息的post请求"><a href="#这是一个携带cookies信息的post请求" class="headerlink" title="这是一个携带cookies信息的post请求"></a>这是一个携带cookies信息的post请求</h4><figure class="highlight json"><table><tr><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;这是一个带cookies信息的post请求&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;request&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;uri&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/post/with/cookies&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;method&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;post&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;cookies&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;login&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;true&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;json&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;huhansan&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;age&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;18&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;response&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;status&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">200</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;json&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;huhansan&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;success&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;status&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure>
<h2 id="重定向的测试接口"><a href="#重定向的测试接口" class="headerlink" title="重定向的测试接口"></a>重定向的测试接口</h2><ul>
<li>使用了<code>redirectTo</code>：目标地址</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">[</span><br>  <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;重定向到百度&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;request&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;uri&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/redirect&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;redirectTo&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;http://www.baidu.com&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;重定向到自己的网页上&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;request&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;uri&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/redirect/topath&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;redirectTo&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/redirect/new&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;这是被重定到的请求&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;request&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;uri&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/redirect/new&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;response&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;text&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;重定向成功了&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure>
<h2 id="下载jar包"><a href="#下载jar包" class="headerlink" title="下载jar包"></a>下载jar包</h2><p>点击<a href="https://repo1.maven.org/maven2/com/github/dreamhead/moco-runner/">moke</a>选择版本进行下载，我下载的的是<code>moco-runner-0.11.0-standalone.jar</code></p>
<h2 id="使用命令启动测试脚本"><a href="#使用命令启动测试脚本" class="headerlink" title="使用命令启动测试脚本"></a>使用命令启动测试脚本</h2><figure class="highlight json"><table><tr><td class="code"><pre><code class="hljs json">java -jar jar包的存放路径 http -p 端口 -c json文件路径<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Yaml的使用</title>
    <url>/posts/31621.html</url>
    <content><![CDATA[<h5 id="编写字符串"><a href="#编写字符串" class="headerlink" title="编写字符串"></a>编写字符串</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#字符串</span><br><span class="hljs-comment">#单行</span><br><span class="hljs-attr">username:</span> <span class="hljs-string">admin</span><br><span class="hljs-attr">username1:</span> <span class="hljs-string">&quot;周杰\n伦&quot;</span>    <span class="hljs-comment">#双引号不转义</span><br><span class="hljs-attr">username2:</span> <span class="hljs-string">&#x27;周杰\n伦&#x27;</span>    <span class="hljs-comment">##单引号转义</span><br><span class="hljs-comment">#多行</span><br><span class="hljs-attr">william:</span> <span class="hljs-string">一</span><br> <span class="hljs-string">二</span><br> <span class="hljs-string">三</span><br> <br><span class="hljs-attr">william2:</span> <span class="hljs-string">|</span><br><span class="hljs-string"> 一</span><br><span class="hljs-string"> 二</span><br><span class="hljs-string"> 三</span><br><span class="hljs-string"></span> <br><span class="hljs-attr">william3:</span> <span class="hljs-string">&gt;</span><br><span class="hljs-string"> 一</span><br><span class="hljs-string"> 二</span><br><span class="hljs-string"> 三</span><br></code></pre></td></tr></table></figure>
<p>回显的结果是：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml">&#123; <span class="hljs-attr">username:</span> <span class="hljs-string">&#x27;admin&#x27;</span>,<br>  <span class="hljs-attr">username1:</span> <span class="hljs-string">&#x27;周杰\n伦&#x27;</span>,<br>  <span class="hljs-attr">username2:</span> <span class="hljs-string">&#x27;周杰\\n伦&#x27;</span>,<br>  <span class="hljs-attr">william:</span> <span class="hljs-string">&#x27;一 二 三&#x27;</span>,<br>  <span class="hljs-attr">william2:</span> <span class="hljs-string">&#x27;一\n二\n三\n&#x27;</span>,<br>  <span class="hljs-attr">william3:</span> <span class="hljs-string">&#x27;一 二 三\n&#x27;</span> &#125;<br></code></pre></td></tr></table></figure>
<h5 id="强制转换"><a href="#强制转换" class="headerlink" title="强制转换"></a>强制转换</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">forceStr:</span> <span class="hljs-type">!!str</span> <span class="hljs-number">123</span><br><span class="hljs-attr">forceBoll:</span> <span class="hljs-type">!!str</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">forceInt:</span> <span class="hljs-type">!!int</span> <span class="hljs-string">&quot;123&quot;</span><br></code></pre></td></tr></table></figure>
<p>回显的结果是：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">forceStr:</span> <span class="hljs-string">&#x27;123&#x27;</span><span class="hljs-string">,</span><br><span class="hljs-attr">forceBoll:</span> <span class="hljs-string">&#x27;true&#x27;</span><span class="hljs-string">,</span><br><span class="hljs-attr">forceInt:</span> <span class="hljs-number">123</span> <span class="hljs-string">&#125;</span><br></code></pre></td></tr></table></figure>
<h5 id="编写数组"><a href="#编写数组" class="headerlink" title="编写数组"></a>编写数组</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#数组</span><br><span class="hljs-attr">myFavourite:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">backaetball</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">football</span><br><br><span class="hljs-attr">myFavourite2:</span> [<span class="hljs-string">&quot;bass&quot;</span>,<span class="hljs-string">&quot;bahddd&quot;</span>]<br></code></pre></td></tr></table></figure>
<p>回显的结果是：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">myFavourite:</span> [ <span class="hljs-string">&#x27;backaetball&#x27;</span>, <span class="hljs-string">&#x27;football&#x27;</span> ]<span class="hljs-string">,</span><br><span class="hljs-attr">myFavourite2:</span> [ <span class="hljs-string">&#x27;bass&#x27;</span>, <span class="hljs-string">&#x27;bahddd&#x27;</span> ]<span class="hljs-string">,</span><br></code></pre></td></tr></table></figure>
<h5 id="编写对象"><a href="#编写对象" class="headerlink" title="编写对象"></a>编写对象</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#对象</span><br><span class="hljs-attr">autotest:</span> <br>  <span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">password:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">age:</span> <span class="hljs-number">18</span><br>  <span class="hljs-attr">male:</span> <span class="hljs-literal">true</span><br>  <br><span class="hljs-attr">autotest2:</span> [&#123;<span class="hljs-attr">username:</span> <span class="hljs-string">admin</span>, <span class="hljs-attr">password:</span> <span class="hljs-string">root</span>, <span class="hljs-attr">age:</span> <span class="hljs-number">22</span>, <span class="hljs-attr">male:</span> <span class="hljs-literal">false</span>&#125;]<br></code></pre></td></tr></table></figure>
<p>回显的结果是：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">autotest:</span> &#123; <span class="hljs-attr">username:</span> <span class="hljs-string">&#x27;root&#x27;</span>, <span class="hljs-attr">password:</span> <span class="hljs-string">&#x27;root&#x27;</span>, <span class="hljs-attr">age:</span> <span class="hljs-number">18</span>, <span class="hljs-attr">male:</span> <span class="hljs-literal">true</span> &#125;<span class="hljs-string">,</span><br><span class="hljs-attr">autotest2:</span> [ &#123; <span class="hljs-attr">username:</span> <span class="hljs-string">&#x27;admin&#x27;</span>, <span class="hljs-attr">password:</span> <span class="hljs-string">&#x27;root&#x27;</span>, <span class="hljs-attr">age:</span> <span class="hljs-number">22</span>, <span class="hljs-attr">male:</span> <span class="hljs-literal">false</span> &#125; ]<span class="hljs-string">,</span><br></code></pre></td></tr></table></figure>
<h5 id="编写复合结构的"><a href="#编写复合结构的" class="headerlink" title="编写复合结构的"></a>编写复合结构的</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#复合结构</span><br><span class="hljs-attr">companies:</span> <br>  <span class="hljs-bullet">-</span> <br>    <span class="hljs-attr">id:</span> <span class="hljs-number">1</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">zhangsan</span><br>    <span class="hljs-attr">value:</span> <span class="hljs-number">10e+11</span><br>     <br>  <span class="hljs-bullet">-</span> <br>    <span class="hljs-attr">id:</span> <span class="hljs-number">2</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">lisi</span><br>    <span class="hljs-attr">value:</span> <span class="hljs-number">10e+12</span><br>    <br><br><span class="hljs-attr">websites:</span> <br>  <span class="hljs-attr">baidu:</span> <span class="hljs-string">www.baidu.com</span><br>  <span class="hljs-attr">google:</span> <span class="hljs-string">www.google.com</span><br></code></pre></td></tr></table></figure>
<p>回显的结果是：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">companies:</span> <br>   [ &#123; <span class="hljs-attr">id:</span> <span class="hljs-number">1</span>, <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;zhangsan&#x27;</span>, <span class="hljs-attr">value:</span> <span class="hljs-number">1000000000000</span> &#125;,<br>     &#123; <span class="hljs-attr">id:</span> <span class="hljs-number">2</span>, <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;lisi&#x27;</span>, <span class="hljs-attr">value:</span> <span class="hljs-number">10000000000000</span> &#125; ]<span class="hljs-string">,</span><br>  <span class="hljs-attr">websites:</span> &#123; <span class="hljs-attr">baidu:</span> <span class="hljs-string">&#x27;www.baidu.com&#x27;</span>, <span class="hljs-attr">google:</span> <span class="hljs-string">&#x27;www.google.com&#x27;</span> &#125; <span class="hljs-string">&#125;</span><br></code></pre></td></tr></table></figure>
<h5 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#引用</span><br><span class="hljs-attr">father:</span> <span class="hljs-meta">&amp;father_lastName</span><br>  <span class="hljs-attr">lastName:</span> <span class="hljs-string">周</span><br>  <br><span class="hljs-attr">son:</span> <br>  <span class="hljs-string">&lt;&lt;:</span> <span class="hljs-meta">*father_lastName</span><br>  <span class="hljs-attr">firstName:</span> <span class="hljs-string">董</span><br>  <span class="hljs-attr">age:</span> <span class="hljs-number">18</span><br></code></pre></td></tr></table></figure>
<p>回显的结果是：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">father:</span> &#123; <span class="hljs-attr">lastName:</span> <span class="hljs-string">&#x27;周&#x27;</span> &#125;<span class="hljs-string">,</span><br><span class="hljs-attr">son:</span> &#123; <span class="hljs-attr">lastName:</span> <span class="hljs-string">&#x27;周&#x27;</span>, <span class="hljs-attr">firstName:</span> <span class="hljs-string">&#x27;董&#x27;</span>, <span class="hljs-attr">age:</span> <span class="hljs-number">18</span> &#125; <span class="hljs-string">&#125;</span><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>yaml</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Postman如何做接口测试</title>
    <url>/posts/20480.html</url>
    <content><![CDATA[<h2 id="Postman安装"><a href="#Postman安装" class="headerlink" title="Postman安装"></a>Postman安装</h2><blockquote>
<p>Postman下载:<a href="https://www.postman.com/downloads/">https://www.postman.com/downloads/</a></p>
</blockquote>
<p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930140727796-1474676985.png" alt="image"><br>下载后双击即可安装，安装后需要创建账号，登录后可以在不同平台同步数据。</p>
<h2 id="postman主要功能说明"><a href="#postman主要功能说明" class="headerlink" title="postman主要功能说明"></a>postman主要功能说明</h2><h3 id="postman主要模块功能介绍"><a href="#postman主要模块功能介绍" class="headerlink" title="postman主要模块功能介绍"></a>postman主要模块功能介绍</h3><p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930141658938-644997879.png" alt="image"><br>点击最上面的测试集的添加目录图标,来新增一个根目录,这样等于新建了一个项目.可以将一个项目或一个模块的用例都存放在这个目录之下,并且在根目录下还可以创建子目录进行用例的细分.<br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930141933281-21281875.png" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930142334335-1975349533.png" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930143040713-1998172184.png" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930143155803-1149460422.png" alt="image"><br>创建了目录后可以进行用例的新建,具体是通过测试集右侧区域中的三个点来新增一个空的用例模板,当然也可以通过复制一个已有的用例来达到新建用例的目的.<br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930143643267-267998851.png" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930143821733-448277851.png" alt="image"></p>
<h2 id="发送http请求和分析响应数据"><a href="#发送http请求和分析响应数据" class="headerlink" title="发送http请求和分析响应数据"></a>发送http请求和分析响应数据</h2><blockquote>
<p>在postman中新建用例对应即将要执行的一次请求,默认为空,测试人员需要添加相应的请求信息,需要添加的信息包括:<br>请求的方法:get或post<br>请求的URL:协议+域名/IP+端口+资源路径</p>
</blockquote>
<p>不带参数的请求：<br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930144949679-2031501958.png" alt="image"><br>发送需要认证的get接口：<br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930145356566-302874008.png" alt="image"></p>
<p><p>------------恢复内容开始------------</p>## Postman安装</p>
<blockquote>
<p>Postman下载:<a href="https://www.postman.com/downloads/">https://www.postman.com/downloads/</a></p>
</blockquote>
<p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930140727796-1474676985.png" alt="image"><br>下载后双击即可安装，安装后需要创建账号，登录后可以在不同平台同步数据。</p>
<h2 id="postman主要功能说明-1"><a href="#postman主要功能说明-1" class="headerlink" title="postman主要功能说明"></a>postman主要功能说明</h2><h3 id="1、postman主要模块功能介绍"><a href="#1、postman主要模块功能介绍" class="headerlink" title="1、postman主要模块功能介绍"></a>1、postman主要模块功能介绍</h3><p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930141658938-644997879.png" alt="image"><br>点击最上面的测试集的添加目录图标,来新增一个根目录,这样等于新建了一个项目.可以将一个项目或一个模块的用例都存放在这个目录之下,并且在根目录下还可以创建子目录进行用例的细分.<br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930141933281-21281875.png" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930142334335-1975349533.png" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930143040713-1998172184.png" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930143155803-1149460422.png" alt="image"><br>创建了目录后可以进行用例的新建,具体是通过测试集右侧区域中的三个点来新增一个空的用例模板,当然也可以通过复制一个已有的用例来达到新建用例的目的.<br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930143643267-267998851.png" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930143821733-448277851.png" alt="image"></p>
<h2 id="发送http请求和分析响应数据-1"><a href="#发送http请求和分析响应数据-1" class="headerlink" title="发送http请求和分析响应数据"></a>发送http请求和分析响应数据</h2><blockquote>
<p>在postman中新建用例对应即将要执行的一次请求,默认为空,测试人员需要添加相应的请求信息,需要添加的信息包括:<br>请求的方法:get或post<br>请求的URL:协议+域名/IP+端口+资源路径</p>
</blockquote>
<h3 id="get请求"><a href="#get请求" class="headerlink" title="get请求"></a>get请求</h3><p>不带参数的请求：<br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930144949679-2031501958.png" alt="image"><br>发送需要认证的get接口：<br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930145356566-302874008.png" alt="image"></p>
<h3 id="post请求"><a href="#post请求" class="headerlink" title="post请求"></a>post请求</h3><p>选择请求格式为post<br>传参:</p>
<ul>
<li>Body中raw：支持任意格式的数据编辑，选json(也可xml或html传参)</li>
<li>Body中Form-data：以表单的方式进行数据编辑</li>
<li>Body中x-www-form-urlencoded：与form-data类似,也是以表单的方式进行数据编辑,但是表单中的每一条数据只能是键值对.</li>
<li>Body中Binary：用来上传文件.并且由于没有键值,因此一次只能上传一个文件.</li>
</ul>
<h3 id="Pre-request-Scrip"><a href="#Pre-request-Scrip" class="headerlink" title="Pre-request Scrip"></a>Pre-request Scrip</h3><p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930162308076-1808125313.png" alt="image"></p>
<h3 id="Tests"><a href="#Tests" class="headerlink" title="Tests"></a>Tests</h3><p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930162447739-73951982.png" alt="image"></p>
<h3 id="postman保存测试用例"><a href="#postman保存测试用例" class="headerlink" title="postman保存测试用例"></a>postman保存测试用例</h3><p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930162802129-712553146.png" alt="image"></p>
<h3 id="postman批量运行"><a href="#postman批量运行" class="headerlink" title="postman批量运行"></a>postman批量运行</h3><p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930163157269-506206050.png" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930163557849-735098320.png" alt="image"></p>
<h3 id="选择文件进行参数化"><a href="#选择文件进行参数化" class="headerlink" title="选择文件进行参数化"></a>选择文件进行参数化</h3><h4 id="json文件"><a href="#json文件" class="headerlink" title="json文件"></a>json文件</h4><p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930163701449-175534991.png" alt="image"></p>
<h4 id="txt文件"><a href="#txt文件" class="headerlink" title="txt文件"></a>txt文件</h4><p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930163749979-1797171733.png" alt="image"><br>使用参数时，变量名称要与文件里的变量名保持一致</p>
<h3 id="postman环境管理"><a href="#postman环境管理" class="headerlink" title="postman环境管理"></a>postman环境管理</h3><p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930164820092-417032193.png" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930164916316-627760783.png" alt="image"><br><strong>引用环境信息：</strong></p>
<h3 id="postman全局变量"><a href="#postman全局变量" class="headerlink" title="postman全局变量"></a>postman全局变量</h3><p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930165617726-198803985.png" alt="image"><br>也可以用javascript写变量：<br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930165827612-135485145.png" alt="image"><br><strong>引用全局变量信息：</strong><br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930165916089-2064641423.png" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930165950862-1692127573.png" alt="image"><br>Cookie用途：一个请求需要用到用户的登录状态（sessionid或token），一般    登录状态会记录在cookie    ，postman会自动记录登录状态写入cookies.所以执行非登录接口的请求前，需要先执行登录接口请求。<br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930170252528-201406384.png" alt="image"></p>
<h2 id="关联"><a href="#关联" class="headerlink" title="关联"></a>关联</h2><p><p>------------恢复内容结束------------</p></p>
<p><p>------------恢复内容开始------------</p>## Postman安装</p>
<blockquote>
<p>Postman下载:<a href="https://www.postman.com/downloads/">https://www.postman.com/downloads/</a></p>
</blockquote>
<p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930140727796-1474676985.png" alt="image"><br>下载后双击即可安装，安装后需要创建账号，登录后可以在不同平台同步数据。</p>
<h2 id="postman主要功能说明-2"><a href="#postman主要功能说明-2" class="headerlink" title="postman主要功能说明"></a>postman主要功能说明</h2><h3 id="1、postman主要模块功能介绍-1"><a href="#1、postman主要模块功能介绍-1" class="headerlink" title="1、postman主要模块功能介绍"></a>1、postman主要模块功能介绍</h3><p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930141658938-644997879.png" alt="image"><br>点击最上面的测试集的添加目录图标,来新增一个根目录,这样等于新建了一个项目.可以将一个项目或一个模块的用例都存放在这个目录之下,并且在根目录下还可以创建子目录进行用例的细分.<br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930141933281-21281875.png" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930142334335-1975349533.png" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930143040713-1998172184.png" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930143155803-1149460422.png" alt="image"><br>创建了目录后可以进行用例的新建,具体是通过测试集右侧区域中的三个点来新增一个空的用例模板,当然也可以通过复制一个已有的用例来达到新建用例的目的.<br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930143643267-267998851.png" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930143821733-448277851.png" alt="image"></p>
<h2 id="发送http请求和分析响应数据-2"><a href="#发送http请求和分析响应数据-2" class="headerlink" title="发送http请求和分析响应数据"></a>发送http请求和分析响应数据</h2><blockquote>
<p>在postman中新建用例对应即将要执行的一次请求,默认为空,测试人员需要添加相应的请求信息,需要添加的信息包括:<br>请求的方法:get或post<br>请求的URL:协议+域名/IP+端口+资源路径</p>
</blockquote>
<h3 id="get请求-1"><a href="#get请求-1" class="headerlink" title="get请求"></a>get请求</h3><p>不带参数的请求：<br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930144949679-2031501958.png" alt="image"><br>发送需要认证的get接口：<br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930145356566-302874008.png" alt="image"></p>
<h3 id="post请求-1"><a href="#post请求-1" class="headerlink" title="post请求"></a>post请求</h3><p>选择请求格式为post<br>传参:</p>
<ul>
<li>Body中raw：支持任意格式的数据编辑，选json(也可xml或html传参)</li>
<li>Body中Form-data：以表单的方式进行数据编辑</li>
<li>Body中x-www-form-urlencoded：与form-data类似,也是以表单的方式进行数据编辑,但是表单中的每一条数据只能是键值对.</li>
<li>Body中Binary：用来上传文件.并且由于没有键值,因此一次只能上传一个文件.</li>
</ul>
<h3 id="Pre-request-Scrip-1"><a href="#Pre-request-Scrip-1" class="headerlink" title="Pre-request Scrip"></a>Pre-request Scrip</h3><p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930162308076-1808125313.png" alt="image"></p>
<h3 id="Tests-1"><a href="#Tests-1" class="headerlink" title="Tests"></a>Tests</h3><p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930162447739-73951982.png" alt="image"></p>
<h3 id="postman保存测试用例-1"><a href="#postman保存测试用例-1" class="headerlink" title="postman保存测试用例"></a>postman保存测试用例</h3><p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930162802129-712553146.png" alt="image"></p>
<h3 id="postman批量运行-1"><a href="#postman批量运行-1" class="headerlink" title="postman批量运行"></a>postman批量运行</h3><p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930163157269-506206050.png" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930163557849-735098320.png" alt="image"></p>
<h3 id="选择文件进行参数化-1"><a href="#选择文件进行参数化-1" class="headerlink" title="选择文件进行参数化"></a>选择文件进行参数化</h3><h4 id="json文件-1"><a href="#json文件-1" class="headerlink" title="json文件"></a>json文件</h4><p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930163701449-175534991.png" alt="image"></p>
<h4 id="txt文件-1"><a href="#txt文件-1" class="headerlink" title="txt文件"></a>txt文件</h4><p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930163749979-1797171733.png" alt="image"><br>使用参数时，变量名称要与文件里的变量名保持一致</p>
<h3 id="postman环境管理-1"><a href="#postman环境管理-1" class="headerlink" title="postman环境管理"></a>postman环境管理</h3><p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930164820092-417032193.png" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930164916316-627760783.png" alt="image"><br><strong>引用环境信息：</strong></p>
<h3 id="postman全局变量-1"><a href="#postman全局变量-1" class="headerlink" title="postman全局变量"></a>postman全局变量</h3><p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930165617726-198803985.png" alt="image"><br>也可以用javascript写变量：<br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930165827612-135485145.png" alt="image"><br><strong>引用全局变量信息：</strong><br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930165916089-2064641423.png" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930165950862-1692127573.png" alt="image"><br>Cookie用途：一个请求需要用到用户的登录状态（sessionid或token），一般    登录状态会记录在cookie    ，postman会自动记录登录状态写入cookies.所以执行非登录接口的请求前，需要先执行登录接口请求。<br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930170252528-201406384.png" alt="image"></p>
<h2 id="关联-1"><a href="#关联-1" class="headerlink" title="关联"></a>关联</h2><h3 id="断言"><a href="#断言" class="headerlink" title="断言"></a>断言</h3><p>Postman通过tests插入断言<br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930170938604-1759636383.png" alt="image"></p>
<h3 id="关联-2"><a href="#关联-2" class="headerlink" title="关联"></a>关联</h3><blockquote>
<p>把上一个接口的返回数据作为下一个参数的输入参数使用</p>
</blockquote>
<ul>
<li>先发送一个接口，查看返回值</li>
<li>在上一个接口的tests里面添加js脚本<ul>
<li>获取上一个接口返回值并赋值给变量</li>
<li>定义全局变量，并获取要作为下一个接口输入的数据字段</li>
</ul>
</li>
<li>引用全局变量</li>
</ul>
<h2 id="生成并导出接口脚本"><a href="#生成并导出接口脚本" class="headerlink" title="生成并导出接口脚本"></a>生成并导出接口脚本</h2><h3 id="导出接口测试脚本"><a href="#导出接口测试脚本" class="headerlink" title="导出接口测试脚本"></a>导出接口测试脚本</h3><p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930172125725-1995793530.png" alt="image"></p>
<h3 id="导出测试集"><a href="#导出测试集" class="headerlink" title="导出测试集"></a>导出测试集</h3><p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930172343454-1340003075.png" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930172409341-367029452.png" alt="image"></p>
<h3 id="导入测试集"><a href="#导入测试集" class="headerlink" title="导入测试集"></a>导入测试集</h3><p><img src="https://img2020.cnblogs.com/blog/2267618/202109/2267618-20210930172605332-120058437.png" alt="image"></p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>postman</tag>
      </tags>
  </entry>
  <entry>
    <title>测试必会的sql基本操作</title>
    <url>/posts/11783.html</url>
    <content><![CDATA[<h5 id="1、创建数据库"><a href="#1、创建数据库" class="headerlink" title="1、创建数据库"></a>1、创建数据库</h5><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> database 数据库名;<br><span class="hljs-keyword">create</span> database 数据库名 <span class="hljs-type">character</span> <span class="hljs-keyword">set</span> 字符集;<br></code></pre></td></tr></table></figure>
<h5 id="2、查看全部的数据库"><a href="#2、查看全部的数据库" class="headerlink" title="2、查看全部的数据库"></a>2、查看全部的数据库</h5><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> databases;   <br></code></pre></td></tr></table></figure>
<p><strong>3、查看某个数据库的定义的信息:</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> <span class="hljs-keyword">create</span> database 数据库名;         <br></code></pre></td></tr></table></figure>
<h5 id="4、删除数据库"><a href="#4、删除数据库" class="headerlink" title="4、删除数据库"></a>4、删除数据库</h5><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">drop</span> database 数据库名称;<br></code></pre></td></tr></table></figure>
<p><strong>5、切换数据库：</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">use 数据库名;<br></code></pre></td></tr></table></figure>
<p><strong>6、查看正在使用的数据库:</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> database();          <br></code></pre></td></tr></table></figure>
<p><strong>7、查看数据库中的所有表：</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> tables;<br></code></pre></td></tr></table></figure>
<p><strong>8、查看表结构：</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">desc</span> 表名;    <br></code></pre></td></tr></table></figure>
<p><strong>9、修改表删除列.</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 <span class="hljs-keyword">drop</span> 列名;            <br></code></pre></td></tr></table></figure>
<p><strong>10、修改表名</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">rename <span class="hljs-keyword">table</span> 表名 <span class="hljs-keyword">to</span> 新表名;              <br></code></pre></td></tr></table></figure>
<p><strong>11、修改表的字符集</strong>  </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 <span class="hljs-type">character</span> <span class="hljs-keyword">set</span> 字符集;<br></code></pre></td></tr></table></figure>
<p><strong>12、数据类型与约束</strong></p>
<ul>
<li>int ：整数 有符号和无符号，长度不受限制</li>
<li>varchar：字符串 中文/数字/字母都是一字字符，受长度限制</li>
<li>decimal ：小数 decimal（5，2）总长度5位，整数3位，小数2位</li>
<li>主键 id ：int unsigned primary key auto_increment </li>
<li>非空 ：not null</li>
<li>唯一 ：unique</li>
<li>默认 ：default</li>
</ul>
<h3 id="SQL中表的操作"><a href="#SQL中表的操作" class="headerlink" title="SQL中表的操作"></a><strong>SQL中表的操作</strong></h3><h4 id="1、创建表"><a href="#1、创建表" class="headerlink" title="1、创建表"></a><strong>1、创建表</strong></h4><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> 表名（字段名 类型 约束，.....）<br></code></pre></td></tr></table></figure>
<h4 id="2、删除表"><a href="#2、删除表" class="headerlink" title="2、删除表"></a><strong>2、删除表</strong></h4><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">drop</span> <span class="hljs-keyword">table</span> 表名<br><span class="hljs-keyword">drop</span> <span class="hljs-keyword">table</span> if <span class="hljs-keyword">exists</span> 表名<br></code></pre></td></tr></table></figure>
<h4 id="3、表数据操作"><a href="#3、表数据操作" class="headerlink" title="3、表数据操作"></a><strong>3、表数据操作</strong></h4><h5 id="3-1、添加数据"><a href="#3-1、添加数据" class="headerlink" title="3.1、添加数据"></a><strong>3.1、添加数据</strong></h5><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> 表名 <span class="hljs-keyword">values</span>（值<span class="hljs-number">1</span>，值<span class="hljs-number">2.</span>..）给表中所有字段插入数据<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> 表名（字段<span class="hljs-number">2</span>，字段<span class="hljs-number">1</span>）<span class="hljs-keyword">values</span>（值<span class="hljs-number">2</span>，值<span class="hljs-number">1</span>）<br></code></pre></td></tr></table></figure>
<h5 id="3-2、修改数据"><a href="#3-2、修改数据" class="headerlink" title="3.2、修改数据"></a><strong>3.2、修改数据</strong></h5><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">update</span> 表名 <span class="hljs-keyword">set</span> 字段<span class="hljs-number">1</span><span class="hljs-operator">=</span>值<span class="hljs-number">1</span>，字段<span class="hljs-number">2</span><span class="hljs-operator">=</span>值<span class="hljs-number">2</span> <span class="hljs-keyword">where</span> 条件<br>isdelete 逻辑删除<br></code></pre></td></tr></table></figure>
<h5 id="3-3、删除数据"><a href="#3-3、删除数据" class="headerlink" title="3.3、删除数据"></a><strong>3.3、删除数据</strong></h5><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">where</span> 条件<br></code></pre></td></tr></table></figure>
<h5 id="3-4、查询数据"><a href="#3-4、查询数据" class="headerlink" title="3.4、查询数据"></a><strong>3.4、查询数据</strong></h5><ul>
<li><h6 id="3-4-1、查询表中所有信息"><a href="#3-4-1、查询表中所有信息" class="headerlink" title="3.4.1、查询表中所有信息"></a><strong>3.4.1、查询表中所有信息</strong></h6><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">where</span> 条件<br></code></pre></td></tr></table></figure>
</li>
<li><h6 id="3-4-2、查询表中指定字段"><a href="#3-4-2、查询表中指定字段" class="headerlink" title="3.4.2、查询表中指定字段"></a>3.4.2、查询表中指定字段</h6><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 字段<span class="hljs-number">1</span>，字段<span class="hljs-number">2</span>，字段<span class="hljs-number">3.</span>..<span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">where</span> 条件<br></code></pre></td></tr></table></figure>
</li>
<li><h6 id="3-4-3、给字段取别名"><a href="#3-4-3、给字段取别名" class="headerlink" title="3.4.3、给字段取别名"></a><strong>3.4.3、给字段取别名</strong></h6><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 字段<span class="hljs-number">1</span> （<span class="hljs-keyword">as</span>） 别名，字段<span class="hljs-number">2</span> 别名 <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">where</span> 条件<br></code></pre></td></tr></table></figure>
</li>
<li><h6 id="3-4-4、去重"><a href="#3-4-4、去重" class="headerlink" title="3.4.4、去重"></a><strong>3.4.4、去重</strong></h6><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> 字段 <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">where</span> 条件<br></code></pre></td></tr></table></figure>
</li>
<li><h6 id="3-4-5、比较运算符"><a href="#3-4-5、比较运算符" class="headerlink" title="3.4.5、比较运算符"></a><strong>3.4.5、比较运算符</strong></h6><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">where</span> age<span class="hljs-operator">&gt;</span><span class="hljs-number">20</span><br></code></pre></td></tr></table></figure>
</li>
<li><h6 id="3-4-6、逻辑运算符"><a href="#3-4-6、逻辑运算符" class="headerlink" title="3.4.6、逻辑运算符"></a><strong>3.4.6、逻辑运算符</strong></h6><ul>
<li><p>and  满足所有条件</p>
</li>
<li><p>or   满足其中任意一个条件</p>
</li>
<li><p>not  不满足条件</p>
</li>
</ul>
</li>
<li><h6 id="3-4-7、模糊查询"><a href="#3-4-7、模糊查询" class="headerlink" title="3.4.7、模糊查询"></a><strong>3.4.7、模糊查询</strong></h6><ul>
<li>like </li>
<li>% 0到任意多个字符</li>
<li>_表示任意一个字符</li>
</ul>
</li>
<li><h6 id="3-4-8、范围查询"><a href="#3-4-8、范围查询" class="headerlink" title="3.4.8、范围查询"></a><strong>3.4.8、范围查询</strong></h6><ul>
<li>in  在一个非连续的范围内</li>
<li>between and  在一个连续的范围内 闭区间 小的数据在前</li>
</ul>
</li>
<li><h6 id="3-4-9、空查询"><a href="#3-4-9、空查询" class="headerlink" title="3.4.9、空查询"></a><strong>3.4.9、空查询</strong></h6><ul>
<li>is null</li>
<li>‘’空字符串</li>
</ul>
</li>
</ul>
<h5 id="3-5、多表查询"><a href="#3-5、多表查询" class="headerlink" title="3.5、多表查询"></a><strong>3.5、多表查询</strong></h5><ul>
<li><p><strong>3.5.1、排序</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">where</span> 条件 <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> 列<span class="hljs-number">1</span> （<span class="hljs-keyword">asc</span>）<span class="hljs-operator">|</span><span class="hljs-keyword">desc</span>，列<span class="hljs-number">2</span> <span class="hljs-keyword">asc</span><span class="hljs-operator">|</span><span class="hljs-keyword">desc</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> 条件 <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-keyword">convert</span>（字段 <span class="hljs-keyword">using</span> gbk）<span class="hljs-keyword">asc</span><span class="hljs-operator">|</span><span class="hljs-keyword">desc</span>   纯中文转换后排序<br></code></pre></td></tr></table></figure>
</li>
<li><p><strong>3.5.2、聚合函数</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">count： 总数 <span class="hljs-keyword">select</span> count（<span class="hljs-operator">*</span><span class="hljs-operator">/</span>字段）<span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">where</span> 条件 <br>max：  最大值 <span class="hljs-keyword">select</span> max（age） <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">where</span> 条件<br>min：  最小值 <span class="hljs-keyword">select</span> min（age） <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">where</span> 条件<br>avg：  平均值 <span class="hljs-keyword">select</span> avg（grade） <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">where</span> 条件<br>sum：  求和   <span class="hljs-keyword">select</span> sum（grade） <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">where</span> 条件<br><span class="hljs-keyword">select</span> avg（age）<span class="hljs-keyword">as</span> 平均年龄，max（age）最大年龄，min（age）最小年龄 <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">where</span> 条件<br></code></pre></td></tr></table></figure>
</li>
<li><p><strong>3.5.3、分组</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> 字段，字段<span class="hljs-number">2</span> <span class="hljs-keyword">having</span> 条件<br></code></pre></td></tr></table></figure>
</li>
<li><p><strong>3.5.4、分页</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> 表名 limit <span class="hljs-number">0</span>，<span class="hljs-number">5</span> 从第一行数据开始，显示<span class="hljs-number">5</span>行  <br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> 表名 limit （n<span class="hljs-number">-1</span>）<span class="hljs-operator">*</span>m，m   n代表第几页，m代表每页显示多少条数据<br></code></pre></td></tr></table></figure>
</li>
<li><p><strong>3.5.5、等值连接</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">方式一 ：<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> 表<span class="hljs-number">1</span>，表<span class="hljs-number">2</span>,表<span class="hljs-number">3</span> <span class="hljs-keyword">where</span> 表<span class="hljs-number">1.</span>列<span class="hljs-operator">=</span>表<span class="hljs-number">2.</span>列 <span class="hljs-keyword">and</span> 表<span class="hljs-number">2.</span>列<span class="hljs-operator">=</span>表<span class="hljs-number">3.</span>列 <span class="hljs-keyword">where</span> 条件<br>方式二 内连接  取交集：<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> 表<span class="hljs-number">1</span> <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> 表<span class="hljs-number">2</span> <span class="hljs-keyword">on</span> 表<span class="hljs-number">1.</span>列<span class="hljs-operator">=</span>表<span class="hljs-number">2.</span>列 <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> 表<span class="hljs-number">3</span> <span class="hljs-keyword">on</span> 表<span class="hljs-number">2.</span>列<span class="hljs-operator">=</span>表<span class="hljs-number">3.</span>列 <span class="hljs-keyword">where</span> 条件<br></code></pre></td></tr></table></figure>
</li>
<li><p><strong>3.5.6、左连接</strong></p>
<blockquote>
<p>左边的表全显示，右边表能匹配的上的数据连接显示，匹配不上（没有的）以null补充</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> 表<span class="hljs-number">1</span> <span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> 表<span class="hljs-number">2</span> <span class="hljs-keyword">on</span> 表<span class="hljs-number">1.</span>列<span class="hljs-operator">=</span>表<span class="hljs-number">2.</span>列 <span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> 表<span class="hljs-number">3</span> <span class="hljs-keyword">on</span> 表<span class="hljs-number">2.</span>列<span class="hljs-operator">=</span>表<span class="hljs-number">3.</span>列 <span class="hljs-keyword">where</span> 条件<br></code></pre></td></tr></table></figure>
</li>
<li><p><strong>3.5.7、右连接</strong></p>
<blockquote>
<p>右边的表全显示，左边表能匹配上的数据连接显示，匹配不上（没有的）以null补充  </p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> 表<span class="hljs-number">1</span> <span class="hljs-keyword">right</span> <span class="hljs-keyword">join</span> 表<span class="hljs-number">2</span> <span class="hljs-keyword">on</span> 表<span class="hljs-number">1.</span>列<span class="hljs-operator">=</span>表<span class="hljs-number">2.</span>列 <span class="hljs-keyword">right</span> <span class="hljs-keyword">join</span> 表<span class="hljs-number">3</span> <span class="hljs-keyword">on</span> 表<span class="hljs-number">2.</span>列<span class="hljs-operator">=</span>表<span class="hljs-number">3.</span>列 <span class="hljs-keyword">where</span> 条件<br></code></pre></td></tr></table></figure>
</li>
<li><p><strong>3.5.8、自关联</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> 表 别名<span class="hljs-number">1</span> <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> 表 别名<span class="hljs-number">2</span> <span class="hljs-keyword">on</span> 别名<span class="hljs-number">1.</span>aid<span class="hljs-operator">=</span>别名<span class="hljs-number">2.</span>pid<br></code></pre></td></tr></table></figure>
</li>
<li><h5 id="3-5-9、子查询"><a href="#3-5-9、子查询" class="headerlink" title="3.5.9、子查询"></a><strong>3.5.9、子查询</strong></h5><ul>
<li><h6 id="标量子查询"><a href="#标量子查询" class="headerlink" title="标量子查询"></a><strong>标量子查询</strong></h6></li>
</ul>
<blockquote>
<p>子查询结果输出的是一行一列</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> age<span class="hljs-operator">&gt;</span>(<span class="hljs-keyword">select</span> <span class="hljs-built_in">avg</span>(age) <span class="hljs-keyword">from</span> student)<br></code></pre></td></tr></table></figure>
<ul>
<li><h6 id="列子查询"><a href="#列子查询" class="headerlink" title="列子查询"></a><strong>列子查询</strong></h6></li>
</ul>
<blockquote>
<p>子查询的结果输出的是一列多行</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">in</span>:  <br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> age <span class="hljs-keyword">in</span><br>(<span class="hljs-keyword">select</span> age <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> age<span class="hljs-operator">=</span><span class="hljs-number">18</span>)<br><br><span class="hljs-keyword">any</span><span class="hljs-operator">/</span><span class="hljs-keyword">some</span>:  <span class="hljs-operator">&gt;</span>：大于最小的；   <span class="hljs-operator">&lt;</span>： 小于最大的<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> age<span class="hljs-operator">&gt;</span><span class="hljs-operator">/</span><span class="hljs-operator">&lt;</span> <span class="hljs-keyword">any</span> <br>(<span class="hljs-keyword">select</span> age <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> age <span class="hljs-keyword">between</span> <span class="hljs-number">18</span> <span class="hljs-keyword">and</span> <span class="hljs-number">22</span>)<br><br><span class="hljs-keyword">all</span>:  <span class="hljs-operator">&gt;</span>：大于最大的；  <span class="hljs-operator">&lt;</span>： 小于最小的<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> age<span class="hljs-operator">&gt;</span><span class="hljs-operator">/</span><span class="hljs-operator">&lt;</span><span class="hljs-keyword">all</span> <br>(<span class="hljs-keyword">select</span> age <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> age <span class="hljs-keyword">between</span> <span class="hljs-number">18</span> <span class="hljs-keyword">and</span> <span class="hljs-number">22</span>）<br></code></pre></td></tr></table></figure>
<ul>
<li><h6 id="行子查询"><a href="#行子查询" class="headerlink" title="行子查询"></a>行子查询</h6></li>
</ul>
<blockquote>
<p>子查询的结果输出的是一行多列</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span>（name，sex）<span class="hljs-operator">=</span>（<span class="hljs-keyword">select</span> name，sex <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> sex<span class="hljs-operator">=</span><span class="hljs-string">&#x27;男&#x27;</span> <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> age <span class="hljs-keyword">desc</span> limit <span class="hljs-number">1</span>）<br></code></pre></td></tr></table></figure>
<ul>
<li><h6 id="表子查询"><a href="#表子查询" class="headerlink" title="表子查询"></a>表子查询</h6></li>
</ul>
<blockquote>
<p>子查询的输出结果是一个表</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> scores <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> （<span class="hljs-keyword">select</span> cno <span class="hljs-keyword">from</span> courses <span class="hljs-keyword">where</span> cname <span class="hljs-keyword">in</span>(<span class="hljs-string">&#x27;数据库&#x27;</span>,‘系统测试’) <span class="hljs-keyword">as</span> c <span class="hljs-keyword">on</span> scores.cno<span class="hljs-operator">=</span>c.cno<br></code></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="3-6、数据分表"><a href="#3-6、数据分表" class="headerlink" title="3.6、数据分表"></a><strong>3.6、数据分表</strong></h5><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> goods_cate（cate_name） <span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> cate <span class="hljs-keyword">from</span> goods;<br><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> goods_cate (id <span class="hljs-type">int</span> unsigned <span class="hljs-keyword">primary</span> key auto_incremen,cate <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>)) <span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> cate <span class="hljs-keyword">from</span> goods;<br><br><span class="hljs-keyword">update</span> goods <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> goods_cate <span class="hljs-keyword">on</span> goods_cate.cate<span class="hljs-operator">=</span>goods.cate <span class="hljs-keyword">set</span> goods.cate<span class="hljs-operator">=</span>goods_cate.id<br></code></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>性能测试主要关注点</title>
    <url>/posts/32473.html</url>
    <content><![CDATA[<h3 id="性能关注点"><a href="#性能关注点" class="headerlink" title="性能关注点"></a>性能关注点</h3><p>接口响应时间</p>
<p>吞吐量</p>
<p>TPS: 事务处理能力，每秒处理事务数（打开页面、登录、选择商品、加入购物车、下单、付款）</p>
<p>注意：“日活” 每日活跃用户数,是运营数据，与性能无关</p>
<p><strong>八二原则</strong></p>
<blockquote>
<p>计算QPS/TPS</p>
</blockquote>
<p>相信80%会集中在20%时间内,24小时的流量集中在白天8小时内，同时在午高峰达到高峰</p>
<h4 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h4><p>根据相应耗时计算公式预估所需并发，一次请求100ms</p>
<p>根据 <code>QPS = Vue * Rt</code></p>
<p>1000000 <em> 80% / 8 </em> 3600 * 20% = 277 QPS</p>
<p>需要27个并发</p>
]]></content>
      <categories>
        <category>经验分享</category>
      </categories>
      <tags>
        <tag>性能测试</tag>
      </tags>
  </entry>
  <entry>
    <title>关闭chrome浏览器自动更新</title>
    <url>/posts/43612.html</url>
    <content><![CDATA[<h1 id="屏蔽谷歌的更新服务器"><a href="#屏蔽谷歌的更新服务器" class="headerlink" title="屏蔽谷歌的更新服务器"></a>屏蔽谷歌的更新服务器</h1><figure class="highlight text"><table><tr><td class="code"><pre><code class="hljs text">修改 &quot;C:\Windows\System32\drivers\etc\host 文件，在最后增加<br></code></pre></td></tr></table></figure>
<p>修改<code>C:\Windows\System32\drivers\etc\hosts</code>文件，在最后增加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">127.0.0.1 update.googleapis.com<br></code></pre></td></tr></table></figure>
<p>保存后<code>win+r</code>,输入<code>CMD</code>，输入<code>ipconfig /flushdns</code>刷新<code>DNS</code></p>
<p>然后重启浏览器</p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
  </entry>
  <entry>
    <title>自动化基础之Xpath定位</title>
    <url>/posts/43613.html</url>
    <content><![CDATA[<h5 id="常用函数定位"><a href="#常用函数定位" class="headerlink" title="常用函数定位"></a>常用函数定位</h5><div class="table-container">
<table>
<thead>
<tr>
<th><strong>定位函数position</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>//*contains(text(),’文字’)/li[position()=3]</td>
<td>找到第三个 li</td>
</tr>
<tr>
<td>//*contains(text(),’文字’)/li[position()&lt;=2]</td>
<td>找到前两个 li</td>
</tr>
</tbody>
</table>
</div>
<h5 id="Xpath函数进行定位"><a href="#Xpath函数进行定位" class="headerlink" title="Xpath函数进行定位"></a>Xpath函数进行定位</h5><div class="table-container">
<table>
<thead>
<tr>
<th><strong>定位方式</strong></th>
<th><strong>描述</strong></th>
<th><strong>实例</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>contains</td>
<td>匹配在元素文本中查找包含 ‘文字’ 的元素</td>
<td>//*contains(text(),’文字’)</td>
</tr>
<tr>
<td>starts-with</td>
<td>匹配所有id开头为 ‘s’ 的元素</td>
<td>//*[starts-with(@id,’s’)]</td>
</tr>
<tr>
<td>ends-with</td>
<td>匹配所有id结尾头为 ‘s’ 的元素</td>
<td>//*[ends-with(@id,”s”)]</td>
</tr>
<tr>
<td>following-sibling</td>
<td>匹配和 ‘ul’ 元素同级别的下一个元素</td>
<td>//div/following-sibling::ul</td>
</tr>
<tr>
<td>preceding-sibling</td>
<td>匹配当前节点之前的所有同级节点</td>
<td></td>
</tr>
<tr>
<td>ancestor</td>
<td>匹配当前节点的所有父级，祖父级还有更高级</td>
<td>//div/ancestor::li[@role=”menuitem”]</td>
</tr>
<tr>
<td>parent</td>
<td>匹配当前节点的父节点，相当于 ..</td>
<td>//div/parent::button</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>xpath</tag>
      </tags>
  </entry>
  <entry>
    <title>使用docker的ubuntu容器安装code-server</title>
    <url>/posts/7272.html</url>
    <content><![CDATA[<h2 id="搭建code-server"><a href="#搭建code-server" class="headerlink" title="搭建code-server"></a>搭建code-server</h2><h3 id="拉取Ubuntu-镜像"><a href="#拉取Ubuntu-镜像" class="headerlink" title="拉取Ubuntu 镜像"></a>拉取Ubuntu 镜像</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs ssh"># 拉取镜像<br>docker pull aliyun<br># 进入镜像<br>docker run --name [自定义名称] -u root --privileged=true -p 3300:8881 -v /opt/testubuntu/:/opt/main_file -it [镜像id]<br></code></pre></td></tr></table></figure>
<h3 id="安装code-server"><a href="#安装code-server" class="headerlink" title="安装code-server"></a>安装code-server</h3><p>在<a href="https://github.com/coder/code-server">github</a>上下载安装包,解压后剪切到<code>/home</code>目录</p>
<h3 id="运行code-server"><a href="#运行code-server" class="headerlink" title="运行code-server"></a>运行code-server</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs ssh"># 找到bin目录下的code-server*<br>cd /home/code-server/bin<br># 输入运行命令<br>export PASSWORD=&quot;123456&quot; &amp;&amp; ./code-server --host 0.0.0.0 --port 8881<br></code></pre></td></tr></table></figure>
<p>然后在浏览器输入<code>http://ip:3000</code>查看搭建情况</p>
<p>但是这样搭建有问题</p>
<blockquote>
<p>使用上面方法部署的code-server,因为是http的，导致一些功能不好用，比如写md文档无法预览</p>
</blockquote>
<p>下面就是配置使用https运行</p>
<h2 id="配置HTTPS"><a href="#配置HTTPS" class="headerlink" title="配置HTTPS"></a>配置HTTPS</h2><blockquote>
<p>使用openssl为IP签发证书</p>
</blockquote>
<h3 id="安装openssl"><a href="#安装openssl" class="headerlink" title="安装openssl"></a>安装openssl</h3><p>一般的linux系统已经内置openssl,可以输入openssl进行查看，没有的话就需要安装</p>
<h3 id="创建证书请求文件"><a href="#创建证书请求文件" class="headerlink" title="创建证书请求文件"></a>创建证书请求文件</h3><p>新建<code>openssl.cnf</code>，并编辑如下内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs ssh">[req]<br>distinguished_name = req_distinguished_name<br>req_extensions = v3_req<br><br>[req_distinguished_name]<br>countryName = Country Name (2 letter code)<br>countryName_default = CH<br>stateOrProvinceName = State or Province Name (full name)<br>stateOrProvinceName_default = ZJ<br>localityName = Locality Name (eg, city)<br>localityName_default = HangZhou<br>organizationalUnitName  = Organizational Unit Name (eg, section)<br>organizationalUnitName_default  = THS<br>commonName = Internet Widgits Ltd<br>commonName_max  = 64<br><br>[ v3_req ]<br># Extensions to add to a certificate request<br>basicConstraints = CA:FALSE<br>keyUsage = nonRepudiation, digitalSignature, keyEncipherment<br>subjectAltName = @alt_names<br><br>[alt_names]<br><br># 改成自己的域名<br># DNS.1 = your_domain_name.com<br><br># 改成自己的ip<br>IP.1 = 8.142.144.75<br>IP.2 = 0.0.0.0<br></code></pre></td></tr></table></figure>
<h3 id="生成私钥"><a href="#生成私钥" class="headerlink" title="生成私钥"></a>生成私钥</h3><p>san_domain_com 为最终生成的文件名，一般以服务器命名，可改。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs ssl">openssl genrsa -out san_domain_com.key 2048<br></code></pre></td></tr></table></figure>
<h3 id="生成CSR文件"><a href="#生成CSR文件" class="headerlink" title="生成CSR文件"></a>生成CSR文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs ssl">openssl req -new -out san_domain_com.csr -key san_domain_com.key -config openssl.cnf<br></code></pre></td></tr></table></figure>
<p>执行后，系统提示输入组织等信息，按[]内容提示输入如即可。</p>
<p>需要测试CSR文件是否生成成功<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs ssl">&gt; openssl req -text -noout -in san_domain_com.csr<br></code></pre></td></tr></table></figure><br>有下面的信息，说明生成成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs ssh">Certificate Request:<br>    Data:<br>        Version: 0 (0x0)<br>        Subject: C=US, ST=MN, L=Minneapolis, OU=Domain Control Validated, CN=zz<br>        Subject Public Key Info:<br>            Public Key Algorithm: rsaEncryption<br>                Public-Key: (2048 bit)<br>                //...<br></code></pre></td></tr></table></figure>
<h2 id="自签名并生成证书"><a href="#自签名并生成证书" class="headerlink" title="自签名并生成证书"></a>自签名并生成证书</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs ssl">openssl x509 -req -days 3650 -in san_domain_com.csr -signkey san_domain_com.key -out san_domain_com.crt -extensions v3_req -extfile openssl.cnf<br></code></pre></td></tr></table></figure>
<p>在当前目录会生成三个文件<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs ssh">san_domain_com.crt<br><br>san_domain_com.csr<br><br>san_domain_com.key<br></code></pre></td></tr></table></figure></p>
<h3 id="在用户电脑安装证书"><a href="#在用户电脑安装证书" class="headerlink" title="在用户电脑安装证书"></a>在用户电脑安装证书</h3><p>将<code>.crt</code>证书发给用户，用户双击进行安装，然后重启浏览器</p>
<h3 id="code-server启动"><a href="#code-server启动" class="headerlink" title="code server启动"></a>code server启动</h3><p>在code-server的bin目录下运行如下命令，设置端口号为8881，指定对应生成的crt和key密钥文件，即可正常访问https域名<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs ssh"># 给ssh创建密码<br>export PASSWORD=&quot;123456&quot;<br># 启动ssh<br>nohup ./code-server --port 8881 --host 0.0.0.0 --cert ../san_domain_com.crt --cert-key ../san_domain_com.key &gt; vscode.log 2&gt;&amp;1 &amp;<br></code></pre></td></tr></table></figure><br>然后通过浏览器访问<a href="https://ip:3000">https://ip:3000</a></p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>性能监控平台</title>
    <url>/posts/23767.html</url>
    <content><![CDATA[<h2 id="搭建容器"><a href="#搭建容器" class="headerlink" title="搭建容器"></a>搭建容器</h2><blockquote>
<p>拉取CentOS7镜像，下载安装Grafana和Influxdb</p>
</blockquote>
<pre><code>
        # 拉取阿里云的centos7镜像
        git pull registry.cn-zhangjiakou.aliyuncs.com/ggls/centos:7.1
        # 运行镜像生成容器
        docker run -itd --name centos7-influx 
        -p 8083:8083 -p 8086:8086 
        -p 2003:2003 -p 3000:3000 
        -v /opt/centos7_influx:/opt 
        --privileged=true 
        registry.cn-zhangjiakou.aliyuncs.com/ggls/centos:7.1 /usr/sbin/init
        # 进入容器
        docker exec -it centos7-influx bash
    
</code></pre><p>端口说明：</p>
<ul>
<li>8083：InfluxDB的UI界面展示的端口</li>
<li>8086：Grafana用来从数据库取数据的端口</li>
<li>2003：Jmeter往数据库发数据的端口</li>
<li>3000：本地访问服务器内部docker容器的端口</li>
</ul>
<h2 id="安装Influxdb"><a href="#安装Influxdb" class="headerlink" title="安装Influxdb"></a>安装Influxdb</h2><ol>
<li>下载influxDB</li>
</ol>
<p>新版本可以点击<a href="https://portal.influxdata.com/downloads/">influxDB官网</a>进行下载</p>

    # 下载安装包
    wget https://dl.influxdata.com/influxdb/releases/influxdb-1.6.3.x86_64.rpm
    # 安装运行
    yum localinstall influxdb-1.6.3.x86_64.rpm

<ol>
<li>influxDB配置</li>
</ol>
<p>安装运行后,然后对influxDB进行配置，主要是配置Jmeter连接的数据库和端口号</p>

    vim /etc/influxdb/influxdb.conf

<p>找到<code>graphite</code>并且修改它的库与端口<br><figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">enabled = true<br>database = <span class="hljs-string">&quot;jmeter&quot;</span><br>retention-policy = <span class="hljs-string">&quot;&quot;</span><br>bind-address = <span class="hljs-string">&quot;:2003&quot;</span><br>protocol = <span class="hljs-string">&quot;tcp&quot;</span><br>consistency-level = <span class="hljs-string">&quot;one&quot;</span><br></code></pre></td></tr></table></figure></p>
<ol>
<li>找到<code>[http]</code>，将前面的#号去掉</li>
</ol>
<figure>
    <a href="../assets/img/2022-08-25-监控性能平台.assets/Dingtalk_20221124172543.jpg"><img src="../assets/img/2022-08-25-监控性能平台.assets/Dingtalk_20221124172543.jpg"></a>
</figure>

<ol>
<li>配置成功，启动influxDB</li>
</ol>
<ul>
<li>启动命令： <code>systemctl start influxdb.service</code></li>
<li>查看状态命令： <code>systemctl status influxdb.service</code></li>
</ul>
<figure>
    <a href="../assets/img/2022-08-25-监控性能平台.assets/1896874-20191230134907488-2036030566.png"><img src="../assets/img/2022-08-25-监控性能平台.assets/1896874-20191230134907488-2036030566.png"></a>
</figure>

<h2 id="安装Grafana"><a href="#安装Grafana" class="headerlink" title="安装Grafana"></a>安装Grafana</h2><p>新版本下载位置：Grafana官网下载：<a href="https://grafana.com/grafana/download">https://grafana.com/grafana/download</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">wget https://dl.grafana.com/oss/release/grafana-<span class="hljs-number">6.5</span><span class="hljs-number">.2</span>-<span class="hljs-number">1.</span>x86_64.rpm<br><br>sudo yum localinstall grafana-<span class="hljs-number">6.5</span><span class="hljs-number">.2</span>-<span class="hljs-number">1.</span>x86_64.rpm<br></code></pre></td></tr></table></figure>
<h4 id="然后启动"><a href="#然后启动" class="headerlink" title="然后启动"></a>然后启动</h4><p>启动命令： <code>systemctl start grafana-server.service</code> </p>
<p>查看状态命令： <code>systemctl status grafana-server.service</code></p>
<p>然后在浏览器访问登录<code>http://ip:3000</code>；</p>
<h2 id="配置Jmeter"><a href="#配置Jmeter" class="headerlink" title="配置Jmeter"></a>配置Jmeter</h2><h3 id="一、添加监听器：Backend-Listener"><a href="#一、添加监听器：Backend-Listener" class="headerlink" title="一、添加监听器：Backend Listener"></a>一、添加监听器：Backend Listener</h3><ul>
<li>右键点击<code>Thread Group</code></li>
<li>点击<code>Add -&gt; Listener -&gt; Backend Listener</code></li>
</ul>
<h3 id="二、配置监听器：Backend-Listener"><a href="#二、配置监听器：Backend-Listener" class="headerlink" title="二、配置监听器：Backend Listener"></a>二、配置监听器：Backend Listener</h3><p><strong>Backend Listener implementation 默认选择GraphiteBackendListenerClient</strong></p>
<ul>
<li>graphiteHost：InfluxDB安装的服务器的ip</li>
<li>graphitePort：端口；默认就是2003，除非你自己安装InfluxDB时设置了其他端口是哦（可见上面安装InfluxDB后关于graphite的配置）</li>
<li>rootMetricsPrefix：指标的根前缀；将测试结果存入数据库时，不同指标会生成不同表，但这些表都最好要有一个共同的前缀，这个就是了；后面会讲到不同的指标的含义（重点哦）</li>
<li>summaryOnly：当你线程组有多个请求又想知道每个请求的结果数据时，最好填false，因为true只会返回所有请求的集合数据报告，不会输出每条请求的数据报告</li>
<li>samplersList：取样器列表；想收集哪些请求就填哪些，最好用正则去匹配，减轻工作量</li>
<li>useRegexpForSamplersList：是否使用正则；如果true则使用，samplersList里可以匹配正则表达式</li>
<li>percentiles：百分比；即类似聚合报告里90% Line，95% Line，99% Line的数据；倘若想要99.9时，需要写成【99_9】，用下划线代替点</li>
</ul>
<h3 id="三：运行Jmeter脚本，查看数据库"><a href="#三：运行Jmeter脚本，查看数据库" class="headerlink" title="三：运行Jmeter脚本，查看数据库"></a>三：运行Jmeter脚本，查看数据库</h3><p>数据库里面有两个库，jmeter库就是jmeter运行生成表的数据库</p>
<p>可以看到生成了三类前缀的表，分别是： jmeter.all 、 jmeter.[请求名称]；最后还有 jmeter.test 开头的表，这个后面会单独拿出来说</p>
<p><strong>前缀的含义</strong></p>
<ul>
<li><code>jmeter.all</code> ：代表了所有请求；当<code>summaryOnly</code>=true时，就只有<code>samplerName</code>=all的表了</li>
<li><code>jmeter.[请求名称]</code>:代表了HTTP请求，即samplerName=[请求名称]</li>
</ul>
<p>Thread/Virtual Users metrics - 线程/虚拟用户指标<br>跟线程组设置相关的</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>指标</th>
<th>全称</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>jmeter.test.minAT</td>
<td>Min active threads</td>
<td>最小活跃线程数</td>
</tr>
<tr>
<td>jmeter.test.maxAT</td>
<td>Max active threads</td>
<td>最大活跃线程数</td>
</tr>
<tr>
<td>jmeter.test.meanAT</td>
<td>Mean active threads</td>
<td>平均活跃线程数</td>
</tr>
<tr>
<td>jmeter.test.startedT</td>
<td>Started threads</td>
<td>启动线程数</td>
</tr>
<tr>
<td>jmeter.test.endedT</td>
<td>Finished threads</td>
<td>结束线程数</td>
</tr>
</tbody>
</table>
</div>
<p><strong>Response times metrics - 响应时间指标</strong></p>
<p>划重点：每个sampler(请求)都包含了所有响应时间指标，每个sampler(请求)的每个指标都会有单独的一个表存储结果数据</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>指标</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td><rootMetricsPrefix><samplerName>.ok.count</td>
<td>sampler的成功响应数</td>
</tr>
<tr>
<td><rootMetricsPrefix><samplerName>.h.count</td>
<td>服务器每秒命中次数(每秒点击数，即TPS）</td>
</tr>
<tr>
<td><rootMetricsPrefix><samplerName>.ok.min</td>
<td>sampler响应成功的最短响应时间</td>
</tr>
<tr>
<td><rootMetricsPrefix><samplerName>.ok.max</td>
<td>sampler响应成功的最长响应时间</td>
</tr>
<tr>
<td><rootMetricsPrefix><samplerName>.ok.avg</td>
<td>sampler响应成功的平均响应时间</td>
</tr>
<tr>
<td><rootMetricsPrefix><samplerName>.ok.pct<percentileValue></td>
<td>sampler响应成功的所占百分比</td>
</tr>
<tr>
<td><rootMetricsPrefix><samplerName>.ko.count</td>
<td>sampler的失败响应数</td>
</tr>
<tr>
<td><rootMetricsPrefix><samplerName>.ko.min</td>
<td>sampler响应失败的最短响应时间</td>
</tr>
<tr>
<td><rootMetricsPrefix><samplerName>.ko.max</td>
<td>sampler响应失败的最长响应时间</td>
</tr>
<tr>
<td><rootMetricsPrefix><samplerName>.ko.avg</td>
<td>sampler响应失败的平均响应时间</td>
</tr>
<tr>
<td><rootMetricsPrefix><samplerName>.ko.pct<percentileValue></td>
<td>sampler响应失败的所占百分比</td>
</tr>
<tr>
<td><rootMetricsPrefix><samplerName>.a.count</td>
<td>sampler响应数(ok.count+ko.count)</td>
</tr>
<tr>
<td><rootMetricsPrefix><samplerName>.sb.bytes</td>
<td>已发送字节</td>
</tr>
<tr>
<td><rootMetricsPrefix><samplerName>.rb.bytes</td>
<td>已接收字节</td>
</tr>
<tr>
<td><rootMetricsPrefix><samplerName>.a.min</td>
<td>sampler响应的最短响应时间(ok.count和ko.count的最小值)</td>
</tr>
<tr>
<td><rootMetricsPrefix><samplerName>.a.max</td>
<td>sampler响应的最长响应时间(ok.count和ko.count的最大值)</td>
</tr>
<tr>
<td><rootMetricsPrefix><samplerName>.a.avg</td>
<td>sampler响应的平均响应时间(ok.count和ko.count的平均值)</td>
</tr>
<tr>
<td><rootMetricsPrefix><samplerName>.a.pct<percentileValue></td>
<td>sampler响应的百分比（根据成功和失败的总数来计算）</td>
</tr>
</tbody>
</table>
</div>
<h3 id="四、配置Grafana"><a href="#四、配置Grafana" class="headerlink" title="四、配置Grafana"></a>四、配置Grafana</h3><p>步骤：</p>
<ul>
<li><p>配置数据源</p>
</li>
<li><p>创建数据面板</p>
</li>
</ul>
<figure>
    <a href="../assets/img/2022-08-25-监控性能平台.assets/11.jpg"><img src="../assets/img/2022-08-25-监控性能平台.assets/11.jpg"></a>
</figure>

<h4 id="配置数据源"><a href="#配置数据源" class="headerlink" title="配置数据源"></a>配置数据源</h4><p>点击首页的<code>Create your first data source</code>,然后进行配置</p>
<figure>
    <a href="../assets/img/2022-08-25-监控性能平台.assets/13.jpg"><img src="../assets/img/2022-08-25-监控性能平台.assets/13.jpg"></a>
</figure>

<p>点击选择<code>influxDB</code></p>
<figure>
    <a href="../assets/img/2022-08-25-监控性能平台.assets/14.jpg"><img src="../assets/img/2022-08-25-监控性能平台.assets/14.jpg"></a>
</figure>

<figure>
    <a href="../assets/img/2022-08-25-监控性能平台.assets/15.png"><img src="../assets/img/2022-08-25-监控性能平台.assets/15.png"></a>
</figure>

<h4 id="配置数据面板"><a href="#配置数据面板" class="headerlink" title="配置数据面板"></a>配置数据面板</h4><figure>
    <a href="../assets/img/2022-08-25-监控性能平台.assets/16.png"><img src="../assets/img/2022-08-25-监控性能平台.assets/16.png"></a>
</figure>

<p>选择<code>Add Query</code>,然后进行配置</p>
<figure>
    <a href="../assets/img/2022-08-25-监控性能平台.assets/17.jpg"><img src="../assets/img/2022-08-25-监控性能平台.assets/17.jpg"></a>
</figure>

<p>当我们只想看数据而不想看数据趋势图的话，可以改变它的类型；</p>
<p>在同一个界面，点击左侧列表选中第二个icon，然后选择Singlestat即可</p>
<figure>
    <a href="../assets/img/2022-08-25-监控性能平台.assets/19.jpg"><img src="../assets/img/2022-08-25-监控性能平台.assets/19.jpg"></a>
</figure>

<p>基本的配置完成，Jmeter使用<code>GraphiteBackendListenerClient</code>来采集数据的，因为请求多起来的时候会有非常多的表，维护成本也会增加；后面将会介绍如何通过<code>InfluxDBBackendListenerClient</code>来采集数据</p>
<p><strong>给Jmeter的Backend Listener配置为InfluxDBBackendListenerClient</strong></p>
<p>首先来看看每个配置项的含义</p>
<ol>
<li>influxdbUrl：安装influxdb的路径；主要格式：<a href="http://主机地址:8086/write?db=数据库名">http://主机地址:8086/write?db=数据库名</a></li>
<li>application：应用名称；在 events 表中对应的字段是 application </li>
<li>measurement：表名；数据存储到哪个表，默认是jmeter，不用改即可</li>
<li>summaryOnly：同GraphiteBackendListenerClient </li>
<li>samplersRegex：同GraphiteBackendListenerClient </li>
<li>percentiles：同GraphiteBackendListenerClient </li>
<li>testTitle：测试名称；在 events 表中对应的字段是 text ，JMeter在测试的开始和结束时自动生成注释，该注释的值以’start’和’end’结尾</li>
<li>eventTags：Grafana允许为每个注释显示标签；在 events 表中对应的字段是 tags </li>
</ol>
<p><strong>inDB数据库</strong><br>使用InfluxDBBackendListenerClient好处就是，再多的请求也只会生成两张表：</p>
<p><code>events</code> ：主要拿存事件的</p>
<p><code>jmeter</code> ：存测试结果数据的，Grafana也是从这个表获取数据再展示</p>
<p><strong>配置数据面板</strong></p>
<p>首先，进入官方模板库： <a href="https://grafana.com/dashboards">https://grafana.com/dashboards</a> ，然后跟着图片导入模板并初始化即可</p>
<figure>
    <a href="../assets/img/2022-08-25-监控性能平台.assets/20.jpg"><img src="../assets/img/2022-08-25-监控性能平台.assets/20.jpg"></a>
</figure>

<figure>
    <a href="../assets/img/2022-08-25-监控性能平台.assets/21.jpg"><img src="../assets/img/2022-08-25-监控性能平台.assets/21.jpg"></a>
</figure>

<figure>
    <a href="../assets/img/2022-08-25-监控性能平台.assets/22.jpg"><img src="../assets/img/2022-08-25-监控性能平台.assets/22.jpg"></a>
</figure>

<figure>
    <a href="../assets/img/2022-08-25-监控性能平台.assets/23.jpg"><img src="../assets/img/2022-08-25-监控性能平台.assets/23.jpg"></a>
</figure>

<p>然后jmeter再次执行一下测试计划</p>
<figure>
    <a href="../assets/img/2022-08-25-监控性能平台.assets/24.jpg"><img src="../assets/img/2022-08-25-监控性能平台.assets/24.jpg"></a>
</figure>

<p>模板自带了三个下拉筛选框</p>
<ol>
<li><p>data_source：数据源，在Grafana配置了多少个就显示多少个</p>
</li>
<li><p>application：在Jmeter配置好的application，如果每次测试计划执行时的application都不一样，你就可以通过这个筛选出对应测试时机的结果数据了</p>
</li>
<li><p>transaction：在Jmeter配置好的sampleList，譬如我只发了get、post请求，这里就只会给你选get、post；可以滑到页面下面看到针对某个请求的数据展示</p>
</li>
</ol>
<h2 id="卸载Grafana"><a href="#卸载Grafana" class="headerlink" title="卸载Grafana"></a>卸载Grafana</h2><p>停止Grafana服务。<br><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">systemctl stop grafana-server.service<br></code></pre></td></tr></table></figure><br><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">systemctl disable grafana-server.service<br></code></pre></td></tr></table></figure><br>查看要卸载的包的名称<br><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">yum list installed<br></code></pre></td></tr></table></figure><br>输入命令行卸载Grafana<br><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">yum remove grafana.x86_64<br></code></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>监控</tag>
      </tags>
  </entry>
  <entry>
    <title>硬件性能监控平台</title>
    <url>/posts/2166.html</url>
    <content><![CDATA[<h3 id="拉取prometheus镜像"><a href="#拉取prometheus镜像" class="headerlink" title="拉取prometheus镜像"></a>拉取prometheus镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">docker pull prom/prometheus<br></code></pre></td></tr></table></figure>
<h3 id="创建prometheus容器并启动"><a href="#创建prometheus容器并启动" class="headerlink" title="创建prometheus容器并启动"></a>创建prometheus容器并启动</h3><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">docker run -itd --name=docker_prometheus --restart=always -p 3090:9090 -v /opt/prometheus:/ prom/prometheus<br></code></pre></td></tr></table></figure>
<p><strong>验证</strong></p>
<p>通过浏览器访问<code>http://ip:3090</code>进行访问</p>
<h3 id="方法一：服务器上直接安装node-export"><a href="#方法一：服务器上直接安装node-export" class="headerlink" title="方法一：服务器上直接安装node_export"></a>方法一：服务器上直接安装node_export</h3><p>首先，用浏览器访问：<a href="https://github.com/prometheus/node_exporter/releases">node_export</a> 下载，然后上传到被监控的服务器并解压<br>进入解压文件夹，直接启动./node_exporter</p>
<h3 id="方法二：拉取docker-node-export镜像"><a href="#方法二：拉取docker-node-export镜像" class="headerlink" title="方法二：拉取docker node_export镜像"></a>方法二：拉取docker node_export镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">docker pull prom/node-exporter<br></code></pre></td></tr></table></figure>
<h3 id="创建node-export容器并启动"><a href="#创建node-export容器并启动" class="headerlink" title="创建node_export容器并启动"></a>创建node_export容器并启动</h3><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">docker run -itd --name=node-exporter \<br>	--restart=always \<br>	-p 9100:9100  \<br>	-v &quot;/proc:/host/proc:ro&quot; \<br>	-v &quot;/sys:/host/sys:ro&quot; \<br>	-v &quot;/:/rootfs:ro&quot; \<br>	prom/node-exporter<br></code></pre></td></tr></table></figure>
<p><strong>验证</strong></p>
<p>在浏览器访问<code>http://ip:9100/metrics</code>进行访问</p>
<h3 id="配置prometheus-node-export"><a href="#配置prometheus-node-export" class="headerlink" title="配置prometheus + node_export"></a>配置prometheus + node_export</h3><p>node_export的作用收集硬件数据</p>
<p>使用vim修改yum文件<code>容器内：/etc/prometheus/prometheus.yml</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">scrape_configs:<br>  - job_name: prometheus<br>    static_configs:<br>      - targets: [&#x27;localhost:9090&#x27;]<br>        labels:<br>          instance: prometheus<br> <br>  - job_name: linux<br>    static_configs:<br>      - targets: [&#x27;被监控的服务器ip:9100&#x27;]<br>        labels:<br>          instance: localhost<br></code></pre></td></tr></table></figure>
<h3 id="重启prometheus容器"><a href="#重启prometheus容器" class="headerlink" title="重启prometheus容器"></a>重启prometheus容器</h3><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">docker restart docker_prometheus<br></code></pre></td></tr></table></figure>
<h3 id="配置Grafana"><a href="#配置Grafana" class="headerlink" title="配置Grafana"></a>配置Grafana</h3><p><strong><em>使用<a href="https://grafana.com/grafana/download">Grafana</a>下载版本</em></strong></p>
<h4 id="配置数据源"><a href="#配置数据源" class="headerlink" title="配置数据源"></a>配置数据源</h4><ul>
<li><p>数据源:选择<code>prometheus</code></p>
</li>
<li><p>URL输入<code>http://prometheus机器ip:3090</code></p>
</li>
<li><p>点击<code>Save &amp; Test</code>保存</p>
</li>
</ul>
<h4 id="添加仪表盘"><a href="#添加仪表盘" class="headerlink" title="添加仪表盘"></a>添加仪表盘</h4><p>使用<a href="https://grafana.com/dashboards">官方仪表盘</a>进行下载仪表盘<br>导入仪表盘<br>在<code>import via grafana.com</code>输入框输入模板ID<a href="https://grafana.com/grafana/dashboards/12884">12884</a></p>
<p>ID：12633也可以使用。</p>
<p>点击 load，然后底部选择刚弄的数据源，点击import</p>
<p><strong>注意：</strong><br>点击<a href="../assets/img/硬件性能监控平台/1-node-exporter-for-prometheus-dashboard-cn-v20200628_rev1.json">json</a>下载12884的json文件</p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>监控</tag>
      </tags>
  </entry>
  <entry>
    <title>如何使用pyyaml获取yaml里面的数据</title>
    <url>/posts/28702.html</url>
    <content><![CDATA[<h5 id="准备数据"><a href="#准备数据" class="headerlink" title="准备数据"></a>准备数据</h5><p>在config目录下创建environment.yaml文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">username:</span> <span class="hljs-string">周杰伦</span><br><span class="hljs-attr">password:</span> <span class="hljs-number">123456</span><br></code></pre></td></tr></table></figure>
<h5 id="使用pyyaml获取yaml中的数据"><a href="#使用pyyaml获取yaml中的数据" class="headerlink" title="使用pyyaml获取yaml中的数据"></a>使用pyyaml获取yaml中的数据</h5><h6 id="解析yaml文件"><a href="#解析yaml文件" class="headerlink" title="解析yaml文件"></a>解析yaml文件</h6><p>首先创建<code>yaml_config</code>文件，为了方便自动化后面的引用，需要创建一个类，在<code>__init__</code>里面打开yaml文件，使用<code>yaml.load(文件名称, Loader=yaml.FullLoader )</code>方法获取数据</p>
<p>打印出字典格式的数据<code>&#123;&#39;username&#39;: &#39;周杰伦&#39;, &#39;password&#39;: 123456&#125;</code></p>
<figure class="highlight py"><table><tr><td class="code"><pre><code class="hljs py"><span class="hljs-keyword">import</span> yaml<br><span class="hljs-keyword">from</span> common.tools <span class="hljs-keyword">import</span> get_project_path, sep<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">GetConf</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(../config.environment.yaml), <span class="hljs-string">&quot;r&quot;</span>, encoding=<span class="hljs-string">&quot;utf-8&quot;</span>)\<br>                <span class="hljs-keyword">as</span> env_file:<br>            self.env = yaml.load(env_file, Loader=yaml.FullLoader)<br></code></pre></td></tr></table></figure>
<p><strong>现在使用的是相对路径，后期如果换系统，或者更换文件位置，就需要自己获得文件路径，下面对代码进行优化</strong></p>
<h5 id="优化项：获得项目名称的url地址"><a href="#优化项：获得项目名称的url地址" class="headerlink" title="优化项：获得项目名称的url地址"></a>优化项：获得项目名称的url地址</h5><p>创建<code>get_project_path方法</code>，获取项目根目录的绝对路径</p>
<p>首先定义一个变量，变量的值是项目的名称<code>project_name = &quot;trading_system_autotest&quot;</code></p>
<p>获取当前文件的<strong>所在目录的绝对路径</strong>，需要使用<strong>python的os模块</strong><code>file_path=os.path.dirname(__file__)</code></p>
<p>在绝对路径中找到<strong>项目名称的下标</strong>位置<code>file_path.find(project_name)</code></p>
<p>找到项目所在目录的绝对路径下标+项目名称的长度=项目根目录的绝对路径的下标<code>file_path.find(project_name)+len(project_name)</code></p>
<p>然后对所在目录的绝对路径<code>file_path</code>进行切片获得<strong>项目根目录的绝对路径</strong></p>
<p><code>file_path[: file_path.find(project_name)+len(project_name)]</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_project_path</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    获取项目根目录的绝对路径</span><br><span class="hljs-string">    :return:</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    project_name = <span class="hljs-string">&quot;trading_system_autotest&quot;</span><br>    <span class="hljs-comment"># 获取当前文件的所在目录的绝对路径</span><br>    file_path = os.path.dirname(__file__)<br>    <span class="hljs-comment"># # 在绝对路径中找到项目名称的下标位置</span><br>    <span class="hljs-comment"># print(file_path.find(project_name))</span><br>    <span class="hljs-comment"># 找到项目所在目录的绝对路径+项目名称的长度=项目的绝对路径</span><br>    <span class="hljs-comment"># print(len(project_name))</span><br>    <span class="hljs-keyword">return</span> file_path[: file_path.find(project_name)+<span class="hljs-built_in">len</span>(project_name)]<br></code></pre></td></tr></table></figure>
<h5 id="优化项：获得拼接后的目录和文件"><a href="#优化项：获得拼接后的目录和文件" class="headerlink" title="优化项：获得拼接后的目录和文件"></a>优化项：获得拼接后的目录和文件</h5><p>创建<code>sep(path, add_sep_before=False, add_sep_after=False)方法</code>,获得文件和目录的拼接</p>
<p><strong>变量</strong></p>
<p><code>path变量</code>需要传输一个列表，列表里面是文件所在目录和文件名称，如[文件所在目录，文件名称]</p>
<p>首先使用<code>os.sep.join</code>对列表的字段进行拼接<code>all_path = os.sep.join(path)</code></p>
<p>对<code>add_sep_before</code>进行判断，如果是<code>True</code>,就在前面添加<strong>拼接符</strong>：<code>all_path = os.sep + all_path</code></p>
<p>对<code>add_sep_after</code>进行判断，如果是<code>True</code>,就在后面添加<strong>拼接符</strong>：<code>all_path = all_path + os.sep</code></p>
<p><strong>windows格式拼接符有可能错误</strong>，就要对拼接符转换格式<code>all_path = all_path.replace(&#39;\\&#39;, &#39;/&#39;)</code>,就算没有这个代码，也可以运行出来，只是调试该代码看起来不好看</p>
<p>然后返回<code>all_path</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">sep</span>(<span class="hljs-params">path, add_sep_before=<span class="hljs-literal">False</span>, add_sep_after=<span class="hljs-literal">False</span></span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    :param path: is list    format:[Current directory , Current file]</span><br><span class="hljs-string">    :param add_sep_before: Add before directory &quot;/&quot;</span><br><span class="hljs-string">    :param add_sep_after: Add after directory &quot;/&quot;</span><br><span class="hljs-string">    :return: Current directory/Current file</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    all_path = os.sep.join(path)<br>    <span class="hljs-comment"># 在前面添加\</span><br>    <span class="hljs-keyword">if</span> add_sep_before:<br>        all_path = os.sep + all_path<br>    <span class="hljs-comment"># 在后面添加\</span><br>    <span class="hljs-keyword">if</span> add_sep_after:<br>        all_path = all_path + os.sep<br>    <span class="hljs-comment"># 转换格式 把\转换为/</span><br>    all_path = all_path.replace(<span class="hljs-string">&#x27;\\&#x27;</span>, <span class="hljs-string">&#x27;/&#x27;</span>)<br>    <span class="hljs-keyword">return</span> all_path<br></code></pre></td></tr></table></figure>
<h5 id="优化后的代码"><a href="#优化后的代码" class="headerlink" title="优化后的代码"></a>优化后的代码</h5><figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">GetConf</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(get_project_path()+sep([<span class="hljs-string">&quot;config&quot;</span>, <span class="hljs-string">&quot;environment.yaml&quot;</span>], add_sep_before=<span class="hljs-literal">True</span>), <span class="hljs-string">&quot;r&quot;</span>, encoding=<span class="hljs-string">&quot;utf-8&quot;</span>)\<br>                <span class="hljs-keyword">as</span> env_file:<br>            self.env = yaml.load(env_file, Loader=yaml.FullLoader)<br>            <span class="hljs-built_in">print</span>(self.env)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_username_password</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> self.env[<span class="hljs-string">&quot;username&quot;</span>], self.env[<span class="hljs-string">&quot;password&quot;</span>]<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>解析Excel用于数据驱动</title>
    <url>/posts/12080.html</url>
    <content><![CDATA[<h3 id="新建Excel"><a href="#新建Excel" class="headerlink" title="新建Excel"></a>新建Excel</h3><blockquote>
<p>创建Excel数据表:learn.xlsx</p>
</blockquote>
<figure>
    <a href="../assets/img/解析Excel用于数据驱动/27.png"><img src="../assets/img/解析Excel用于数据驱动/27.png"></a>
</figure>

<h3 id="解析excel"><a href="#解析excel" class="headerlink" title="解析excel"></a>解析excel</h3><blockquote>
<p>使用python的openpyxl模块来解析Excel</p>
<h4 id="1、读取Excel文件"><a href="#1、读取Excel文件" class="headerlink" title="1、读取Excel文件"></a>1、读取Excel文件</h4><p>openpyxl.load_workbook(‘文件路径’)<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">excel = openpyxl.load_workbook(&#x27;learn.xlsx&#x27;)<br></code></pre></td></tr></table></figure></p>
<h4 id="2、获取sheet页里面的数据"><a href="#2、获取sheet页里面的数据" class="headerlink" title="2、获取sheet页里面的数据"></a>2、获取sheet页里面的数据</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext"># 获取当前活动的表单<br>sheet = excel.active<br># 获取指定的表单<br>for sheets in excel.sheetnames: #获取所有表单的名称<br> 	print(sheets) <br>sheet = excel[sheets] #获取指定表单<br></code></pre></td></tr></table></figure>
<h4 id="3、获取单元格里面的内容"><a href="#3、获取单元格里面的内容" class="headerlink" title="3、获取单元格里面的内容"></a>3、获取单元格里面的内容</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">for values in sheet.values:<br>	if type(value[0]) == int: #从第二行开始<br>		print(values)<br></code></pre></td></tr></table></figure>
<p>运行代码：</p>
</blockquote>
<figure>
    <a href="../assets/img/解析Excel用于数据驱动/26.png"><img src="../assets/img/解析Excel用于数据驱动/26.png"></a>
</figure>

<p>把Excel表里面的数据以字典格式展示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">data = &#123;&#125;<br>data[&quot;name&quot;] = values[0]<br>data[&quot;value&quot;] = values[1]<br>print(data)<br></code></pre></td></tr></table></figure>
<p>运行代码：</p>
<figure>
    <a href="../assets/img/解析Excel用于数据驱动/25.png"><img src="../assets/img/解析Excel用于数据驱动/25.png"></a>
</figure>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>解析ini文件用于数据驱动</title>
    <url>/posts/42174.html</url>
    <content><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><ul>
<li>PO设计模式是selenum自动化测试中比较好的设计模式</li>
<li>在项目的开发过程中，UI界面上的元素不确定，会经常变化</li>
</ul>
<h3 id="过程解析"><a href="#过程解析" class="headerlink" title="过程解析"></a>过程解析</h3><ul>
<li>在PyCharm创建ini文件</li>
<li>创建一个可以解析ini文件的python模块(parse_ini)</li>
<li>其他模块引用parse_ini文件里面的方法把ini文件解析出来</li>
</ul>
<h4 id="创建ini文件"><a href="#创建ini文件" class="headerlink" title="创建ini文件"></a>创建ini文件</h4><p><img src="https://img2020.cnblogs.com/blog/2267618/202112/2267618-20211203094356932-1130090177.png" alt="image"></p>
<h4 id="创建parse-ini模块"><a href="#创建parse-ini模块" class="headerlink" title="创建parse_ini模块"></a>创建parse_ini模块</h4><pre><code>import configparser

class Parse_Ini(object):

    def __init__(self):
        self.file = r&quot;D:\dingdang_project\test\config.ini&quot;
        self.parse = configparser.ConfigParser()
        self.parse.read(self.file, encoding=&quot;utf-8&quot;)

    def get_sections(self):
        &quot;&quot;&quot;
        :return: 由sections组成的列表
        &quot;&quot;&quot;
        return self.parse.sections()

    def get_options(self, sections):
        &quot;&quot;&quot;
        :return: 返回指定 section 中可用选项的列表。
        &quot;&quot;&quot;
        return self.parse.options(sections)

    def get_sections_options(self, sections, options):
        &quot;&quot;&quot;
        :param sections: 元素名称
        :param options: 元素地址
        :return: 指定sections下的options
        &quot;&quot;&quot;
        try:
            option = self.parse.get(sections, options)
            if (&quot;--&gt;&quot; in option):
                option = tuple(option.split(&quot;--&gt;&quot;))
                return option
        except configparser.NoOptionError as e:
            return &#39;error: No option &quot;&#123;&#125;&quot; in section: &quot;&#123;&#125;&quot;&#39;.format(options, sections)


if __name__ == &quot;__init__&quot;:
    pass
</code></pre><h4 id="举个栗子："><a href="#举个栗子：" class="headerlink" title="举个栗子："></a>举个栗子：</h4><h5 id="栗子1"><a href="#栗子1" class="headerlink" title="栗子1"></a>栗子1</h5><p><img src="https://img2020.cnblogs.com/blog/2267618/202112/2267618-20211207110806981-833489957.png" alt="image"></p>
<h6 id="运行结果："><a href="#运行结果：" class="headerlink" title="运行结果："></a>运行结果：</h6><p><img src="https://img2020.cnblogs.com/blog/2267618/202112/2267618-20211207111506434-724799944.png" alt="image"></p>
<h5 id="栗子2"><a href="#栗子2" class="headerlink" title="栗子2"></a>栗子2</h5><p><img src="https://img2020.cnblogs.com/blog/2267618/202112/2267618-20211207111712353-1115225314.png" alt="image"></p>
<h6 id="运行结果：-1"><a href="#运行结果：-1" class="headerlink" title="运行结果："></a>运行结果：</h6><p><img src="https://img2020.cnblogs.com/blog/2267618/202112/2267618-20211207111750522-2033741252.png" alt="image"></p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python自动化配置参数</title>
    <url>/posts/1.html</url>
    <content><![CDATA[<h1 id="selenium-配置参数"><a href="#selenium-配置参数" class="headerlink" title="selenium 配置参数"></a>selenium 配置参数</h1><p>每次当selenium启动chrome浏览器的时候，chrome浏览器很干净，没有插件、没有收藏、没有历史记录，这是因为selenium在启动chrome时为了保证最快的运行效率，启动了一个裸浏览器，这就是为什么需要配置参数的原因，但是有些时候我们需要的不仅是一个裸浏览器</p>
<p>selenium启动配置参数接收是<code>ChromeOptions</code>类，创建方式如下 ：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">from selenium import webdriver<br>option = webdriver.ChromeOptions()<br>driver = webdriver.Chrome(chrome_options=option)<br>创建了ChromeOptions类之后就是添加参数，添加参数有几个特定的方法，分别对应添加不同类型的配置项目<br></code></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">from selenium import webdriver<br>option = webdriver.ChromeOptions()<br></code></pre></td></tr></table></figure>
<h3 id="添加启动参数"><a href="#添加启动参数" class="headerlink" title="添加启动参数"></a>添加启动参数</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">option.add_argument()<br></code></pre></td></tr></table></figure>
<h3 id="添加扩展应用"><a href="#添加扩展应用" class="headerlink" title="添加扩展应用"></a>添加扩展应用</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">option.add_extension()<br>option.add_encoded_extension()<br></code></pre></td></tr></table></figure>
<h3 id="添加实验性质的设置参数"><a href="#添加实验性质的设置参数" class="headerlink" title="添加实验性质的设置参数"></a>添加实验性质的设置参数</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">option.add_experimental_option()<br></code></pre></td></tr></table></figure>
<h3 id="设置调试器地址"><a href="#设置调试器地址" class="headerlink" title="设置调试器地址"></a>设置调试器地址</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">option.debugger_address()<br></code></pre></td></tr></table></figure>
<h2 id="常用配置参数："><a href="#常用配置参数：" class="headerlink" title="常用配置参数："></a>常用配置参数：</h2><p><code>from selenium import webdriver</code><br><code>option = webdriver.ChromeOptions()</code></p>
<h3 id="添加UA"><a href="#添加UA" class="headerlink" title="添加UA"></a>添加UA</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">options.add_argument(&#x27;user-agent=&quot;MQQBrowser/26 Mozilla/5.0 (Linux; U; Android 2.3.7; zh-cn; MB200 Build/GRJ22; CyanogenMod-7) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1&quot;&#x27;)<br></code></pre></td></tr></table></figure>
<h3 id="指定浏览器分辨率"><a href="#指定浏览器分辨率" class="headerlink" title="指定浏览器分辨率"></a>指定浏览器分辨率</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">options.add_argument(&#x27;window-size=1920x3000&#x27;)<br></code></pre></td></tr></table></figure>
<h3 id="谷歌文档提到需要加上这个属性来规避bug"><a href="#谷歌文档提到需要加上这个属性来规避bug" class="headerlink" title="谷歌文档提到需要加上这个属性来规避bug"></a>谷歌文档提到需要加上这个属性来规避bug</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">chrome_options.add_argument(&#x27;--disable-gpu&#x27;)<br></code></pre></td></tr></table></figure>
<h3 id="隐藏滚动条-应对一些特殊页面"><a href="#隐藏滚动条-应对一些特殊页面" class="headerlink" title="隐藏滚动条, 应对一些特殊页面"></a>隐藏滚动条, 应对一些特殊页面</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">options.add_argument(&#x27;--hide-scrollbars&#x27;)<br></code></pre></td></tr></table></figure>
<h3 id="不加载图片-提升速度"><a href="#不加载图片-提升速度" class="headerlink" title="不加载图片, 提升速度"></a>不加载图片, 提升速度</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">options.add_argument(&#x27;blink-settings=imagesEnabled=false&#x27;)<br></code></pre></td></tr></table></figure>
<h3 id="浏览器不提供可视化页面-linux下如果系统不支持可视化不加这条会启动失败"><a href="#浏览器不提供可视化页面-linux下如果系统不支持可视化不加这条会启动失败" class="headerlink" title="浏览器不提供可视化页面. linux下如果系统不支持可视化不加这条会启动失败"></a>浏览器不提供可视化页面. linux下如果系统不支持可视化不加这条会启动失败</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">options.add_argument(&#x27;--headless&#x27;)<br></code></pre></td></tr></table></figure>
<h3 id="以最高权限运行"><a href="#以最高权限运行" class="headerlink" title="以最高权限运行"></a>以最高权限运行</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">options.add_argument(&#x27;--no-sandbox&#x27;)<br></code></pre></td></tr></table></figure>
<h3 id="手动指定使用的浏览器位置"><a href="#手动指定使用的浏览器位置" class="headerlink" title="手动指定使用的浏览器位置"></a>手动指定使用的浏览器位置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">options.binary_location = r&quot;C:Program Files (x86)GoogleChromeApplicationchrome.exe&quot;<br></code></pre></td></tr></table></figure>
<h3 id="添加crx插件"><a href="#添加crx插件" class="headerlink" title="添加crx插件"></a>添加crx插件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">option.add_extension(&#x27;d:crxAdBlock_v2.17.crx&#x27;)<br></code></pre></td></tr></table></figure>
<h3 id="禁用JavaScript"><a href="#禁用JavaScript" class="headerlink" title="禁用JavaScript"></a>禁用JavaScript</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">option.add_argument(&quot;--disable-javascript&quot;)<br></code></pre></td></tr></table></figure>
<h3 id="设置开发者模式启动，该模式下webdriver属性为正常值"><a href="#设置开发者模式启动，该模式下webdriver属性为正常值" class="headerlink" title="设置开发者模式启动，该模式下webdriver属性为正常值"></a>设置开发者模式启动，该模式下webdriver属性为正常值</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">options.add_experimental_option(&#x27;excludeSwitches&#x27;, [&#x27;enable-automation&#x27;])<br></code></pre></td></tr></table></figure>
<h3 id="禁用浏览器弹窗"><a href="#禁用浏览器弹窗" class="headerlink" title="禁用浏览器弹窗"></a>禁用浏览器弹窗</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">prefs = &#123; <br>    &#x27;profile.default_content_setting_values&#x27; :  &#123; <br>        &#x27;notifications&#x27; : 2 <br>     &#125; <br>&#125; <br>options.add_experimental_option(&#x27;prefs&#x27;,prefs)<br></code></pre></td></tr></table></figure>
<h3 id="添加代理-ip"><a href="#添加代理-ip" class="headerlink" title="添加代理 ip"></a>添加代理 ip</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">options.add_argument(&quot;--proxy-server=http://XXXXX.com:80&quot;)<br><br>driver = webdriver.Chrome(chrome_options=chrome_options)<br></code></pre></td></tr></table></figure>
<h2 id="其他配置项目参数"><a href="#其他配置项目参数" class="headerlink" title="其他配置项目参数"></a>其他配置项目参数</h2><h3 id="指定用户文件夹User-Data路径，可以把书签这样的用户数据保存在系统分区以外的分区"><a href="#指定用户文件夹User-Data路径，可以把书签这样的用户数据保存在系统分区以外的分区" class="headerlink" title="指定用户文件夹User Data路径，可以把书签这样的用户数据保存在系统分区以外的分区"></a>指定用户文件夹User Data路径，可以把书签这样的用户数据保存在系统分区以外的分区</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--user-data-dir=[PATH]<br></code></pre></td></tr></table></figure>
<h3 id="指定缓存Cache路径"><a href="#指定缓存Cache路径" class="headerlink" title="指定缓存Cache路径"></a>指定缓存Cache路径</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">–disk-cache-dir=[PATH]<br></code></pre></td></tr></table></figure>
<h3 id="指定Cache大小，单位Byte"><a href="#指定Cache大小，单位Byte" class="headerlink" title="指定Cache大小，单位Byte"></a>指定Cache大小，单位Byte</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">–disk-cache-size=<br></code></pre></td></tr></table></figure>
<h3 id="重置到初始状态，第一次运行"><a href="#重置到初始状态，第一次运行" class="headerlink" title="重置到初始状态，第一次运行"></a>重置到初始状态，第一次运行</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">–first run<br></code></pre></td></tr></table></figure>
<h3 id="隐身模式启动"><a href="#隐身模式启动" class="headerlink" title="隐身模式启动"></a>隐身模式启动</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">–incognito<br></code></pre></td></tr></table></figure>
<h3 id="禁用Javascript"><a href="#禁用Javascript" class="headerlink" title="禁用Javascript"></a>禁用Javascript</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">–disable-javascript<br></code></pre></td></tr></table></figure>
<h3 id="将地址栏弹出的提示菜单数量改为num个"><a href="#将地址栏弹出的提示菜单数量改为num个" class="headerlink" title="将地址栏弹出的提示菜单数量改为num个"></a>将地址栏弹出的提示菜单数量改为num个</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--omnibox-popup-count=&quot;num&quot;<br></code></pre></td></tr></table></figure>
<h3 id="修改HTTP请求头部的Agent字符串，可以通过about-version页面查看修改效果"><a href="#修改HTTP请求头部的Agent字符串，可以通过about-version页面查看修改效果" class="headerlink" title="修改HTTP请求头部的Agent字符串，可以通过about:version页面查看修改效果"></a>修改HTTP请求头部的Agent字符串，可以通过about:version页面查看修改效果</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--user-agent=&quot;xxxxxxxx&quot;<br></code></pre></td></tr></table></figure>
<h3 id="禁止加载所有插件，可以增加速度。可以通过about-plugins页面查看效果"><a href="#禁止加载所有插件，可以增加速度。可以通过about-plugins页面查看效果" class="headerlink" title="禁止加载所有插件，可以增加速度。可以通过about:plugins页面查看效果"></a>禁止加载所有插件，可以增加速度。可以通过about:plugins页面查看效果</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--disable-plugins<br></code></pre></td></tr></table></figure>
<h3 id="禁用JavaScript，如果觉得速度慢在加上这个"><a href="#禁用JavaScript，如果觉得速度慢在加上这个" class="headerlink" title="禁用JavaScript，如果觉得速度慢在加上这个"></a>禁用JavaScript，如果觉得速度慢在加上这个</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--disable-javascript<br></code></pre></td></tr></table></figure>
<h3 id="禁用java"><a href="#禁用java" class="headerlink" title="禁用java"></a>禁用java</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--disable-java<br></code></pre></td></tr></table></figure>
<h3 id="启动就最大化"><a href="#启动就最大化" class="headerlink" title="　启动就最大化"></a>　启动就最大化</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--start-maximized<br></code></pre></td></tr></table></figure>
<h3 id="取消沙盒模式"><a href="#取消沙盒模式" class="headerlink" title="取消沙盒模式"></a>取消沙盒模式</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--no-sandbox<br></code></pre></td></tr></table></figure>
<h3 id="单进程运行"><a href="#单进程运行" class="headerlink" title="单进程运行"></a>单进程运行</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--single-process<br></code></pre></td></tr></table></figure>
<h3 id="每个标签使用单独进程"><a href="#每个标签使用单独进程" class="headerlink" title="每个标签使用单独进程"></a>每个标签使用单独进程</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--process-per-tab<br></code></pre></td></tr></table></figure>
<h3 id="每个站点使用单独进程"><a href="#每个站点使用单独进程" class="headerlink" title="每个站点使用单独进程"></a>每个站点使用单独进程</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--process-per-site<br></code></pre></td></tr></table></figure>
<h3 id="插件不启用单独进程"><a href="#插件不启用单独进程" class="headerlink" title="插件不启用单独进程"></a>插件不启用单独进程</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--in-process-plugins<br></code></pre></td></tr></table></figure>
<h3 id="禁用弹出拦截"><a href="#禁用弹出拦截" class="headerlink" title="禁用弹出拦截"></a>禁用弹出拦截</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--disable-popup-blocking<br></code></pre></td></tr></table></figure>
<h3 id="禁用插件"><a href="#禁用插件" class="headerlink" title="禁用插件"></a>禁用插件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--disable-plugins<br></code></pre></td></tr></table></figure>
<h3 id="禁用图像"><a href="#禁用图像" class="headerlink" title="禁用图像"></a>禁用图像</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--disable-images<br></code></pre></td></tr></table></figure>
<h3 id="启动进入隐身模式"><a href="#启动进入隐身模式" class="headerlink" title="启动进入隐身模式"></a>启动进入隐身模式</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--incognito<br></code></pre></td></tr></table></figure>
<h3 id="启用账户切换菜单"><a href="#启用账户切换菜单" class="headerlink" title="启用账户切换菜单"></a>启用账户切换菜单</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--enable-udd-profiles<br></code></pre></td></tr></table></figure>
<h3 id="使用pac代理-via-1-2"><a href="#使用pac代理-via-1-2" class="headerlink" title="使用pac代理 [via 1/2]"></a>使用pac代理 [via 1/2]</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--proxy-pac-url<br></code></pre></td></tr></table></figure>
<h3 id="设置语言为简体中文"><a href="#设置语言为简体中文" class="headerlink" title="设置语言为简体中文"></a>设置语言为简体中文</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--lang=zh-CN<br></code></pre></td></tr></table></figure>
<h3 id="自定义缓存目录"><a href="#自定义缓存目录" class="headerlink" title="自定义缓存目录"></a>自定义缓存目录</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--disk-cache-dir<br></code></pre></td></tr></table></figure>
<h3 id="自定义缓存最大值（单位byte）"><a href="#自定义缓存最大值（单位byte）" class="headerlink" title="自定义缓存最大值（单位byte）"></a>自定义缓存最大值（单位byte）</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--disk-cache-size<br></code></pre></td></tr></table></figure>
<h3 id="自定义多媒体缓存最大值（单位byte）"><a href="#自定义多媒体缓存最大值（单位byte）" class="headerlink" title="自定义多媒体缓存最大值（单位byte）"></a>自定义多媒体缓存最大值（单位byte）</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--media-cache-size<br></code></pre></td></tr></table></figure>
<h3 id="在工具-栏增加一个书签按钮"><a href="#在工具-栏增加一个书签按钮" class="headerlink" title="在工具 栏增加一个书签按钮"></a>在工具 栏增加一个书签按钮</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--bookmark-menu<br></code></pre></td></tr></table></figure>
<h3 id="启用书签同步"><a href="#启用书签同步" class="headerlink" title="启用书签同步"></a>启用书签同步</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--enable-sync<br></code></pre></td></tr></table></figure>
<h3 id="使用缓存"><a href="#使用缓存" class="headerlink" title="使用缓存"></a>使用缓存</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">options.add_argument(&quot;--disk-cache-dir=/path/to/cache/folder&quot;)<br>options.add_argument(&quot;--disable-application-cache&quot;)<br>options.add_argument(&quot;--disable-cache&quot;)<br></code></pre></td></tr></table></figure>
<p>参考：<a href="https://www.cnblogs.com/sn5200/p/15949796.html">https://www.cnblogs.com/sn5200/p/15949796.html</a></p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>自动获取driver</title>
    <url>/posts/1.html</url>
    <content><![CDATA[<h1 id="自动获取driver"><a href="#自动获取driver" class="headerlink" title="自动获取driver"></a>自动获取driver</h1><h2 id="chrome"><a href="#chrome" class="headerlink" title="chrome"></a>chrome</h2><h3 id="下载驱动"><a href="#下载驱动" class="headerlink" title="下载驱动"></a>下载驱动</h3><figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@staticmethod</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">down_driver</span>(<span class="hljs-params">option</span>):<br>    <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    return: 返回driver，可以直接使用</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br>    driver = webdriver.Chrome(<br>        ChromeDriverManager(<br>            url=<span class="hljs-string">&quot;https://registry.npmmirror.com/-/binary/chromedriver&quot;</span>,<br>                            latest_release_url=<span class="hljs-string">&quot;https://registry.npmmirror.com/-/binary/chromedriver/LATEST_RELEASE&quot;</span>,<br>                            cache_valid_range=<span class="hljs-number">365</span>).install(),<br>                            options=option)<br>    driver.delete_all_cookies()<br>    <span class="hljs-keyword">return</span> driver<br></code></pre></td></tr></table></figure>
<h3 id="下载2"><a href="#下载2" class="headerlink" title="下载2"></a>下载2</h3><figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@staticmethod</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">determin_chrome_driver</span>():<br><br>    chrome_path = <span class="hljs-string">r&#x27;C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe&#x27;</span><br><br><br>    <span class="hljs-comment"># 指定谷歌驱动目标位置</span><br>    folder_path = os.path.join(ROOT_DIR, <span class="hljs-string">&quot;env_setting&quot;</span>)<br>    <span class="hljs-comment"># 驱动名称</span><br>    file_name = <span class="hljs-string">&#x27;chromedriver.exe&#x27;</span><br>    <span class="hljs-comment"># 路径拼接</span><br>    file_path = os.path.join(folder_path, file_name)<br><br>    <span class="hljs-keyword">if</span> os.path.exists(file_path):<br>        <span class="hljs-comment"># 获取chromedriver.exe版本(谷歌浏览器驱动)</span><br>        result = subprocess.run([file_path, <span class="hljs-string">&#x27;--version&#x27;</span>], capture_output=<span class="hljs-literal">True</span>, text=<span class="hljs-literal">True</span>)<br>        driverversion = <span class="hljs-string">&#x27;.&#x27;</span>.join(result.stdout.strip().split(<span class="hljs-string">&#x27; &#x27;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&#x27;.&#x27;</span>)[:-<span class="hljs-number">1</span>])<br><br>        <span class="hljs-comment"># 获取chrome.exe版本(谷歌浏览器)</span><br>        command = <span class="hljs-string">f&#x27;wmic datafile where name=&quot;<span class="hljs-subst">&#123;chrome_path&#125;</span>&quot; get Version /value&#x27;</span><br>        result_a = subprocess.run(command, capture_output=<span class="hljs-literal">True</span>, text=<span class="hljs-literal">True</span>, shell=<span class="hljs-literal">True</span>)<br>        output = result_a.stdout.strip()<br>        chromeversion = <span class="hljs-string">&#x27;.&#x27;</span>.join(output.split(<span class="hljs-string">&#x27;=&#x27;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&#x27;.&#x27;</span>)[<span class="hljs-number">0</span>:<span class="hljs-number">3</span>])<br><br>        <span class="hljs-comment"># 判断版本是否一致，不一致就重新下载</span><br>        <span class="hljs-keyword">if</span> driverversion != chromeversion:<br>            <span class="hljs-comment"># 使用ChromeDriverManager安装ChromeDriver，并获取驱动程序的路径</span><br>            download_driver_path = ChromeDriverManager().install()<br>            <span class="hljs-comment"># 复制文件到目标位置</span><br>            shutil.copy(download_driver_path, folder_path)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;版本一致，无需重新下载！&quot;</span>)<br><br>    <span class="hljs-keyword">else</span>:<br>        download_driver_path = ChromeDriverManager().install()<br>        shutil.copy(download_driver_path, folder_path)<br><br>    <span class="hljs-keyword">return</span> file_path<br></code></pre></td></tr></table></figure>
<h2 id="edge"><a href="#edge" class="headerlink" title="edge"></a>edge</h2><h3 id="下载驱动-1"><a href="#下载驱动-1" class="headerlink" title="下载驱动"></a>下载驱动</h3><figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> webdriver_manager.microsoft <span class="hljs-keyword">import</span> EdgeChromiumDriverManager<br>    <br><span class="hljs-meta">@staticmethod</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">download_edgedriver</span>():<br>    <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    function：下载edge浏览器驱动</span><br><span class="hljs-string">    return: 返回一个下载的路径</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br>    folder_path = EdgeChromiumDriverManager().install()<br>    shutil.copy(folder_path, webDriver)   <span class="hljs-comment"># 拷贝folder_path到webDriver目录下</span><br>    <span class="hljs-keyword">return</span> folder_path<br></code></pre></td></tr></table></figure>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># driver = webdriver.Edge(service=Service(下载路径))</span><br>driver = webdriver.Edge(service=Service(ddDriver.download_edgedriver()))<br></code></pre></td></tr></table></figure>
<h2 id="firefox"><a href="#firefox" class="headerlink" title="firefox"></a>firefox</h2><h3 id="下载驱动-2"><a href="#下载驱动-2" class="headerlink" title="下载驱动"></a>下载驱动</h3><figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@staticmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">down_driver</span>(<span class="hljs-params">option</span>):<br>        driver = webdriver.Firefox<br>        (<br>            			      					       		           service=FirefoxService(GeckoDriverManager(url=<span class="hljs-string">&quot;https://github.com/mozilla/geckodriver/releases/download&quot;</span>,<br>                                                      latest_release_url=<span class="hljs-string">&quot;https://api.github.com/repos/mozilla/geckodriver/&quot;</span><br>                                                                         <span class="hljs-string">&quot;releases/latest&quot;</span>,<br>                                   cache_valid_range=<span class="hljs-number">365</span>).install(),<br>                                   options=option))<br>        <span class="hljs-keyword">return</span> driver<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Shell脚本初探</title>
    <url>/posts/38168.html</url>
    <content><![CDATA[<h5 id="编写shell脚本时，必须以-bin-bash-开头"><a href="#编写shell脚本时，必须以-bin-bash-开头" class="headerlink" title="编写shell脚本时，必须以 #! /bin/bash 开头"></a>编写shell脚本时，必须以 <font color='red' font-size='40px'>#! /bin/bash</font> 开头</h5><p>在linux创建<code>helloworld.sh</code>文件，在文件内输入：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">################</span></span><br>echo &quot;hello World&quot;<br></code></pre></td></tr></table></figure>
<p>然后保存该文件</p>
<p>运行<code>.sh</code>文件时，有两种方法可以运行</p>
<h5 id="第一种是给该文件添加可执行权限"><a href="#第一种是给该文件添加可执行权限" class="headerlink" title="第一种是给该文件添加可执行权限"></a>第一种是给该文件添加可执行权限</h5><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">chmod +x ./helloworld.sh<br></code></pre></td></tr></table></figure>
<p>运行文件：<font color='red' font-size='40px'>./ 不能省略</font></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">./helloworld.sh<br></code></pre></td></tr></table></figure>
<h5 id="第二种是使用bash或sh-文件路径运行该文件"><a href="#第二种是使用bash或sh-文件路径运行该文件" class="headerlink" title="第二种是使用bash或sh 文件路径运行该文件"></a>第二种是使用<code>bash或sh 文件路径</code>运行该文件</h5><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">bash helloworld.sh<br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash">sh helloworld.sh</span><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Shell变量</title>
    <url>/posts/4654.html</url>
    <content><![CDATA[<h4 id="shell变量分为系统变量和自定义变量，变量默认字符串类型"><a href="#shell变量分为系统变量和自定义变量，变量默认字符串类型" class="headerlink" title="shell变量分为系统变量和自定义变量，变量默认字符串类型"></a>shell变量分为系统变量和自定义变量，<font color='red' font-size='40px'>变量默认字符串类型</font></h4><h5 id="系统变量"><a href="#系统变量" class="headerlink" title="系统变量"></a>系统变量</h5><p><code>$HOME</code> 获取当前用户的家目录</p>
<p><code>$PWD</code> 获取当前目录的路径</p>
<p><code>$SHELL</code> 获取shell的执行引擎</p>
<p><code>$USER</code> 获取当前用户的名称</p>
<h5 id="自定义变量"><a href="#自定义变量" class="headerlink" title="自定义变量"></a>自定义变量</h5><p>在linux系统中定义变量<code>A=1</code>,等号两边不能有空格，使用<code>echo $A</code>显示A的值</p>
<p>使用<code>unset A</code>命令，撤销变量</p>
<p>定义只读变量<code>readonly b=3</code>,使用<code>echo $b</code>显示b的值,不能<code>unset</code></p>
<p><code>export</code>命令进行设置<font color='red' font-size='40px'>全局变量</font>，可以让其他shell命令进行使用</p>
<h5 id="特殊变量：-n"><a href="#特殊变量：-n" class="headerlink" title="特殊变量：$n"></a>特殊变量：<strong>$n</strong></h5><p><strong>定义</strong></p>
<p>n表示数字，范围是0~9，$0表示脚本名称，$1~9表示1~9个参数，10以上的参数要用花括号包裹，如<code>$&#123;10&#125;</code></p>
<p>运行<code>apple.sh</code>文件时可以传递参数</p>
<p><strong>举个栗子</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;filename:&quot;</span> <span class="hljs-variable">$0</span></span><br>echo &quot;filename_1:&quot; $1<br>echo &quot;filename_2:&quot; $2<br>echo &quot;filename_3:&quot; $3<br>echo &quot;filename_4:&quot; $4<br>echo &quot;filename_5:&quot; $5<br></code></pre></td></tr></table></figure>
<p>运行后传递参数<code>bash apple.sh 001 002 test &quot;test sss&quot; &quot;hsgd_dee&quot;</code></p>
<h5 id="特殊变量："><a href="#特殊变量：" class="headerlink" title="特殊变量：$"></a>特殊变量：$</h5><p><strong>定义</strong></p>
<p>获取所有输入参数的个数，常用于循环</p>
<p><strong>举个栗子</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;filename:&quot;</span> <span class="hljs-variable">$0</span></span><br>echo &quot;filename_1:&quot; $1<br>echo &quot;filename_2:&quot; $2<br>echo &quot;filename_3:&quot; $3<br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-built_in">echo</span> <span class="hljs-variable">$#</span></span><br></code></pre></td></tr></table></figure>
<h5 id="特殊变量：-，"><a href="#特殊变量：-，" class="headerlink" title="特殊变量：$#，$*"></a>特殊变量：$#，$*</h5><p><strong>定义</strong></p>
<p><code>$*</code>代表命令行中所有参数，把参数作为一个整体</p>
<p><code>$@</code>代表命令行中所有参数，把参数区分对待</p>
<h5 id="特殊变量：-1"><a href="#特殊变量：-1" class="headerlink" title="特殊变量：$?"></a>特殊变量：$?</h5><p><strong>定义</strong></p>
<p>最后一次命令的返回状态，如果返回变量的值为0，则表示最后一次命令执行正确，如果变量的值非0，则证明上一条变量返回不正确</p>
<p><strong>举个栗子</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@b09ed0cc2c9d opt]# $?<br>bash: 0: command not found<br>[root@b09ed0cc2c9d opt]# echo $?<br>127<br>[root@b09ed0cc2c9d opt]# echo $?<br>0<br>[root@b09ed0cc2c9d opt]#<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Shell函数</title>
    <url>/posts/27832.html</url>
    <content><![CDATA[<h5 id="系统函数"><a href="#系统函数" class="headerlink" title="系统函数"></a>系统函数</h5><h6 id="basename基本语法"><a href="#basename基本语法" class="headerlink" title="basename基本语法"></a>basename基本语法</h6><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">basename [string/ pathname][文件后缀] <br></code></pre></td></tr></table></figure>
<p>basename命令会删掉所有的前缀，只留一个文件名</p>
<p>选项：</p>
<p>如果指定后缀，basename会将pathname或string中的文件后缀去掉</p>
<h6 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h6><p>截取该<code>/opt/banzhang.txt</code>路径的文件名称</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@b09ed0cc2c9d opt]# basename /opt/banzhang.txt<br>banzhang.txt<br>[root@b09ed0cc2c9d opt]# basename /opt/banzhang.txt .txt<br>banzhang<br>[root@b09ed0cc2c9d opt]#<br></code></pre></td></tr></table></figure>
<h6 id="dirname基本语法"><a href="#dirname基本语法" class="headerlink" title="dirname基本语法"></a>dirname基本语法</h6><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">dirname 文件绝对路径<br></code></pre></td></tr></table></figure>
<p>从给定的包含绝对路径的文件名中去除文件名（非目录的部分），然后返回剩下的路径（目录部分）</p>
<h6 id="举个栗子-1"><a href="#举个栗子-1" class="headerlink" title="举个栗子"></a>举个栗子</h6><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@b09ed0cc2c9d opt]# dirname /opt/banzhang.txt<br>/opt<br>[root@b09ed0cc2c9d opt]#<br></code></pre></td></tr></table></figure>
<h5 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h5><h6 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h6><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[function] funname[()]<br>&#123;<br>	Action;<br>	[retion int;]<br>&#125;<br><br>funname<br></code></pre></td></tr></table></figure>
<h6 id="举个栗子-2"><a href="#举个栗子-2" class="headerlink" title="举个栗子"></a>举个栗子</h6><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><br>function sum()<br>&#123;<br>        s=0;<br>        s=$[$1+$2]<br>        echo $s<br>&#125;<br><br>read -p &quot;input your paratemer1:&quot; p1<br>read -p &quot;input your oaeayemer2:&quot; p2<br><br>sum $p1 $p2<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Shell工具(一)</title>
    <url>/posts/6705.html</url>
    <content><![CDATA[<h5 id="Cut工具"><a href="#Cut工具" class="headerlink" title="Cut工具"></a>Cut工具</h5><blockquote>
<p>用于剪切数据</p>
</blockquote>
<h6 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h6><p>cut[选项参数] filename</p>
<p>说明：默认分隔符是制表符</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>选项参数</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>-f</td>
<td>列号，提取第几列</td>
</tr>
<tr>
<td>-d</td>
<td>分隔符，按照指定分隔符分割列</td>
</tr>
</tbody>
</table>
</div>
<h6 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h6><p>准备数据</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@b09ed0cc2c9d local]# touch cut.txt<br>[root@b09ed0cc2c9d local]# vim cut.txt<br><br>dong shen<br>guan zhen<br>wo wo<br>lai lai<br>le le<br></code></pre></td></tr></table></figure>
<p>切割第一列数据</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@b09ed0cc2c9d local]# cut -d &quot; &quot; -f 1 cut.txt<br>dong<br>guan<br>wo<br>lai<br>le<br></code></pre></td></tr></table></figure>
<p>切割第二，三列</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@b09ed0cc2c9d local]# cut -d &quot; &quot; -f 2,3 cut.txt<br>shen<br>zhen<br>wo<br>lai<br>le<br></code></pre></td></tr></table></figure>
<p>在cut.txt文件切割出guan</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@b09ed0cc2c9d local]# cat cut.txt<br>dong shen<br>guan zhen<br>wo wo<br>lai lai<br>le le<br>[root@b09ed0cc2c9d local]#<br>[root@b09ed0cc2c9d local]# cat cut.txt | grep guan<br>guan zhen<br>[root@b09ed0cc2c9d local]# cat cut.txt | grep guan | cut -d &quot; &quot; -f 1<br>guan<br>[root@b09ed0cc2c9d local]#<br></code></pre></td></tr></table></figure>
<p>选取系统PATH变量值，第二个“：”之后的所有路径</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@b09ed0cc2c9d local]# echo $PATH<br>/usr/local/java/jdk1.8.0_181/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin<br>[root@b09ed0cc2c9d local]# echo $PATH | cut -d : -f 3-		# 不加-表示第三列，加上-表示第三列之后<br>/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin<br></code></pre></td></tr></table></figure>
<p>切割ifconfig后打印的IP地址</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@b09ed0cc2c9d local]# ifconfig<br>eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500<br>        inet 172.17.0.2  netmask 255.255.0.0  broadcast 0.0.0.0<br>        inet6 fe80::42:acff:fe11:2  prefixlen 64  scopeid 0x20&lt;link&gt;<br>        ether 02:42:ac:11:00:02  txqueuelen 0  (Ethernet)<br>        RX packets 8  bytes 656 (656.0 B)<br>        RX errors 0  dropped 0  overruns 0  frame 0<br>        TX packets 8  bytes 656 (656.0 B)<br>        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0<br><br>lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536<br>        inet 127.0.0.1  netmask 255.0.0.0<br>        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;<br>        loop  txqueuelen 1000  (Local Loopback)<br>        RX packets 0  bytes 0 (0.0 B)<br>        RX errors 0  dropped 0  overruns 0  frame 0<br>        TX packets 0  bytes 0 (0.0 B)<br>        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0<br><br>[root@b09ed0cc2c9d local]# ifconfig eth0 | grep &quot;inet &quot; | cut -d &quot;t&quot; -f 2 | cut -d &quot; &quot; -f 2<br>172.17.0.2<br>[root@b09ed0cc2c9d local]#<br></code></pre></td></tr></table></figure>
<h5 id="sed工具"><a href="#sed工具" class="headerlink" title="sed工具"></a>sed工具</h5><blockquote>
<p>一种流编辑器，一次处理一行内容</p>
</blockquote>
<h6 id="基本用法-1"><a href="#基本用法-1" class="headerlink" title="基本用法"></a>基本用法</h6><p>sed [选项参数] <code>command</code> filename</p>
<p>选项参数说明</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>选项参数</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>-a</td>
<td>直接在指定列模式上进行sed的动作编辑</td>
</tr>
</tbody>
</table>
</div>
<p>命令功能描述</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>命令</th>
<th>功能描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>a</td>
<td>新增，a的后面可以接字串，在下一行出现</td>
</tr>
<tr>
<td>d</td>
<td>删除</td>
</tr>
<tr>
<td>s</td>
<td>查找并替换</td>
</tr>
</tbody>
</table>
</div>
<h6 id="举个栗子-1"><a href="#举个栗子-1" class="headerlink" title="举个栗子"></a>举个栗子</h6><p>数据准备</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@b09ed0cc2c9d opt]# touch sed.txt<br>[root@b09ed0cc2c9d opt]# vim sed.txt<br><br>dong shen<br>guan zhen<br>wo  wo<br>lai  lai<br><br>le  le<br></code></pre></td></tr></table></figure>
<p>将mei nv 这个单词插入到 sed.txt 第二行下，打印</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@b09ed0cc2c9d opt]# sed &quot;2a mei nv&quot; sed.txt<br>dong shen<br>guan zhen<br>mei nv<br>wo  wo<br>lai  lai<br><br>le  le<br>[root@b09ed0cc2c9d opt]#<br></code></pre></td></tr></table></figure>
<p>删除sed.txt文件所有包含 wo 的行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@b09ed0cc2c9d opt]# sed &quot;/wo/d&quot; sed.txt<br>dong shen<br>guan zhen<br>lai  lai<br><br>le  le<br>[root@b09ed0cc2c9d opt]#<br></code></pre></td></tr></table></figure>
<p>将sed.txt文件中 wo 替换为 ni</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@b09ed0cc2c9d opt]# sed &quot;s/wo/ni/g&quot; sed.txt<br>dong shen<br>guan zhen<br>ni  ni<br>lai  lai<br><br>le  le<br>[root@b09ed0cc2c9d opt]#<br></code></pre></td></tr></table></figure>
<font color='red' font-size='40px'>注意：g表示global,全部替换</font>

<p>将sed.txt文件中的第二行删除并将wo替换成ni</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@b09ed0cc2c9d opt]# sed -e &quot;2d&quot; -e &quot;s/wo/ni/g&quot; sed.txt<br>dong shen<br>ni  ni<br>lai  lai<br><br>le  le<br>[root@b09ed0cc2c9d opt]#<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Shell脚本入门</title>
    <url>/posts/41091.html</url>
    <content><![CDATA[<h5 id="创建txt文件并向txt文件追加数据"><a href="#创建txt文件并向txt文件追加数据" class="headerlink" title="创建txt文件并向txt文件追加数据"></a>创建txt文件并向txt文件追加数据</h5><p>首先创建<code>test_shell.sh</code>文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">touch test_shell.sh<br></code></pre></td></tr></table></figure>
<p>在<code>test_shell.sh</code>文件输入shell脚本</p>
<ul>
<li><p>使用<code>shell</code>创建<code>banzhang.txt</code>文件</p>
</li>
<li><p>在文件中追加数据<code>echo &quot;aabbccdd&quot; &gt;&gt; banzhang.txt</code></p>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">指定目录</span><br>cd /opt/<br><span class="hljs-meta prompt_"># </span><span class="language-bash">创建文件</span><br>touch banzhang.txt<br><span class="hljs-meta prompt_"># </span><span class="language-bash">向文件追加数据</span><br>echo &quot;touch banzhang&quot; &gt;&gt; banzhang.txt<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Shell条件判断</title>
    <url>/posts/50013.html</url>
    <content><![CDATA[<h5 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h5><p>[ condition ] （<font color='red' font-size='40px'>注意，condition 前后要有空格</font>）</p>
<p>注意：条件非空即为 true,[ atguigu ]返回 true, [] 返回 false.</p>
<h5 id="常用条件判断"><a href="#常用条件判断" class="headerlink" title="常用条件判断"></a>常用条件判断</h5><h6 id="两个整数之间进行比较"><a href="#两个整数之间进行比较" class="headerlink" title="两个整数之间进行比较"></a>两个整数之间进行比较</h6><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">= 字符串比较<br>-lt 小于<br>-le 小于等于<br>-eq 等于<br>-gt 大于<br>-ge 大于等于<br>-ne 不等于<br></code></pre></td></tr></table></figure>
<p>举个栗子</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[23 -lt 80]<br>echo $?  # 判断上一步操作是不是正确<br></code></pre></td></tr></table></figure>
<h6 id="按照文件权限进行判断"><a href="#按照文件权限进行判断" class="headerlink" title="按照文件权限进行判断"></a>按照文件权限进行判断</h6><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">-r 读<br>-w 写<br>-x 执行<br></code></pre></td></tr></table></figure>
<p>举个栗子</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[ -w 1.sh ]<br>echo $?<br></code></pre></td></tr></table></figure>
<h6 id="文件类型判断"><a href="#文件类型判断" class="headerlink" title="文件类型判断"></a>文件类型判断</h6><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">-f 文件存在且是一个常规文件<br>-e 文件存在<br>-d 文件存在且是一个目录<br></code></pre></td></tr></table></figure>
<p>举个栗子</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[ -e 2.sh ]<br>echo $?<br></code></pre></td></tr></table></figure>
<h6 id="多条件判断"><a href="#多条件判断" class="headerlink" title="多条件判断"></a>多条件判断</h6><p>$$$$ 与 ，前对，才执行后</p>
<p><code>||</code> 或 </p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Shell流程控制</title>
    <url>/posts/65365.html</url>
    <content><![CDATA[<h5 id="if判断"><a href="#if判断" class="headerlink" title="if判断"></a>if判断</h5><h6 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h6><ul>
<li><p>[ 条件判断式 ]，中括号和条件判断式之间必须有空格</p>
</li>
<li><p>if后要有空格</p>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">if [ 条件判断式 ]：then<br>	程序<br>fi<br><span class="hljs-meta prompt_">#</span><span class="language-bash">或者</span><br>if[ 条件判断式 ]<br>	then<br>		程序<br>fi<br></code></pre></td></tr></table></figure>
<h6 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h6><p>输入一个数字，如果是1，则输出 banzhang zhen shuai,如果是2，则输出 cls zhen mei ，如果是其他，则什么都不输出</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br>if [ $1 -eq 1 ]<br>then<br>        echo &quot;banzhang zhen shuai&quot;<br>elif [ $1 -eq 2 ]<br>then<br>        echo &quot;cls zhen mei&quot;<br>fi<br></code></pre></td></tr></table></figure>
<h5 id="case-语句"><a href="#case-语句" class="headerlink" title="case 语句"></a>case 语句</h5><h6 id="基本语法-1"><a href="#基本语法-1" class="headerlink" title="基本语法"></a>基本语法</h6><ul>
<li>case行尾必须是单词 “in”,每一个模式匹配必须以右括号 “)” 结束</li>
<li>双分号 “;;” 表示命令序列结束，相当于java的break</li>
<li>最后的 “*)” 表示默认模式，相当于java的default</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">case $变量名 in  <br>&quot;值 1&quot;) <br>	如果变量的值等于1，执行程序1<br>;; <br>&quot;值 2&quot;) <br>	如果变量的值等于2，执行程序2	<br>;; <br>*） <br>	如果变量的值不是以上的值，则执行此程序<br>esac<br></code></pre></td></tr></table></figure>
<h6 id="举个栗子-1"><a href="#举个栗子-1" class="headerlink" title="举个栗子"></a>举个栗子</h6><p>输入一个数字，如果是 1，则输出 banzhang，如果是 2，则输出 cls，如果是其他，输出 renyao</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br>case $1 in<br>&quot;1&quot;)<br>        echo &quot;banzhang&quot;<br>;;<br><br>&quot;2&quot;)<br>        echo &quot;cls&quot;<br>;;<br><br>*)<br>        echo &quot;renyou&quot;<br>esac<br></code></pre></td></tr></table></figure>
<h5 id="For循环"><a href="#For循环" class="headerlink" title="For循环"></a>For循环</h5><h6 id="基本语法1"><a href="#基本语法1" class="headerlink" title="基本语法1"></a>基本语法1</h6><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">for(( 初始值;循环控制添加;变量变化 ))<br>do<br>	程序<br>done<br></code></pre></td></tr></table></figure>
<h6 id="举个栗子1"><a href="#举个栗子1" class="headerlink" title="举个栗子1"></a>举个栗子1</h6><p>输出从1加到100的值</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><br>s=0<br>for ((i=1;i&lt;=100;i++))<br>do<br>        s=$[$s+$i]<br>done<br>echo &quot;cong1jiadao100:$s&quot;<br></code></pre></td></tr></table></figure>
<h6 id="基本语法2"><a href="#基本语法2" class="headerlink" title="基本语法2"></a>基本语法2</h6><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">for 变量 in 值1 值2 值3...<br>do<br>	程序<br>done<br></code></pre></td></tr></table></figure>
<h6 id="举个栗子2"><a href="#举个栗子2" class="headerlink" title="举个栗子2"></a>举个栗子2</h6><p>打印所有输入参数</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><br>for i in &quot;$*&quot;<br>do<br>        echo &quot;banzhang xihuan $i&quot;<br>done<br><span class="hljs-meta prompt_">#</span><span class="language-bash">-----------------------------------</span><br>for j in &quot;$@&quot;<br>do<br>        echo &quot;banzhang xihuan $j&quot;<br>done<br></code></pre></td></tr></table></figure>
<h5 id="while-循环"><a href="#while-循环" class="headerlink" title="while 循环"></a>while 循环</h5><h6 id="基本语法-2"><a href="#基本语法-2" class="headerlink" title="基本语法"></a>基本语法</h6><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">while[ 条件判断式 ]<br>do<br>	程序<br>done<br></code></pre></td></tr></table></figure>
<h6 id="举个栗子-2"><a href="#举个栗子-2" class="headerlink" title="举个栗子"></a>举个栗子</h6><p>输出从1加到100的值</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><br>i=1<br>while [ $i -le 100 ]<br>do<br>        s=$[$s + $i]<br>        i=$[$i + 1]<br>done<br><br>echo $s<br></code></pre></td></tr></table></figure>
<h5 id="read-读取控制台输入"><a href="#read-读取控制台输入" class="headerlink" title="read 读取控制台输入"></a>read 读取控制台输入</h5><h6 id="基本语法-3"><a href="#基本语法-3" class="headerlink" title="基本语法"></a>基本语法</h6><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">read(选项)(参数)<br>选项：<br>	-p:指定读取值时的提示符<br>	-t:指定读取值时的等待的时间（秒）<br>参数：<br>	变量：指定读取值的变量名<br></code></pre></td></tr></table></figure>
<h6 id="举个栗子-3"><a href="#举个栗子-3" class="headerlink" title="举个栗子"></a>举个栗子</h6><p>提示7秒内，读取控制台输入的名称</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><br>read -t 7 -p &quot;input your name&quot; NAME<br><br>echo $NAME<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Shell运算符</title>
    <url>/posts/59561.html</url>
    <content><![CDATA[<h5 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h5><ol>
<li>$((运算式)) 或 $[运算式]</li>
<li>expr + - * / </li>
</ol>
<font color='red' font-size='40px'>注意，运算符号间要有空格</font>

<h5 id="举个加法栗子"><a href="#举个加法栗子" class="headerlink" title="举个加法栗子"></a>举个加法栗子</h5><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">expr 3 + 2<br>5<br></code></pre></td></tr></table></figure>
<h5 id="举栗子-2-3-4"><a href="#举栗子-2-3-4" class="headerlink" title="举栗子[(2+3)*4]"></a>举栗子[(2+3)*4]</h5><p>需要使用键盘左上角的<kbd>`</kbd>,把需要提前运算的包起来</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">expr `expr 2 + 3` \* 4<br></code></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">s=$[(2+3)*4]<br>echo $s<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Shell工具(二)</title>
    <url>/posts/55957.html</url>
    <content><![CDATA[<h5 id="awk工具"><a href="#awk工具" class="headerlink" title="awk工具"></a>awk工具</h5><blockquote>
<p>强大的文本分析工具，把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行分析处理。</p>
</blockquote>
<p>awk [选项参数] ‘pattern1{action1}’ filename</p>
<ul>
<li>pattern：表示awk在数据中查找的内容</li>
<li>action：找到匹配内容时执行命令</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>选项参数</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>-F</td>
<td>指定输入文件分隔符</td>
</tr>
<tr>
<td>-v</td>
<td>赋值一个用户定义变量</td>
</tr>
</tbody>
</table>
</div>
<h6 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h6><p>数据准备的是<code>/etc/passwd</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@b09ed0cc2c9d opt]# cat passwd<br>root:x:0:0:root:/root:/bin/bash<br>bin:x:1:1:bin:/bin:/sbin/nologin<br>daemon:x:2:2:daemon:/sbin:/sbin/nologin<br>adm:x:3:4:adm:/var/adm:/sbin/nologin<br>lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin<br>sync:x:5:0:sync:/sbin:/bin/sync<br>shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown<br>halt:x:7:0:halt:/sbin:/sbin/halt<br>mail:x:8:12:mail:/var/spool/mail:/sbin/nologin<br>operator:x:11:0:operator:/root:/sbin/nologin<br>games:x:12:100:games:/usr/games:/sbin/nologin<br>ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin<br>nobody:x:99:99:Nobody:/:/sbin/nologin<br>systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin<br>dbus:x:81:81:System message bus:/:/sbin/nologin<br></code></pre></td></tr></table></figure>
<p>搜素passwd文件以root关键字开头的所有航，并输出该行的第7列</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@b09ed0cc2c9d opt]# awk -F : &#x27;/^root/&#123;print $7&#125;&#x27; passwd<br>/bin/bash<br>[root@b09ed0cc2c9d opt]#<br></code></pre></td></tr></table></figure>
<p>搜素passwd文件以root关键字开头的所有航，并输出该行的第1列和第7列，输出时以逗号分隔</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@b09ed0cc2c9d opt]# awk -F : &#x27;/^root/&#123;print $1&quot;,&quot;$7&#125;&#x27; passwd<br>root,/bin/bash<br></code></pre></td></tr></table></figure>
<p>只显示/etc/passwd的第一列和第7列，以逗号分隔，且在所有航前面添加列名 user,shell在最后一行添加 ddd, /bin/zuishuai</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@b09ed0cc2c9d opt]# awk -F : &#x27;BEGIN&#123;print &quot;user,shell&quot;&#125; &#123;print $1&quot;,&quot;$7&#125; END&#123;print &quot;ddd,bin/zuishuai&quot;&#125;&#x27; passwd<br></code></pre></td></tr></table></figure>
<font color='red' font-size='40px'>注意：BEGIN 在所有数据读取行之前执行； END 在所有数据执行之后执行</font>

<p>将passwd 文件中的用户id增加数值1并输出</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@b09ed0cc2c9d opt]# awk -F : -v i=1 &#x27;&#123;print $3+i&#125;&#x27; passwd<br></code></pre></td></tr></table></figure>
<h6 id="内置变量"><a href="#内置变量" class="headerlink" title="内置变量"></a>内置变量</h6><div class="table-container">
<table>
<thead>
<tr>
<th>变量</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>filename</td>
<td>文件名</td>
</tr>
<tr>
<td>nr</td>
<td>已读的记录数</td>
</tr>
<tr>
<td>nf</td>
<td>浏览记录的域的个数</td>
</tr>
</tbody>
</table>
</div>
<h6 id="举个栗子-1"><a href="#举个栗子-1" class="headerlink" title="举个栗子"></a>举个栗子</h6><p>数据准备</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@b09ed0cc2c9d opt]# cat sed.txt<br>dong shen<br>guan zhen<br>wo  wo<br>lai  lai<br><br>le  le<br></code></pre></td></tr></table></figure>
<p>统计passwd文件名，每行的行号，每列的列数</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">[root@b09ed0cc2c9d opt]# awk -F : &#x27;&#123;print FILENAME &quot;,&quot; NR &quot;,&quot; NF&#125;&#x27; passwd<br></code></pre></td></tr></table></figure>
<p>打印空行所在的行号</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">awk &#x27;/^$/ &#123;print NR&#125;&#x27; sed.txt<br></code></pre></td></tr></table></figure>
<h5 id="sort工具"><a href="#sort工具" class="headerlink" title="sort工具"></a>sort工具</h5><blockquote>
<p>文件排序</p>
</blockquote>
<p>sort(选项)（参数）</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-n</td>
<td>按照数值大小排序</td>
</tr>
<tr>
<td>-r</td>
<td>以相反的顺序排序</td>
</tr>
<tr>
<td>-t</td>
<td>设置排序使用的分隔字符</td>
</tr>
<tr>
<td>-k</td>
<td>指定需要排序的列</td>
</tr>
</tbody>
</table>
</div>
<p>参数是<code>指定待排序文件列表</code></p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>开发时遇到端口冲突解决办法</title>
    <url>/posts/58345.html</url>
    <content><![CDATA[<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>在<code>resources</code>下面新建文件<code>application.properties</code>,名称不能变，只能是这个，运行时系统会自动获取这个端口数据</p>
<p>在里面输入代码数据</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java">server.port=$&#123;port:<span class="hljs-number">8888</span>&#125;<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>接口开发环境部署</title>
    <url>/posts/557.html</url>
    <content><![CDATA[<h4 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h4><ul>
<li>IDEA</li>
<li>Maven</li>
<li>Spring Boot</li>
<li>JDK_86001</li>
</ul>
<h4 id="在idea安装SpringBoot插件"><a href="#在idea安装SpringBoot插件" class="headerlink" title="在idea安装SpringBoot插件"></a>在idea安装SpringBoot插件</h4><p>在maven下安装插件，需要在<code>pox.xml</code>文件输入下面的数据，然后更新文件<br><figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><br>&lt;properties&gt;<br>    &lt;maven.compiler.source&gt;<span class="hljs-number">8</span>&lt;/maven.compiler.source&gt;<br>    &lt;maven.compiler.target&gt;<span class="hljs-number">8</span>&lt;/maven.compiler.target&gt;<br>    &lt;springboot.version&gt;<span class="hljs-number">2.5</span><span class="hljs-number">.6</span>&lt;/springboot.version&gt;<br>    &lt;swagger.version&gt;<span class="hljs-number">2.9</span><span class="hljs-number">.2</span>&lt;/swagger.version&gt;<br>&lt;/properties&gt;<br><br>&lt;dependencies&gt;<br>    &lt;!--    springboot <span class="hljs-number">2.5</span><span class="hljs-number">.6</span>    --&gt;<br>    &lt;dependency&gt;<br>        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br>        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;<br>        &lt;version&gt;$&#123;springboot.version&#125;&lt;/version&gt;<br>        &lt;type&gt;pom&lt;/type&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br>        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;<br>        &lt;version&gt;$&#123;springboot.version&#125;&lt;/version&gt;<br>    &lt;/dependency&gt;<br>&lt;/dependencies&gt;<br><br></code></pre></td></tr></table></figure><br>上面的<code>$&#123;springboot.version&#125;</code>是在上面<properties>里面定义的版本信息，如果多个插件的版本一致就可以在属性上进行定义，然后使用变量进行引用</p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>返回cookie的Get接口开发</title>
    <url>/posts/24951.html</url>
    <content><![CDATA[<h4 id="位置布局"><a href="#位置布局" class="headerlink" title="位置布局"></a>位置布局</h4><figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java">- java<br>  - com.course.server<br>    - intertype<br>      MyGetMethod<br>    Application<br>- resources<br>  - application.properties<br></code></pre></td></tr></table></figure>
<h4 id="Application-类"><a href="#Application-类" class="headerlink" title="Application 类"></a>Application 类</h4><p>创建<code>Application.java</code>类，用来运行接口,类名只能是<code>Application</code>,不能自定义</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootApplication</span><br><span class="hljs-meta">@Controller(&quot;com.course.server.intertype&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Application</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        SpringApplication.run(Application.class, args);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>
<ul>
<li><code>@SpringBootApplication</code> 作用是给当前类标明是运行的主类，相当于被SpringBoot托管了</li>
<li><code>@Controller(&quot;com.course.server.intertype&quot;)</code> 钩子标识符，扫描包下面的类，被Springboot托管</li>
</ul>
<h4 id="编写Get接口"><a href="#编写Get接口" class="headerlink" title="编写Get接口"></a>编写Get接口</h4><p>创建<code>MyGetMethod</code>类</p>
<p>类名上有修饰符<code>@RestController</code>和<code>@Api(value = &quot;/&quot;)</code></p>
<ul>
<li><code>@RestController</code>  标识该类会被扫描到，然后被SpringBoot托管</li>
<li><code>@Api(value = &quot;/&quot;)</code>  可加可不加</li>
<li><code>@RequestMapping(value = &quot;访问路径&quot;, method = 访问方法)</code>  定义接口的访问路径及访问方法</li>
<li><code>@ApiOperation(value = &quot;接口信息&quot;, httpMethod = &quot;接口的请求方法&quot;)</code>  展示接口的基本信息和它的请求方法，可加可不加</li>
</ul>
<p>下面是代码信息，之后的所有<kbd>GET</kbd>接口都在该类里面写接口方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@Api(value = &quot;/&quot;, tags = &#123;SwaggerConfig.TagGet&#125; )</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyGetMethod</span> &#123;<br><br>    <span class="hljs-meta">@RequestMapping(value = &quot;/getCookies&quot;, method = RequestMethod.GET)</span><br>    <span class="hljs-meta">@ApiOperation(value = &quot;通过这个方法可以获得cookies&quot;, httpMethod = &quot;GET&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getCookies</span><span class="hljs-params">(HttpServletResponse response)</span>&#123;<br><br>        <span class="hljs-comment">// HttpServerletRequest  装请求信息类</span><br>        <span class="hljs-comment">// HttpServerletResponse  装响应信息类</span><br><br>        <span class="hljs-type">Cookie</span> <span class="hljs-variable">cookie</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Cookie</span>(<span class="hljs-string">&quot;login&quot;</span>, <span class="hljs-string">&quot;True&quot;</span>);<br><br>        response.addCookie(cookie);<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;恭喜获得cookies信息成功&quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>
<p>上面就是返回cookie的get接口开发,接下来就是 需要携带cookies信息才能访问的get请求</p>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>需要cookie访问的Get接口开发</title>
    <url>/posts/15521.html</url>
    <content><![CDATA[<h4 id="编写需要cookie才能访问的接口"><a href="#编写需要cookie才能访问的接口" class="headerlink" title="编写需要cookie才能访问的接口"></a>编写需要cookie才能访问的接口</h4><p>这个接口还是在<code>MyGetMethod</code>类里面编写方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 要求客户端携带cookie访问</span><br><span class="hljs-comment"> * 这是一个需要携带cookies信息才能访问的get请求</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@RequestMapping(value = &quot;/get/with/cookies&quot;, method = RequestMethod.GET)</span><br><span class="hljs-meta">@ApiOperation(value = &quot;要求客户端携带cookie访问&quot;, httpMethod = &quot;GET&quot;)</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">getWithCookies</span><span class="hljs-params">(HttpServletRequest request)</span>&#123;<br>    Cookie[] cookies = request.getCookies();<br>    <span class="hljs-keyword">if</span>(Objects.isNull(cookies))&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;你必须携带cookies信息来&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(Cookie cookie : cookies)&#123;<br>        <span class="hljs-keyword">if</span>(cookie.getName().equals(<span class="hljs-string">&quot;login&quot;</span>) &amp;&amp; cookie.getValue().equals(<span class="hljs-string">&quot;True&quot;</span>))&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;恭喜你，访问成功！，这是一个需要携带cookies信息才能访问的get请求&quot;</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;你必须携带cookies信息来&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>需要参数才能访问的get请求</title>
    <url>/posts/7613.html</url>
    <content><![CDATA[<h4 id="编写需要参数才能访问的get请求"><a href="#编写需要参数才能访问的get请求" class="headerlink" title="编写需要参数才能访问的get请求"></a>编写需要参数才能访问的get请求</h4><p>使用参数就要用到<code>@RequestParam 参数类型 参数变量</code>，可以有多个参数</p>
<p>这个接口还是在<code>MyGetMethod</code>类里面编写方法，有两种方法</p>
<p>第一种<code>url:key=value&amp;&amp;key=value</code>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 开发一个需要参数才能访问的get请求</span><br><span class="hljs-comment"> * 模拟获取商品列表</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@RequestMapping(value = &quot;/get/with/param&quot;, method = RequestMethod.GET)</span><br><span class="hljs-meta">@ApiOperation(value = &quot;需要参数才能访问的get请求的第一种实现方法&quot;, httpMethod = &quot;GET&quot;)</span><br><span class="hljs-keyword">public</span> Map&lt;String, Integer&gt; <span class="hljs-title function_">getList</span><span class="hljs-params">(<span class="hljs-meta">@RequestParam</span> Integer start,</span><br><span class="hljs-params">                                    <span class="hljs-meta">@RequestParam</span> Integer end)</span>&#123;<br><br>    Map&lt;String, Integer&gt; myList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br><br>    myList.put(<span class="hljs-string">&quot;鞋&quot;</span>,<span class="hljs-number">400</span>);<br>    myList.put(<span class="hljs-string">&quot;电脑&quot;</span>,<span class="hljs-number">5000</span>);<br>    myList.put(<span class="hljs-string">&quot;手机&quot;</span>,<span class="hljs-number">3500</span>);<br><br>    <span class="hljs-keyword">return</span> myList;<br><br>&#125;<br></code></pre></td></tr></table></figure>
<p>方法二<code>url: ip:port/get/with/param/10/20</code>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 第二种需要携带参数访问的get请求</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-meta">@RequestMapping(value = &quot;/get/with/param/&#123;start&#125;/&#123;end&#125;&quot;, method = RequestMethod.GET)</span><br><span class="hljs-meta">@ApiOperation(value = &quot;需要参数才能访问的get请求的第二种实现方法&quot;, httpMethod = &quot;GET&quot;)</span><br><span class="hljs-keyword">public</span> Map&lt;String,Integer&gt; <span class="hljs-title function_">myGetList</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable</span> Integer start,</span><br><span class="hljs-params">                                    <span class="hljs-meta">@PathVariable</span> Integer end)</span>&#123;<br><br>    Map&lt;String, Integer&gt; myList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br><br>    myList.put(<span class="hljs-string">&quot;鞋&quot;</span>,<span class="hljs-number">400</span>);<br>    myList.put(<span class="hljs-string">&quot;电脑&quot;</span>,<span class="hljs-number">5000</span>);<br>    myList.put(<span class="hljs-string">&quot;手机&quot;</span>,<span class="hljs-number">3500</span>);<br><br>    <span class="hljs-keyword">return</span> myList;<br>&#125;<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>开发获取用户列表的Post接口</title>
    <url>/posts/16785.html</url>
    <content><![CDATA[<h3 id="开发获取用户列表的post请求"><a href="#开发获取用户列表的post请求" class="headerlink" title="开发获取用户列表的post请求"></a>开发获取用户列表的post请求</h3><h4 id="开发添加人员信息时需要的字段数据"><a href="#开发添加人员信息时需要的字段数据" class="headerlink" title="开发添加人员信息时需要的字段数据"></a>开发添加人员信息时需要的字段数据</h4><p>首先，写一个<code>User</code>类，这将是添加时的字段数据</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">User</span> &#123;<br>    <span class="hljs-keyword">private</span> String userName;<br>    <span class="hljs-keyword">private</span> String password;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> String age;<br>    <span class="hljs-keyword">private</span> String sex;<br>&#125;<br></code></pre></td></tr></table></figure>
<h4 id="然后开始写怎么获取用户列表-相当于添加用户"><a href="#然后开始写怎么获取用户列表-相当于添加用户" class="headerlink" title="然后开始写怎么获取用户列表,相当于添加用户"></a>然后开始写怎么获取用户列表,相当于添加用户</h4><p><code>@RequestBody User u</code>请求post接口时，在Body填写上传的数据</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(value = &quot;/getUserList&quot;, method = RequestMethod.POST)</span><br><span class="hljs-meta">@ApiOperation(value = &quot;获取用户列表&quot;, httpMethod = &quot;POST&quot;)</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">getUserList</span><span class="hljs-params">(HttpServletRequest request,</span><br><span class="hljs-params">                        <span class="hljs-meta">@RequestBody</span> User u)</span>&#123;<br>    User user;<br>    <span class="hljs-comment">// 获取cookies</span><br>    Cookie[] cookies= request.getCookies();<br>    <span class="hljs-comment">// 验证cookies是否合法</span><br>    <span class="hljs-keyword">for</span>(Cookie c:cookies)&#123;<br>        <span class="hljs-keyword">if</span> (c.getName().equals(<span class="hljs-string">&quot;login&quot;</span>)<br>                &amp;&amp; c.getValue().equals(<span class="hljs-string">&quot;true&quot;</span>)<br>                &amp;&amp; u.getUserName().equals(<span class="hljs-string">&quot;zhangsan&quot;</span>)<br>                &amp;&amp; u.getPassword().equals(<span class="hljs-string">&quot;123456&quot;</span>))&#123;<br>            user = <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br>            user.setName(<span class="hljs-string">&quot;lisi&quot;</span>);<br>            user.setAge(<span class="hljs-string">&quot;18&quot;</span>);<br>            user.setSex(<span class="hljs-string">&quot;man&quot;</span>);<br>            <span class="hljs-keyword">return</span> user.toString();<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;参数不合法&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>开发获得cookie的Post登录接口</title>
    <url>/posts/42075.html</url>
    <content><![CDATA[<h3 id="开发获得cookie的Post登录接口"><a href="#开发获得cookie的Post登录接口" class="headerlink" title="开发获得cookie的Post登录接口"></a>开发获得cookie的Post登录接口</h3><p><code>@RequestMapping(value = &quot;/v1&quot;)</code>的作用是把这个value和方法上的登录地址进行拼接，比如：/v1/login</p>
<p><code>@RestController</code>标识该接口可以被托管</p>
<p>方法参数<code>@RequestParam(value = &quot;userName&quot;, required = true) String userName</code>,代码中的<code>required = true</code>起到必填的作用</p>
<h4 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h4><figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@Api(value = &quot;/&quot;, tags = &#123;SwaggerConfig.TagPost&#125;)</span><br><span class="hljs-meta">@RequestMapping(value = &quot;/v1&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyPostMethod</span> &#123;<br><br>    <span class="hljs-comment">//这个变量用来装cookie信息的</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Cookie cookie;<br><br>    <span class="hljs-comment">//用户登录成功获取到cookies，然后访问其他接口获取到列表</span><br>    <span class="hljs-meta">@RequestMapping(value = &quot;/login&quot;,method = RequestMethod.POST)</span><br>    <span class="hljs-meta">@ApiOperation(value = &quot;登录接口，成功后获取到cookies信息&quot;,httpMethod = &quot;POST&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">login</span><span class="hljs-params">(HttpServletResponse response,</span><br><span class="hljs-params">                        <span class="hljs-meta">@RequestParam(value = &quot;userName&quot;, required = true)</span> String userName,</span><br><span class="hljs-params">                        <span class="hljs-meta">@RequestParam(value = &quot;password&quot;, required = true)</span> String password)</span>&#123;<br>        <span class="hljs-keyword">if</span> (userName.equals(<span class="hljs-string">&quot;zhangsan&quot;</span>) &amp;&amp; password.equals(<span class="hljs-string">&quot;123456&quot;</span>))&#123;<br>            cookie = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Cookie</span>(<span class="hljs-string">&quot;login&quot;</span>,<span class="hljs-string">&quot;true&quot;</span>);<br>            response.addCookie(cookie);<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;恭喜你登录成功！&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;用户名或密码错误！&quot;</span>;<br><br>    &#125;<br></code></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>为博客编写bat文件</title>
    <url>/posts/2943790551.html</url>
    <content><![CDATA[<h2 id="bat"><a href="#bat" class="headerlink" title=".bat"></a>.bat</h2><p>window发布hexo博客时，需要多个命令，现在编写bat文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs win">@echo off<br>echo ====================================<br>echo 欢迎使用 Hexo 命令助手 请选择命令<br>echo 本地测试或上传网站时，将自动清理缓存<br>echo ====================================<br>echo 1. 访问作者博客<br>echo 2. 本地测试<br>echo 3. 上传网站<br>echo 4. 清理缓存<br>echo 5. 新建文章<br>echo 6. 新建页面<br>echo .<br>set /p input=&quot;请选择命令并按下回车：&quot;<br>if %input%==1 goto A<br>if %input%==2 goto B<br>if %input%==3 goto C<br>if %input%==4 goto D<br>if %input%==5 goto E<br>if %input%==6 goto F<br><br>:A<br>cls<br>start https://hipeach.eu.org<br>exit<br><br>:B<br>start cmd.exe /k &quot;@echo off &amp;&amp; hexo cl &amp;&amp; echo. &amp;&amp; echo 已清理缓存 &amp;&amp; hexo s &amp;&amp; pause &amp;&amp; exit&quot;<br><br><br>:C<br>start cmd.exe /k &quot;@echo off &amp;&amp; hexo cl &amp;&amp; echo. &amp;&amp; echo 已清理缓存 &amp;&amp; hexo d &amp;&amp; echo. &amp;&amp; echo 指令已完成 如出错请检查配置 &amp;&amp; pause &amp;&amp; cls &amp;&amp; 运行脚本.bat&quot;<br>exit<br><br>:D<br>start cmd.exe /k &quot;@echo off &amp;&amp; hexo cl &amp;&amp; echo. &amp;&amp; echo 已清理缓存 &amp;&amp; pause &amp;&amp; cls &amp;&amp; 运行脚本.bat&quot;<br>exit<br><br>:E<br>cls<br>set /p t1=&quot;请输入文章文件名：&quot; <br>start cmd.exe /k &quot;hexo n %t1% &amp;&amp; echo. &amp;&amp; echo 已在 source/_posts 目录下生成文件：%t1%.md 与 资源文件夹： %t1% &amp;&amp; pause &amp;&amp; exit&quot;<br>exit<br><br>:F<br>cls<br>set /p t2=&quot;请输入独立页面文件名：&quot;<br>start cmd.exe /k &quot;hexo n page %t2% &amp;&amp; echo. &amp;&amp; echo 已在 source 目录下生成一个文件夹： %t2% 并在文件夹内创建了文件： %t2%.md &amp;&amp; pause &amp;&amp; exit&quot;<br>exit<br><br>pause<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>window</tag>
      </tags>
  </entry>
  <entry>
    <title>Arrivals Thread Group的使用</title>
    <url>/posts/63387.html</url>
    <content><![CDATA[<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><ul>
<li><p>安装插件，下载<code>Custom Thread Groupsan</code>插件</p>
</li>
<li><p>添加<code>Arrivals Thread Group</code></p>
</li>
</ul>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><ul>
<li>Target Rate (arrivals/sec)  :  相当于<code>QPS</code>, 输入10就是10QPS</li>
<li>Ramp Up Time (sec)  :  在多少秒内达到最大的QPS，4代表在4秒内获得最大的QPS</li>
<li>Ramp-Up Steps Count  :  代表并发数，4代表实现4次的并发</li>
<li>Hold Target Rate Time (sec)  :  对系统压多长时间就输入多长时间 ,10代表压上10s</li>
<li>Concurrency Limit  :  最大启动多少线程，100代表最多启动100线程</li>
</ul>
<figure>
    <a href="../assets/img/jmeter/Arrivals Thread Group的使用/Arrivals首页.jpg"><img src="../assets/img/jmeter/Arrivals Thread Group的使用/Arrivals首页.jpg"></a>
</figure>]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>jmeter</tag>
      </tags>
  </entry>
  <entry>
    <title>Ultimate Thread Group的使用</title>
    <url>/posts/6166.html</url>
    <content><![CDATA[<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><ul>
<li><p>安装插件，下载<code>Custom Thread Groupsan</code>插件</p>
</li>
<li><p>添加<code>Ultimate Thread Group</code></p>
</li>
</ul>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><ul>
<li>Start Threads Count  :  线程数</li>
<li>Initial Delay,sec  :  线程延迟启动，0指的是立即启动；5代表五秒后启动</li>
<li>Startup Time,sec  :  线程及时启动，0代表立即启动，5代表五秒之内启动完成</li>
<li>Hold Load For,sec  :  启动后运行的时间，120代表运行120秒</li>
<li>Shutdown Time  :  代表运行结束后停止的时间，0代表运行结束后立即停止，5代表运行结束后五秒内停止</li>
</ul>
<figure>
    <a href="../assets/img/jmeter/Ultimate Thread Group的使用/Ultimate首页.PNG"><img src="../assets/img/jmeter/Ultimate Thread Group的使用/Ultimate首页.PNG"></a>
</figure>
]]></content>
      <categories>
        <category>工具教程</category>
      </categories>
      <tags>
        <tag>jmeter</tag>
      </tags>
  </entry>
</search>
